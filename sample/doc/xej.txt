UTF8 encoded * CID:||+v29WR~:   2023/07/31   v129W            update#= 1488||~v29WR~
***********************************************************************||~v29tR~
(目次)
    (0).はじめに.
        (A) 特徴
        (B) セットアップ
        (C) 操作
        (D) どうする
           .マウスの使用。
           .画面スクロール
           .右Ctrlキーを実行キーにする
           .コマンド履歴                                              ||~v129R~
           .タブの設定。
           .罫線など特殊文字入力。
           .制御文字入力.
           .国際化サポート。                                          ||~v124I~
           .日本語入力、コード変換。                                  ||~v124R~
           .EBCDICファイルサポート。                                              ||~v124R~||~v125R~
           .EBCDIC変換。                                              ||~v125R~
           .UTF8サポート。                                            ||~v124R~
           .短縮ファイル名。                                          ||~v129R~
           .シンタックスハイライト。                                  ||~v124R~
           .リモートファイルアクセス。
           .リモートシェル(rsh)。
           .TSO サポート。                                            ||~v124R~
           .ターミナルエミュレータ                                    ||~127ER~
           .バイナリーファイル。
           .大きなファイル.
           .2 ファイル間で行の複写.
           .2 ファイル間の比較/照合.
           .1 行置きに削除
           .ファイルの前の方と後ろの方を同時に見たい.
           .ある文字列を含む行を削除する
           .更新タグ.
           .SPFファイル(行番号付きファイル).
           .COBOLファイル。
           .固定長レコードファイル。                                  ||~v125R~
           .可変長レコードファイル。                                  ||~127BR~
           .ファイルプロファイルの保存。                              ||~v124R~
           .デレクトリー内のファイルの一斉文字列置換。                ||~v124R~
           .ディレクトリー間,複数ファイルの移動                       ||~v124R~
           .ファイルの行数表示
           .ファイルの誤削除
           .OS のコマンドを使用する
           .Excelなど他のアプリケーションの使用
           .VisualC++との連携。
           .他のプログラムの進行をチェックする。
           .ユーザーコマンド                                          ||~127ER~
           .HEX計算/時間計算/タイムスタンプ変換/小数点計算をする。
           .C言語括弧/#if/"/*"コメント/XMLタグ ペアサーチ。           ||~v129R~
           . カット & ペースト について.
           . ドラッグ & ドロップ について.
           .簡易表計算。
           .Log解析のための編集の例。
           .Android版                                                 ||~126BR~
           .Windows7-64ビット                                         ||~126FR~
           .シンボリックリンク(ジャンクション)                        ||~127AR~
        (E) 用語
           -ワークディレクトリー
           -CID (Change ID:変更タグ).
           -マージン.
           -SPF(行番号付き80桁)ファイル.
           -長文.
           -ADS(Alternative Data Stream)
                                                                      ||~127EI~
    (1).キー割り当ての省略値
    (2).画面
        (A-1) メニュー画面                                            
        (A-2)  0.0 色設定   *                                         
        (A-3)  0.1 コマンドキー*                                      
        (A-4)  0.2 キー割当変更*                                      
        (A-5)  0.3 キー割当表示*                                      
        (B)   ファイル名指定画面                                      
        (C)   編集/表示画面                                           
        (D)   ディレクトリー画面                                      
        (E)   コマンド出力                                            
        (F-1) ユーテリティー:比較                                     
        (F-2) ユーテリティー:探索                                     
    (3).編集コマンド
        (A) コマンド一覧
        (B) 補足
        (C) コマンド(ABC順)
    (4).行コマンド
        (A).表示/編集画面
        (B).ディレクトリー画面
    (5).DOS コマンド
    (6).INI ファイル
    (7)コマンドライン パラメータ

 *以下の説明で 各版固有の部分は
    #ifdef UNX
    #endif
  のように #ifdef/#ifndef で囲んでいます。
  また、/ で始まるコマンドパラメータは Linux版、AIX版では - で
  読み変えてください。
  またUNX は"Linux版、AIX版に共通"の意味です,XXEはLinux X-Windows版です。
**********************************************************************
(0).はじめに.
********************
  (A) 特徴         *
********************

   . メインフレームのエディター SPF に馴染んだプログラマーが PC で
     違和感なくプログラミングできるのを目指したエディターですが,
     普通の PC のエディターにあるような操作も出来るようになっています
     SPFファイル(80桁固定長で73-80が行番号)もサポートしています。
     (更新番号(79-80桁）も含めた行番号の自動更新).
     COBOL(カラム1-6が行番号)のRENumもサポート。
   .更新行に更新タグ(更新日付やバージョン番号)を自動付与する機能を使用
    すればプログラムの修正履歴の理解、虫潜入の究明、バージョン管理の
    たすけになります.
   .LogfileなどをExcelで解析できるように編集する機能も強力。(0)-(D)を参照。
   .バイナリーエディターの機能も有ります。
#if defined(W32) || defined(UNX)
   .Windows,Linux,AIX版ではリモートファイルも操作できます。
    内部的にFTPを使用し、編集、削除、複写、移動、連結をサポートします。
    リモートアドレスはxehostsファイルに登録してください。
    またrshが許可された環境ではリモートコマンド実行もサポートしています。
    s3270+TSO/E+IND$FILE でメインフレームのファイルアクセスもサポート ||~v124R~
#endif
   .ディレクトリー表示画面からは基本的ファイラー機能としてファイルの
    削除/複写/移動/属性設定/印刷をサポートしています.
   . Windows版(Windows9x,WindowsNT),OS/2版,DOS版,GCC版(DOS Extender版),
     Linux版とあるので大概の DOS/V パソコンで共通の操作で使用できます.
     AIX(IBMのUNIX)版もあります。AIX版はTeraTerm*経由で操作できます。
     puTTY(Windows用端末エミュレータ)経由で動かしている方もいるようです。||~v124I~
   .32ビット版のみです。                                              ||~v124R~
    BigEndianはHecules上のLinux/390(CentOS/Debian)での稼動確認をしました。||~v124R~

   *) TeraTerm は T.Teranisi(寺西 高)氏作のフリーウェアーです。
********************
  (B) セットアップ *
********************
#ifdef UNX
  . xe___.tgz を  tarで解凍(___はバージョン)。
    例えば "tar -zxvf xe107.tgz".
  ．xe 等 bin ファイルを PATH の通ったディレクトリーに移動する。
  ．xe [ファイル名] で起動する
    コマンドライン パラメータは "xe --h"(Linux,AIX版特有のヘルプ)
    または "xe -h"(共通ヘルプ)で表示されます。
  . ~/ (HOME,HOMEが / (ROOT)のときは /tmp)に ワークディレクトリー
    xe_wdnnnnn (nnnnnはユーザーID)が作成されます。
    ワークのディレクトリーは環境変数 xe あるいは -w コマンドライン
    パラメータで指定することもできます。このときは '%' を含めてユーザー
    ごとにディレクトリーを設定するようにしてください。
    例えば -w/tmp/XE/wd% とすると '%' をユーザーIDに置き換えた
    ディレクトリーがワークディレクトリーとして設定されます。
    省略値のディレクトリー以外を指定する場合は予め mkdir しておく必要
    があります。
    またディレクトリーリストでのUndoコマンド用保存ディレクトリーも
    省略値はHOMEです。これは環境変数 xe_undel で変更可能です。
    xe_undel_nnnnnのディレクトリーがそこに作成されます。
  . Linux/390 に SSH する場合                                         ||~v125R~
    ssh -X user@remote [gxe]   user:ユーザーID、remote:ホスト名ないしIPアドレス||~v125R~
    で local側をX-サーバーとしてGUIも動作しますが                     ||~v125R~
    /etc/ssh/sshd_config(リモート側), /etc/ssh/ssh_config(ローカル側)の設定が必要かもしれません||~v125R~
    文字化けする場合 AccetpEnv, SendEnv で LANG, LC_*の環境変数の受け渡しの設定、||~v125R~
    S390側に unifont の導入が必要かもしれません ("aptitude install unifont")。||~v125R~
#else
   .コマンドプロンプト画面で操作します.
   .ワークのディレクトリーを作って下さい,例えば md c:\xe.
    省略値は %USERPROFILE%\xe_wd (c:\Users\%USERNAME%\xe_wd) です。最初に立ち上げたときに自動的に作成します。||~v29tR~
    旧版の省略値は c:\xe_wd なのでこれがあれば継続使用します。        ||~v29tR~
   .ワークデレクトリーで .ZIP ファイルを解凍する,例えば unzip xewin.  ||~v124R~
   .省略値以外のときはワークディレクトリーを環境変数にセット,例えば set xe=c:\xe.
    毎回では面倒なのでこれをDOSではautoexe.bat、OS/2ではconfig.sys にいれます.||~v29tR~
    あるいは起動用のコマンドファイル .bat (OS/2では .cmd)を作成して
    そこに入れてもよい
    Windowsではコントロールパネルから環境変数を設定できます。         ||~v29tR~
   .ワークディレクトリーに PATH を通す.あるいは xe.exe を PATH の通った
    ディレクトリーに移動する
  #ifdef WXE
   .オンラインヘルプファイルwxe.hlpもwxe.exeと同じところにおいてください。
  #endif
  #ifdef GCC
      DOS版では 640K の制限で大きなファイルは表示出来ません.
      DPMI サーバーがある場合は GCC版を使って下さい.
      DOSではQEMM386などがDPMIサーバーですが,ない場合はGCC版同梱の
      CSDPMI4B.ZIPを解凍してEXEにパスを通してください.
      CWSDPMIは Nifty の FEXT forumからDownLoadしました。
      (CWSDPMI is by C.W.Sandamann)
  #endif
#endif

#if defined(UNX) || defined(W32)
   .rsh の許可設定
      rsh(リモートシェル)を使用するためにはリモートでの設定が必要です。
      rshサービスの許可とhostid/useridの許可を設定します
      サービスは/etc/inetd.confのコメントID(#)をはづす。
      xinetdが使用されている場合は/etc/xinetd.d/rshをdisable=noに設定する。
      hostid,useridの許可は/etc/hosts.equivあるいは指定するUserIDの
      リモートのホームDirの.rhostsを設定します。
      ログイン元ホスト名とログイン元User名ペアを定義してください。
      WindowsのUser名コントロールパネル->ユーザーアカウントで確認してください。
      permission denyが出る場合はsyslogを見てください
      Linuxの場合(/etc/syslog.confで定義した)/var/log/messagesに
      denyの理由が出ていると思います。
      pam_rhosts_auth:denied to ... が出ている場合 hosts.equiv ではなく
      .rhosts で設定してください。
      linuxでは.rhostsのPermissionは600でないといけない場合もあるようです。
#endif

#if defined(LNX) || defined(W32)
   .TSO アクセスの設定                                                ||~v124R~
      (D)の"TSO サポート"を参照                                       ||~v124R~

#endif

********************
  (C) 操作         *
********************

   .コマンドプロンプト画面で操作します.
   .xe と入力して下さい、次のメニュー画面がでます

          -------------- MENU ----------------------------------------
          ===>                                                        
#ifdef UNX
                                                      hostname = myhost
#else
                                                                      
#endif
          0  PARM         - Parameter Change                          
             0.0 (0) COLOR   - Palette and Color
             0.1 (A) SC-CMD  - Assing cmd-string to Short-Cut key
             0.2 (B) FUNC-KEY- Change Key Assignment
             0.3 (C) KEY-FUNC- Browse Key List
          1  BROWSE       - Display File                              
          2  EDIT         - Edit/Create File                          
          6  COMMAND      - Edit Command Result                       
          X  EXIT         - Save and Split End                        
          R  RETURN       - Save and Exit                             
          Q  QUIT         - Quit and Exit                             
                                                                      
   ."===>" の所に 2 を入力すると次のファイル名入力画面になります
                                                                      
#ifdef UNX
          EDIT--------------------------------------------------------
          ===>
                                                      hostname = myhost
             FILE NAME ===>
             DIRECTORY ===>
             Current   ----/home/userid
             Latest    ---- 1 - 16 of 200

           - /tmp/x1
#else
          EDIT--------------------------------------------------------
          ===>                                                        
                                                                      
             FILE NAME ===>                                           
             DRIVE     ===> : C D E
             DIRECTORY ===>                                           
             Current   ----D:\ibmcpp\src                              
             Latest    ---- 1 - 16 of 200
           - c:\windows

#endif
                                                                      
   ."FILE NAME===>" の所に ファイル名を入力すると次の編集画面になります
                                                                      
          EDIT---|G:\X1.C (95-05-13 10:44) .... ------ 001-(012)-072=Rep
          ===>                             ....                ===>HALF
          *******|********** TOP OF FILE * .... ************************
          0001000*int main(int argc,char *p....   //main        //~5513R
          0002000|{                                                   

   .尚、一度開いたファイル名はファイル名入力画面の下部にリストされます。
    このリストから選択することで編集画面を開くこともできます。
                                                                      
   .各画面の説明は (2)章 を見て下さい.
    全画面共通に 2 行目はコマンド入力行で ===> の後にコマンド入力します
    最初の画面で "e ファイル名" と入力することで 2 番目の画面は飛ばす
    ことが出来ます. "e" は EDIt コマンドの省略型です.コマンドの詳細は
    (3)章あるいは(5)章を見て下さい.
    さらに最初のコマンドプロンプトでの入力で xe ファイル名とすることで
    最初の MENU 画面も飛ばせます.コマンドラインパラメータは(7)章です

   .編集画面は"|"で左右に区切られていて左が行番号,右がファイル内容で.
    ファイルの編集は編集キーを右側の部分に作用させます.
    例えばカーソル位置から後ろを削除するのには End キーを使用します.
    編集キーの説明は (1)章です.
    左側の行番号欄には行コマンドを入力しての行単位の編集ができます.
    例えばある範囲の行を削除するには削除したい範囲の最初と最後の行の
    行番号欄に dd を入力して実行キーを押します.
    編集画面の行コマンドの説明は (4)章-(A)です

   .EDIt コマンドでファイル名がディレクトリーの場合次のディレクトリー
    画面が表示されます.

#ifdef UNX

   EDIT---|myhost|/tmp (95-09-17 16:54)....-----------------------=Rep
   ===>                                ....                  ===>HALF
   ****|********** TOP OF LIST ********....***************************
   _001|: /                       x400           649,728 /  1,457,664
   _002||: tmp                    777-t    00-03-25  22:07 root/toot
   _003|||. DISPCHAR C            644--    00-12-17  13:19 bin/bin
   _004|||. DOSFF    MAK          755--    00-12-16  09:49 akir/users
   _005|||- FC10                  644--    00-12-15  23:10 eiko/users
   _006||||- IIIII                755--    00-12-25  23:07 youi/users
   _007|||||+ IU                  755--    00-12-25  23:06 mich/users
   _008|||||+ LL                  755--    00-12-25  23:06 oosa/users
   _009|||||. UFILET   C          755--    00-12-25  22:12 izum/users
   _010||||+ IU                   755--    00-12-25  23:06 ohts/users
   _011||||.@slinkf1              755--    00-12-29  11:49 ikeu/users

#else

   EDIT---|G:\src (95-09-17 16:54) ----....-----------------------=Rep
   ===>                                ....                  ===>HALF 
   ****|********** TOP OF LIST ********....***************************
   _001|: G:\                     x800           649,728 /  1,457,664 
   _002||- src                    ----     94-11-17  22:07          0 
   _003|||. DISPCHAR C            ----     94-12-17  13:19        300 
   _004|||. DOSFF    MAK          ----     94-08-06  09:49        280 
   _005|||- FC10                  ----     95-09-15  23:10          0 
   _006||||- IIIII                ----     95-09-15  23:07          0 
   _007|||||+ IU                  ----     95-09-15  23:06          0 
   _008|||||+ LL                  ----     95-09-15  23:06          0 
   _009|||||. UFILET   C          A---     95-09-15  22:12      5,066 
   _010||||+ IU                   ----     95-09-15  23:06          0 
   _011||||. JKKJ                 A---     95-09-09  11:49          8 
   _012||||. JKKJ2                A---     95-08-29  21:51        219 
   _013||||+ LL                   ----     95-09-15  23:06          0 
   _014||||. UFILET   C           A---     95-09-15  22:12      5,066 

#endif
                                                                      
   .この画面は "-" 行コマンドでサブディレクトリーを展開した結果になって
    います.左端の _ の位置が行コマンド入力桁です.
    この画面でファイル/ディレクトリーの削除/複写/移動/印刷/改名/属性変更
    が出来ます.ディレクトリー表示画面での行コマンドは (4)章-(B) です.
   .ファイル/ディレクトリーの操作は 全ての画面の 2 行目のコマンド入力行
    にコマンド入力することによってもできます.
    例えば DEL x1.c などと。詳細は(5)章を見て下さい.
   .長いファイル名のときは S+F11 キーで表示幅を拡張したり、もとの
    表示幅に戻したりできます。

#if defined(W32) || defined(UNX)                                      ||~127AR~
    シンボリックリンクの時ファイル名の前に"@"がつきます。この時は
    S+F11でリンク先ファイル名を表示します。
#endif

   .最初のメニュー画面で 0 または 0.0 を入力すると次のカラー設定画面に
    なります
                                                                      
          OPTION - 1 ---- COLOR ----------------------------....----Rep
          ===>                                                        
                                                                      
          *Palette number assign (0 to 15) ****************....********
             Part of screen  palette no.             sample           
                             FG / BG (curr.,default)                  
             Title-Line      __ / __ (15/ 1, 15/ 1 ) ------- MENU -------
             Panel-Frame     __ / __ ( 7/ 0,  7/ 0 ) ===>command line etc
             Browse-Lineno   __ / __ ( 2/ 0,  2/ 0 ) 0001000| Browse  scr
             Browse-File     __ / __ ( 7/ 0,  7/ 0 )                  
             Edit-Lineno     __ / __ ( 2/ 0,  2/ 0 ) 0001000| Edit    scr
             Edit-File       __ / __ (14/ 0, 14/ 0 )                  
             DirList-Linecmd __ / __ (14/ 0, 14/ 0 ) 003|||. DIRLIST  EXE
             DirList-Lineno  __ / __ ( 2/ 0,  2/ 0 )                  
             DirList-File    __ / __ ( 7/ 0,  7/ 0 )                  
             CmdOut-Lineno   __ / __ ( 2/ 0,  2/ 0 ) 19:55 ===>> dir  
             CmdOut-Result   __ / __ (15/ 8, 15/ 8 )  Volume in drive G h
                                                                      
          *Palette color (0 to 3 for R G B each). MAXCOLOR=16. *********
             Palette  -->  0   1   2   3   4   5   6   7   8.... 14  15
             color    -->                                             
             RGB value-->000 ___ ___ ___ ___ ___ ___ ___ ___....___ ___
             current  -->000 002 020 022 200 202 210 222 111....220 333
             standard -->000 002 020 022 200 202 210 222 111....331 333
                                                                      
   .この画面で画面の配色を調整出来ます.
    編集キーの変更は MENU で 0.2 を入力しキー割当変更画面を呼び出すか
    .INI ファイルで設定します.
    バージョンアップで省略値を変更した場合でもINIファイルがあると
    それに従うので注意してください。
    キー順の機能割り当てを表示するには MENU で 0.3 と入力してください。
    その他の調整は .INI ファイルで行います.(6)章を見てください.

   .最初のメニュー画面で 6 を入力すると次のコマンド出力画面になります
                                                                      
          CMD----*::so1 (95-05-13 10:44)   .... ------ 001-(012)-072Rep
          ===>                             ....                ===>HALF
          *******|********** TOP OF FILE * .... ************************
          19:24 ===>> dir *.c                                         
                                                                      
           ドライブ G のボリューム・ラベルはありません                
           ボリューム・シリアル番号は E5EA:8815                       
           ディレクトリーは c:\xe                                     
                                                                      
   .この画面は 2 行目 のコマンド入力行に dir *.c と入力し実行キーを押した
    結果の画面ですが,OS のコマンドの結果を取り込み編集することが出来ます.
    この画面は編集画面と同じく,NUM コマンドで行番号欄を表示させれば
    編集画面行コマンドを使用することもできます

********************
  (D) どうする     *
********************



#if defined(WXE) || defined(LNX)
   .マウスの使用。
      WXE版とLinux版をXで使用するときはマウスが使用できます。
      WXE版-マウス操作、Linux版-制約の項を参照。
#endif

   .画面スクロール。
      編集/表示画面は縦横のスクロールがあり、ディレクトリー画面と
      ファイル名指定画面には縦スクロールがあります。
      ファイル名指定画面のスクロール単位はページのみです。
      キーの使い方は以下の通りです。

      方向キー(Up/Down/Left/Right)
        省略値では画面端にきてもスクロールしません。
        OPT コマンドで "OPT freecsr off"とすると画面端でページサイズの
        半分スクロールします。
        Scroll-Lock ON の時は1行/桁スクロールします。
      Shift+Up/Down
        1行上下にスクロール。
      PgDn/PgUp
        画面右上に表示されたスクロールサイズ欄の値で上下スクロールします。
        スクロールサイズ欄は PAGE,HALF,CSR,Max,任意の数字を上書きできます。
        "CSR"はカーソル位置を画面端にもって行くようにスクロールします。
      F10/F11(割り当て変更可能)
        画面右上に表示されたスクロールサイズ欄の値で左右スクロールします。
      Shift+PgUp/PgDn
        ファイルの最初/最後のページを表示。
      その他
        Shift+Right/Leftは行末、行頭にジャンプしますから結果的に
        スクロールされることもあります。
        画面右端で文字入力するとページサイズの半分右スクロールします。

#if defined(WXE) || defined(LNX)
      マウスの使用
        中ボタン回転による上下スクロールとShift+回転(横スクロール),
          Ctrl+回転(最初/最後のページ表示)が利用できます。
        wxe(Windows GUI版)では加えてTilt Wheel Mouseの中ボタン傾斜による
          横スクロール機能が使えます。
#endif


   .右Ctrlキーを実行キーにする
                                                                      ||~v124I~
      コマンドラインパラメータで /Yr を指定するか                     
      .INI ファイルで R-Ctl_ENTER = 1 を指定するか                    
      "OPT RCTL ON"コマンドを使用するか                               
      GUI版(wxe,gxe)ではSetupダイアログのR-Ctrlチェックボックスをセットします。||~v124R~
      コマンドラインパラメータでの指定があれば優先し、なければ        ||~v124R~
      OPTコマンドか、.INIファイルのどちらかででR-Ctrl使用の指定があれば||~v124R~
      R-Ctrlが実行キー、Enterキーが改行になります                     ||~v124R~
      GUI版のR-CtrlチェックボックスはOPTコマンドと同じです。          ||~v124R~
      GUI版とコンソール版はOPTコマンドについては同期しています。      ||~v124R~
                                                                      
      同時にini ファイルで R-Ctl_NewLine=1を指定すると右Ctrlキーは    
      改行に、Enterキーは実行キーのままなります。                     
      コマンドラインパラメータでは /Yrr になります。(Linux 版では -Yrr)||~v124I~
      iniファイルのR-Ctl_NewLineパラメータをコマンドラインで否定するには||~v124R~
      /Nrr を指定します。                                             ||~v124R~
                                                                      ||~v124R~
   .コマンド履歴                                                      ||~v129R~
                                                                      ||~v129R~
      -コマンドの履歴を保存していますが xe を終了するとき 直近の 40 個のみ保存されます||~v129R~
      -履歴からの呼び出しには次の機能キーを使用します                 ||~v129R~
       F12    :連続打鍵で直近から戻りながらコマンド入力行に表示します ||~v129R~
               新しいコマンドを入力すると位置が直近に設定されます     ||~v129R~
       S+F12  :直近に向かって戻りながらコマンド入力行に表示します     ||~v129R~
       C+F12  :直近のコマンドを再実行します                           ||~v129R~
       A+F12  :その画面に入力したコマンドに限って直近から戻りながら表示||~v129R~
       S+A+F12:その画面に入力したコマンドに限って直近にむかって戻りながら表示||~v129R~
       S+C+F12:履歴リスト画面を表示、以下のキーを使用します           ||~v129R~
               s : 履歴画面は終了してそのあとの画面のコマンド入力行にセット||~v129R~
               S : 履歴画面は終了せず履歴画面のコマンド入力行にセット ||~v129R~
               t : 画面分割の他方の画面のコマンド入力行にセット       ||~v129R~
                   分割していないときは "S" と同じ                    ||~v129R~
               x : 履歴画面は終了してそのあとの画面上でコマンドを実行 ||~v129R~
               X : 履歴画面は終了せず履歴画面上でコマンドを実行       ||~v129R~
               y : 画面分割の他方の画面でコマンドを実行               ||~v129R~
                   分割していないときは "X" と同じ                    ||~v129R~
      -wxe/gxe でマウス操作のサポート                                 ||~v129R~
        .右ボタンでコンテキストメニュー表示                           ||~v129R~
        .ダブルクリックで "x" コマンド処理                            ||~v129R~
        .選択した行のクリックで  "s" コマンド処理                     ||~v129R~
                                                                      ||~v124R~
#ifdef LNX                                                            ||~v124R~
                                                                      ||~v124R~
      コンソール版は右Ctrlキー単独の押し下げを検知できませんが、      ||~v124R~
      次のような方法もあります。                                      ||~v124R~
        X11 通常使用しないキーシンボルでターミナルエミュレータがEsc文字列を生成するものを選びます。||~127GR~
        それをxemodmap コマンドで 右Ctrlキーに割り当て、Esc文字列をxeに認識させる。||~127GI~
        そのEsc文字列を--kオプションでxeに認識させる。                ||~127GI~
      xmodmapで設定できるシンボルは /usr/include/X11/keysymdef.h で見ることが出来ます。||~127GI~
                                                                      ||~v124R~
      例.1)                                                           ||~127GR~
          私のFC12環境では KP_Begin で試しました                      ||~127GI~
          "xmodmap -pke" コマンドでは次のように表示されます           ||~127GI~
              keycode  84 = KP_Begin KP_5 KP_Begin KP_5               ||~127GI~
              keycode 105 = Control_R NoSymbol Control_R              ||~127GI~
          xmodmap コマンドで KP_Begin を Control_R に割り当てます     ||~127GI~
              xmodmap -e "keycode 105 = KP_Begin NoSymbol Control_R"  ||~127GI~
          同梱の xekbchk ユーティリティーは KP_5 は ^[[E を生成することを示します||~127GI~
          そこで次のようなファイルを用意し                            ||~127GI~
              keymap.rctl                                             ||~127GI~
                  ############################################################||~127GI~
                  [common]                                            ||~127GI~
                  [gnome-terminal]                                    ||~127GI~
                      KeyString:R-Ctl       =^[[E           #string by KP-5||~127GI~
                  ############################################################||~127GI~
          xe を "xe --kkeymap.rctl -Yr" で立ち上げる                  ||~127GR~
          ("opt rctl on" xeコマンドで  -yr オプションは不要になります)||~127GI~
          これで Enter は 改行キー, R-ctrl は 実行キーとなります      ||~127GI~
          "-yr -yrr" をしてすると Enter は実行キー, R-Ctrl は 改行キーとなります||~127GI~
                                                                      ||~127GI~
          (注)次の設定だけでで右Ctrlは実行キーになりますがEnterキーは改行キーにはなりません||~127GI~
          　　この設定で -Yr とすると Enter/Rctrlの両方が改行になります||~127GI~
                  keycode 105 = Return                                ||~127GI~
                                                                      ||~127GI~
      例.2)                                                           ||~127GI~
      	  適当なターミナルエミュレータがEsc文字を生成するキーシンボルが見つからない場合||~127GI~
          文字コードを利用することも出来ます                          ||~127GI~
          他のキーのコンビネーションで同じ文字列が生成されても区別は出来ないので||~127GI~
          お使いのロケールで使用しない文字コードを探してください。    ||~127GI~
          例えば yacute を使用する場合                                ||~127GI~
          	xmodmap  -e "keycode 109 = yacute"                        ||~127GR~
          とgnome-terminalなりkonsoleから入力すると右Ctrlでyacute(=0xfd)が生成される様になります。||~127GR~
      	  (キーコード番号 109 が Control_R かどうかは xmodmap -pk で確認してください。)||~127GR~
          yacuteはコードポイント0xfdですが Terminal Emulator の Character Encoding 設定により変わります。||~127GR~
      	  UTF8では 0xc3bd となります。                                ||~127GR~
                                                                      ||~v124R~
          生成される文字列をxeに認識させるにはkeymapファイルを使用します。||~127GR~
                                                                      ||~v124R~
              ##########################################################################||~127GR~
              [common]                                                ||~127GR~
              KeyString:R-Ctl       =\x8f\xab\xf2   #string by yacute ||~127GR~
              KeyString:R-Ctl       =\xc3\xbd       #UTF8 string for yacute||~127GR~
              KeyString:R-Ctl       =\xfd           #ISo-8859-1  for yacute||~127GR~
                                                                      ||~v124R~
          このファイル名を例えば key.rh9 とした場合iniファイルで      ||~127GR~
              LNX_Keymap  = /g/src/xe/key.rh9  ##(Linux Console Version Only) Keymap file to detect remapping by xmodmap cmd||~127GR~
          と記述します。(プロトタイプは ini コマンドで出力できます)   ||~127GR~
      	  ワークDirにおいた場合は  LNX_Keymap  = ::key.rh9  という記述でもＯＫです。||~127GR~
          コマンドラインパラメータの場合は --k/g/src/xe/key.rh9 のように指定します。||~127GR~
                                                                      ||~v124R~
      (注意)                                                          ||~127GI~
        GUI版の gxe は keycode番号でキーを識別するのでxmodmapでの設定変更の影響は||~127GR~
        受けませんが、xmodmapの変更はシステム全体の話なので影響を受けるアプリケーションも||~127GR~
        あると考えられます。                                          ||~127GR~
                                                                      ||~v124R~
#endif                                                                ||~v124R~

   .タブの設定。
      タブキーで飛ぶ桁数は省略値=4ですが TAB コマンドで設定変更できます。
      桁数はファイルごとあるいはディレクトリーの省略値を設定できます。(PROfileコマンド)||~v124R~
      文字挿入モードの時はタブ文字(\x09)が挿入されます。
      また COLコマンドでタブ停止位置指定のついたゲージ(ルーラー）を設定
      する ことで任意のタブ位置を設定できます。この場合文字更新モードの
      時タブジャンプし、文字挿入モードの時は通常のタブ文字挿入になります。
      ゲージの設定方法は COL コマンド参照。
                                                                      ||~v124R~
   .罫線など特殊文字入力。
      省略値では Alt+1,...あるいは Ctrl+10キーに罫線文字が割り当てられています
      縦書/横書キー(Alt+BS)でカーソルの移動方向を変えれば
      縦線を引く時に便利です.

      コードポイントのどれに罫線文字を割り当てるかはコードページによります。
      当初のIBM PC 標準はCP437(DOS LatinUS)で,0xb3などに割り当てられています。
      日本では半角カタカナを割り当てる必要から日本語DOSでは0x01などに異なる
      フォントの罫線文字が割り当てられています。
      MS-WindowsからIOS-8859-1のsupersetのCP1252(WinLatin1)となり欧州言語に
      追い出され罫線文字はなくなりました。
      但しOEMコードページとして罫線表示が可能なようです。
      xeでは日本語環境ではShif-JIS, それ以外ではCP437によっています。 ||~v29tR~
#if defined(LNX) && !defined(XXE)	//Linux Console version
      Linux コンソール版ではコードポイントをそのまま送っても罫線は描画されません。
      ACS呼び出しが必要なので罫線表示か欧州言語文字を表示するかは選択が必要です。
      OPT LINECH [on|off]
      on の時日本語DOSまたはCP437のいくつかのコードポイントが罫線描画に利用されます。
      ISO8859-1など >0xa0 を使う欧州言語の場合は off にしてください。 ||~v124R~
#endif

      ワークディレクトリーに専用のiniファイルを置き罫線用キーの割当て文字を変更可能。
      決まり文句の入力、IMEの入力が面倒なよく使う特殊文字などの入力に便利です。
         ファイル名は  xelch__.ini[.locale] の形式。
           __ : win,gcc,wxe,lnx,gtk の版の識別。
           locale:Linux版のみが対象で ja_JP などの言語識別。          ||~v128R~
                  Linuxのlocaleは locale コマンドで確認。
           ファイル名は=0.2画面の最後の行に表示してある。
           OPT LINECH コマンドで別のファイルを読み込んで一時的に設定を変更することも可能
         ファイルの中は、１キー１行で以下のように指定する。
           先頭が "#" はコメント行                                    ||~v128R~
           先頭が "//" の行があると以降の行は処理しない               ||~v128R~
             n=xxxx[,yyyy]
               n: 1,2...9,h,v  例えば "1" は Alt+"1", "h"は Alt+"-", "v"は Alt+^への割り当てを示す||~v124R~
                 OPT LINECH コマンドで設定を解除するには "1="のように
                 以下のxxx,yyyを指定しない行を置けばよい。
                 行コメントは "//" の後に指定する                     ||~v128R~
               xxxx,yyyy:Alt+nキーで書き出す文字列を指定する
                         各々100バイトまでの文字列を設定可能。
                         スペースなどの分離文字を含む時は引用符で囲む。
                         xxxxとyyyyと両方指定するとShiftキーなしのとき
                         xxxxが、ShiftキーONときyyyyが書き出される。
                         例えば Alt+1でxxxx,Alt+Shft+1でyyyy。
                         Hex指定は 0xxx1[xxx2... ]の形式 ||~v128R~    ||~v29tR~
                         ユニコードの指定は u-xxx1[,xxxx2,...] の形式 ||~v29tR~
                         文字列の場合はロケールコードで指定してください(lchファイルはCPLC)||~v29tR~
#if defined(LNX)|| !defined(XXE))                                     ||~v124I~
                         但しLinux コンソール版ではシフトキーではなく ||~v124I~
                         OPT LINECH が onのとき xxxx, off のとき yyyyが使用されます。||~v124I~
#endif                                                                ||~v124I~
               UTF8ファイルへの入力用に省略値としてAlt+Shift+nでUTF8コードを出力するように以下の設定をしてあります||~v29tR~
               ╚  ╩  ╝  ╠  ╬  ╣  ╔  ╦  ╗  ═  ║                        ||~v29tR~
               ユニコードではそれぞれ　255a,2569,255d,2560,256c,2563,2554,2566,2557,2550,2551||~v29tR~
               日本語環境ではCPLCファイル入力用に以下を省略値で設定しています||~v29tR~
			   Linux 版はEUCJPで                                      ||~v29tR~
                     0xa8b1  ┗   //1 :LLC low,left ,corner           ||~v29tR~
                     0xa8b5   ┻  //2 :LHS low,horz ,stopper          ||~v29tR~
                     0xa8b0   ┛  //3 :LRC low,right,corner           ||~v29tR~
                     0xa8b2   ┣  //4 :LVS low,vert ,stopper          ||~v29tR~
                     0xa8b6   ╋  //5 :CX  center                     ||~v29tR~
                     0xa8b4   ┫  //6 :RVS rig,vert ,stopper          ||~v29tR~
                     0xa8ae   ┏  //7 :ULC up ,left ,corner           ||~v29tR~
                     0xa8b3   ┳  //8 :UHS up ,horz ,stopper          ||~v29tR~
                     0xa8af   ┓  //9 :URC up ,right,corner           ||~v29tR~
                     0xa8ac   ━  //10:HL      horz ,line             ||~v29tR~
                     0xa8ad   ┃  //11:VL      vert ,line             ||~v29tR~
			   Windows 版はSJISで                                     ||~v29tR~
                     0x84af  ┗   //1 :LLC low,left ,corner           ||~v29tR~
                     0x84b3   ┻  //2 :LHS low,horz ,stopper          ||~v29tR~
                     0x84ae   ┛  //3 :LRC low,right,corner           ||~v29tR~
                     0x84b0   ┣  //4 :LVS low,vert ,stopper          ||~v29tR~
                     0x84b4   ╋  //5 :CX  center                     ||~v29tR~
                     0x84b2   ┫  //6 :RVS rig,vert ,stopper          ||~v29tR~
                     0x84ac   ┏  //7 :ULC up ,left ,corner           ||~v29tR~
                     0x84b1   ┳  //8 :UHS up ,horz ,stopper          ||~v29tR~
                     0x84ad   ┓  //9 :URC up ,right,corner           ||~v29tR~
                     0x84aa   ━  //10:HL      horz ,line             ||~v29tR~
                     0x84ab   ┃  //11:VL      vert ,line             ||~v29tR~
                 wxeではLigatureモードON/OFFで見え方が異なるようです  ||~v29tR~
                 xeではConhost(旧コマンドプロンプト)とTerminal(新コマンドプロンプト)でSJIS罫線の表示が異なるようです||~v29tR~
               Windows11ではCtrl+Shift+Pad-n は Numlockをオフにしないと Shift+ が検知できないようです||~v29tR~
                                                                      ||~v29tR~
          ファイルの設定例。
             # comment
              1=0xa8b1
              2=0xa8b5
              3=0xa8b0
              4=0xa8b2
              5=0xa8b6
              6=0xa8b4
              7=0xa8ae
              8=0xa8b3
              9=0xa4af
              h=0xa8ac
              v=0xa8ad
             //jpn euc  dbcs  この上の行が有効、行頭が"//"の行以降は処理されない
             2=u-102222,47; u2550  # input ucs4, A+2:u102222+u47, S+A+2: u2550||~v128R~
             1="こんにちは よろしくお願いします","毎度〜"
             1=84af 2=84b3 3=84ae 4=84b0 5=84b4 6=84b2 7=84ac 8=84b1 9=84ad h=84aa v=84ab  #(jpn sjis dbcs)
             1=c0 2=c1 3=d9 4=c3 5=c5 6=b4 7=da 8=c2 9=bf h=c4 v=b3 # (cp437)
             1=03 2=15 3=04 4=19 5=10 6=17 7=01 8=16 9=02 h=06 v=05 # (jpn DOS)
             1=e29494 2=e294b4 3=e29498 4=e2949c 5=e294bc 6=e294a4 7=e2948c 8=e294ac 9=e29490 h=e29480 v=e29482 # (utf)

             1=u-2514  h=u-2500 v=u-2502
             1=u-2514  h=u-2500 v=u-2502                              ||~v29tR~
             1=0x8b618b62,0x8b638b64                                  ||~v29tR~
             1=u-87fb,8abc,u-3041,3042,3043    //                     ||~v29tR~

   .制御文字入力.
      0x00(Ctrl+2),0x01-0x1f(Ctrl+A-Ctrl+-)を使用します.入力を制限する
      こともできます. .INI ファイル のValid_Ctrl_Charで指定.   (6)章
      対応する表示文字が無い場合特殊文字で代用表示されます
      どのコードにどの文字を当てるかは同じく Disp_trans_tbl,
      Disp_trans_charで設定します.                             (6)章
      (注)OPTコマンドでCtrl+文字キーの機能キー割り当てが有効
          (OPT CCFUNC ON)の場合は一部の機能割り当てされた
          CTL+文字キーは制御文字入力に使用できません。
          文字キーの機能キー割り当ての省略値はOFFです。
#if defined(WXE) || defined(XXE)
          OPT CCFUNC ON でもSetup dialogで Accelerator をチェックすると
          Acceleatorの方が有効になります。
          例えば accelerator Off の場合 Ctrl+aは行挿入ですが ON の場合は
          別名保存のDialogを開きます。
          AcceleraorでどのCtl+keyが使用されているかはDropDwonメニューを
          見てください。xewxej.txtにも記述があります。                ||~v124R~
          Shift+Ctrl+文字キーはアクセラレーターのCheckにかかわらずCtrl+文字キーと
          同じコードが生成されxeに届くのでCCFUNC設定に従う。
#endif
      また HEX コードが編集画面 1行目 5 (DBCSの時は 3)カラム目に
      表示されています.
      HEX 入力モード(Ctrl+F11)にすれば HEX 数字(0-9,A-F)による入力も
      できます.HEX 入力モードのとき編集画面 1行目 1 カラム目の x に続き
      入力途中の文字が表示されます。
      値がDBCSの第 1 文字に該当する場合で1文字のみ入力する場合は
      x キーを押して転送して下さい
      尚 HEX入力モードの時、HEXコード入力はカーソルがファイル編集エリア
      内にある時のみ受付られます。編集エリア外の時は1文字ずつそのまま
      受け付けられます。

      なお、HEXコマンド(Ctrl+F10)でHEX二段表示するかEHコマンドでファイルを
      HEXダンプ形式で開けばバイナリーエディターとしてもっと簡単に
      HEXコード入力できます。

#if defined(W32) || defined(LNX)                                      ||~v124I~
                                                                      ||~v124I~
   .国際化サポート。                                                  ||~v124I~
                                                                      ||~v124I~
      内部エラーメッセージは日本語環境以外では英語です。              ||~v124I~
      この項の議論はファイルのエンコーディングとその画面表示についてです。||~v124I~
                                                                      ||~v124I~
      日本語については"日本語入力、コード変換" を参照。               ||~v124I~
                                                                      ||~v125R~
      0x80<-->0xff を使用するSBCS言語ではLinuxコンソール版の場合      ||~v124I~
      罫線文字にならないように "OPT LINECH OFF"としてください。(1度コマンド入力すればOK)||~v124I~
                                                                      ||~v125R~
      (注)ファイル名についてはWindowsのシステムコードページに対して変換不能になる||~v125R~
          可能性があるので使用しないほうが良いでしょう。              ||~v125R~
                                                                      ||~v125R~
      Windowsでシステムの言語設定と異なる言語を使用するには、         ||~v125R~
        コンソール版はDOS窓のコードページ変更が必要です。             ||~v125R~
        ドイツ語などヨーロッパ言語の特殊文字(A-umlautなど)入力は      ||~v125R~
        "chcp 28591" あるいは "chcp 1252" と設定します。              ||~v125R~
        ともにISO-8859-1 で、1252 は 0x80-0x9fも割り当てあり。        ||~v125R~
                                                                      ||~v125R~
        GUI版(wxe) では /C パラメータで 文字セットを指定て立ち上げます。ex) /C1252。||~v125R~
        そして、Setup ダイアログの文字セットを Other から選択指定してください。||~v125R~
        ISO-8859-1の場合は文字セットはANSIを選択してください。        ||~v125R~
                                                                      ||~v125R~
        前提として、Windowsコントロールパネルで言語の追加と、言語バーでの言語選択の切り替えも必要となります。||~v125R~
                                                                      ||~v125R~
      Linuxでは                                                       ||~v125R~
        コンソール版はDOS窓(gnome-terminalなど)のコードページ設定が必要です。||~v125R~
        DOS窓の文字セット設定とLANG環境変数のUTF8有無は一致させてください。||~v125R~
        違っていると正しく表示されません。                            ||~v125R~
        例えば LANG が UTF8 のとき gnome-terminalの文字セットが各国語の場合"?"入力になります。||~v125R~
        LANG が UTF8 でないとき gnome-terminalの文字セットが UTF8 のとき画面が乱れます。||~v125R~
                                                                      ||~v125R~
        日本語キーボードからドイツ語などヨーロッパ言語の特殊文字(A-umlautなど)入力は||~v125R~
        キーボードマップの変更が必要です。                            ||~v125R~
        SCIMの設定をするか DOS窓から"setxkbmap de"などとします。      ||~v125R~
        SCIM 設定は FC5 では システム->設定->個人設定->SCIM設定です。 ||~v125R~
                                                                      ||~v125R~
        gxe/wxeの場合、フォントの選択によってはLigatureが発生します。     ||~v125R~||~v125R~
        Ligature とは 例えば fi, ff など隣接する文字の組み合わせによっては2文字を1文字表示にすることです。||~v125R~
        SetupダイアログのLigatureチェックボックスをOffにしておけば分離したまま表示します。||~v125R~
        Ligature を On にすると。カーソル表示位置と文字とが不一致になりますが||~v125R~
        xe では カーソル位置の表示文字はバイト位置の文字を表示します。||~v125R~
        "OPT LIGATURE" コマンド ないしは LIG コマンド(A+";" キー)も使用できます。   ||~v125R~||~v129R~
          但し、コンソール版はUTF8ファイルのみが対象です。            ||~v125R~||~v125R~
          また、バイナリーモードで開いた時はリガチャー表示は行われません。||~v125R~
        言語によってはLigatureしないと意味がないそうで結合文字との組み合わせを試してください。||~v125R~
        結合文字の表示方法設定は "OPT UNICOMB" コマンドないしは CMB コマンド(A+":" キー)。||~v125R~||~v129R~
                                                                      ||~v125R~
      Alt+u キー(効かない場合はUTF SWKBDコマンド)はキーボード入力の扱いを||~v125R~
      UTF8<-->各国語 切り替えます。                                   ||~v125R~
      UTF8文字の扱いはUTF8サポートを参照。                            ||~v125R~
                                                                      ||~v125R~
      -----------------------------------------------------------------------||~v124I~
                                                                      ||~v125R~
      以下は中国語(簡体/繁体)、韓国語 DBCSサポートの話です。          ||~v124I~||~v125R~
                                                                      ||~v125R~
      CN,KRの入力と表示を確認しましたが私は文字を認識することは出来ても理解できません、||~v124I~||~v125R~
      （特にハングル文字）使用経験報告をお待ちしています。            ||~v125R~
      テストはWindows版はXP日本語環境でしか出来ていません。           ||~v124I~
      Linux版はFC5で言語をスィッチしてテストしました。                ||~v125R~
      ロケールコードはトップメニューに表示されています。              ||~v124I~
      表示桁数は各国語コードでのバイト数です。                        ||~v125R~
      Linuxの場合、                                                   ||~v125R~
        GB18030の4桁DBCS, EUC の 3バイト補助漢字はタブパディング文字つきになります。||~v125R~
        パディング文字は TAB コマンドで表示ON/OFF切り替えられます。   ||~v125R~
        gxeでパディングの印刷の有無は WWScrPrtチェックボックスに従って制御します。||~v125R~
        3ないし4バイト文字をHex入力モード(C+F11でトグル)で入力する時は||~v125R~
        Hex入力モードは2バイトで転送するので２回に分けて入力してください。||~v125R~
        1バイトを転送するには"x"キーを使用します。                    ||~v125R~
                                                                      ||~v124I~
      XP日本語環境でC/K入力設定は以下のようにします。                 ||~v124I~
        コントロールパネル-->地域と言語-->言語タブの詳細ボタン で言語を追加します。||~v124I~
        IMEも追加してください。詳細は Web をサーチしてください。      ||~v124I~
          例えば　http://www2.yamanashi-ken.ac.jp/~yohnishi/pcinfo/windows_tips/international/win-cn-kr.html||~v124I~
                                                                      ||~v124I~
        GUI版(wxe) では Setup ダイアログの CharSet で Other のところでコンボボックスから選択してください。||~v125R~
        コンボボックスになければテキストボックスに数字を入れてください。(wingdi.hを参照)||~v125R~
        FontStyleの変更も必要でしょう。                               ||~v125R~
                                                                      ||~v125R~
        コンソール版(xe)はコマンドプロンプトのプロパティを設定します。||~v124I~
        DOS窓左上のアイコンでなくデスクトップのアイコン状態のコマンドプロンプトを右クリック、||~v124I~
        オプションタブで現在のコードページを設定する。                ||~v125R~
        コードページを変更するとフォントも変わると思います。          ||~v124I~
        コードページを設定することで言語バーに追加したIMEが選択できるようになる。||~v124I~
        設定できない場合は CHCP コマンドを使用してください            ||~v125R~
                                                                      ||~v124I~
        IME操作を若干。                                               ||~v124I~
           (コントロールパネル-->地域と言語-->言語タブの詳細ボタン-->キーの設定 で設定変更可能。)||~v124I~
           省略値は左Alt+Shiftで言語バーのIMEはスイッチする(GUI APPLはマウスで言語バー操作できます)||~v124I~
           韓国語 MS-IME2002     右Alt: 英数<-->ハングル。 Alt+^: 半角<-->全角英数||~v124I~
           簡体中国 PinYin       Shift: 変換<-->無変換。   Shift+Space: 半角<-->全角英数||~v124I~
                                 Ctrl+Space: 英数<-->漢字変換モード。 ||~v124I~
           繁体中国 Phonetic     同上                                 ||~v124I~
                                                                      ||~v124I~
        Windows CodePage & Font                                       ||~v124I~
                 Charset on Setup dialog      CodePage     CmdPromptFont   IME||~v124I~
                 Japanese 128                 cp 932       MSGothic        MSIME 2002||~v124I~
                 hangul   129                 cp 949       GulimChe        MSIME 2002||~v124I~
                 GB2312   134                 cp 936       NSimSun         PinYin 2002||~v124I~
                 Big5     136                 cp 950       MingLiU         NewPhonetic||~v124I~
                                                                      ||~v124I~
           Charsetはwingdi.hに以下の定義があります。                  ||~v124I~||~v128R~
                #define ANSI_CHARSET            0                     ||~v124I~
                #define DEFAULT_CHARSET         1                     ||~v124I~
                #define SYMBOL_CHARSET          2                     ||~v124I~
                #define SHIFTJIS_CHARSET        128                   ||~v124I~
                #define HANGEUL_CHARSET         129                   ||~v124I~
                #define HANGUL_CHARSET          129                   ||~v124I~
                #define GB2312_CHARSET          134                   ||~v124I~
                #define CHINESEBIG5_CHARSET     136                   ||~v124I~
                #define OEM_CHARSET             255                   ||~v124I~
                                                                      ||~v124I~
                #define JOHAB_CHARSET           130                   ||~v124I~
                #define HEBREW_CHARSET          177                   ||~v124I~
                #define ARABIC_CHARSET          178                   ||~v124I~
                #define GREEK_CHARSET           161                   ||~v124I~
                #define TURKISH_CHARSET         162                   ||~v124I~
                #define VIETNAMESE_CHARSET      163                   ||~v124I~
                #define THAI_CHARSET            222                   ||~v124I~
                #define EASTEUROPE_CHARSET      238                   ||~v124I~
                #define RUSSIAN_CHARSET         204                   ||~v124I~
                                                                      ||~v124I~
                #define MAC_CHARSET             77                    ||~v124I~
                #define BALTIC_CHARSET          186                   ||~v124I~
                                                                      ||~v124I~
      Linux(FedoraCore5の場合)では以下のようにします。(JP106キーボード)||~v124I~
        デスクトップ-->管理-->言語 で言語を選択し、ログアウト/ログインします。||~v124I~
        Korean            : 半角/全角キー:IME 呼び出し                ||~v124I~
        Chinese(簡体中文) : 半角/全角キー:IME 呼び出し                ||~v124I~
        Chinese(繁体中文) : 半角/全角キー:IME 呼び出し                ||~v124I~
                                                                      ||~v124I~
        尚、ターミナルエミュレータ(gnome-terminal,konsoleなど)で      ||~v124I~
        UTF8<-->非UTF8 Encodeingを変更した時は"export LANG=xxxx"で    ||~v124I~
        ローケール環境も変更してください。                            ||~v124I~
                                                                      ||~v124I~
      コマンドラインパラメータの追加。                                ||~v124I~
        -C   :環境から決定されるもの以外を使用したいとき指定する。    ||~v124I~
                                                                      ||~v124I~
              Windosw : Codepage。   ex) -c949  -cGerman_Germany.1252     ||~v124I~||~v125R~||~v125R~
                利用可能な値はxcv コマンドで見て下さい("xcv -List)||~v124I~||~126DR~
                Windowsコンソール版ではDOS窓のプロパティーでフォントが限定されるので||~v124I~
                指定変更すると文字が見えなくなるかもしれません。      ||~v124I~
                wxeではSetupダイアログでCharsetも合わせる必要があります。||~v124I~
                                                                      ||~v124I~
                Windows から Linux/390 に ssh したとき UTF8 文字により||~v124I~
                画面が乱れます。                                      ||~v124I~
                "xe -c437" とし >0x80 文字を "." で表示するようにしてください。||~v124I~||~v125R~
                                                                      ||~v124I~
              Linux  :Charset        ex) -cGBK, -ciso88591 -czh_CN.GB18030||~v126R~
                利用可能な値はxcv コマンドか iconv --listでListup。   ||~v124I~
                                                                      ||~v125R~
                省略値はLANG環境変数がUTF8でない時はそこに指定された文字セットを使用します。||~v125R~
       　       例えばLANG="de_DE.iso8859"なら iso88591               ||~v125R~
                LANGがUTF8のときは以下のように国コードから決めています。左から使用可能なものを選択します||~v126R~
                    zh_CN :GB18030,GBK,GB2312                         ||~v126R~
                    ko_KR :UHC,EUC-KR                                 ||~v126R~
                    ja_JP :eucjp                                      ||~v125R~
                                                                      ||~v126R~
                但し全画面コンソールの場合はiconvがサポートしていれば "ISO88591",||~v125R~
                いなければ "C" とします。                             ||~v125R~
                                                                      ||~v125R~
                これ以外の国の場合は国コードだけでsetlcaleしnl_langinfoで求めます。||~v125R~
                このsetlocaleが失敗したらiso88591を使います。         ||~v125R~
                                                                      ||~v126R~
                Axe では ICU を使用します                             ||~v126R~
    				zh_CN :"GB18030","GBK","GB2312"                   ||~v126R~
					ko_KR :"korean","EUC-KR"                          ||~v126R~
                    ja_JP :"EUC-JP"                                   ||~v126R~
                    zh_TW :"Big5-HKSCS","Big5"                        ||~v126R~
                    その他:"ISO-8859-1"                               ||~v126R~
                                                                      ||~v125R~
                gxeではGTKからの入力はutf8です、gxeはこの指定のCharsetにiconv変換し、||~v124I~
                表示もこのCharserからutf8変換します。                 ||~v124I~
                xeコンソール版では入力はターミナルエミュレータが変換したものを受け取ります。||~v124I~
                xeはターミナルエミュレータのCharsetをsetlocale(LANG環境変数)で検知します。||~v124I~||~v128R~
                (それがUTF8の場合別の方法で文字セットを判定します。） ||~v125R~
                xeはsetlocaleのCharsetからこの指定のCharsetに変換します。||~v124I~
                表示もこのCharserからucs変換し ncursesw で出力します。   ||~v124I~||~v125R~
                例。"あ" は EUC-JPでは 0xa4a2 で EUC-KR では 0xaaa2 です||~v124I~
                    IME窓で"a"キー,Enterキーを押した場合。            ||~v124I~
                                                                      ||~v124I~
                                           IMEからの入力       表示   ||~v124I~
                   ----------------------  ----------------    ------ ||~v124I~
                   EUC-JP.UTF8 + -cEUC-KR  aaa2("A" by KR)     "あ"   ||~v124I~
                   EUC-JP      + -cEUC-KR  a4a2("A" by JP)     "xx"   ||~v124I~
                                                                      ||~v124I~
                   "xx"はハングル文字(SJISでは表示できません),発音は "?k"らしい。||~v124I~
                   (xeコンソール版では空白で表示されることもあります。)||~v124I~
                                                                      ||~v124I~
        -Nm  : A+u でUTF8入力モード(コマンド行が =u=> を表示)のとき   ||~v129R~
               (UTF8エンコーディングでない) ロケールコードファイルに  ||~v129R~
               UTF8入力をロケールコードマルチバイトに変換せずにUTF8コードをセットする||~v129R~
                                                                      ||~v124I~
#endif // W32 || LNX                                                  ||~v124I~
                                                                      ||~v124I~
   .日本語入力、コード変換。                                          ||~v124R~

#ifdef UNX

    #ifdef AIX
      SJIS 使用。表示と入力が可能です。
    #endif

    #ifdef LNX
      EUC 使用。 CONSOLE上では kon の時に表示が可能です。konだけでは入力はできません。||~v124R~
      gnome-terminal,ktermなどのターミナルエミュレーターで入力が可能です。
                                                                      ||~v124I~
      半角カタカナの扱い。                                            ||~v124I~
      EUC-JPでは半角カタカナは SS2(0x8e)+xx(例えば"ア"は0x8eb1) 形式の２バイト１桁表示です。||~v124R~
      RH9版では印刷不能文字扱いでしたが、FC版から２桁(gxe:２桁表示,xe:半角カタカナ+タブ表示文字)表示になります。||~v124R~||~v125R~
      タブ表示文字は "Tab on/off" コマンドで表示を On/Off 出来ます。                                                                 ||~v124I~||~v125R~
      また3バイト漢字(補助漢字:SS3(0x8f)+DBCS)は"漢字"(2桁)+"タブ拡張文字"(1桁)で表示します。||~v124I~||~v125R~
    #endif

#else
      SJIS(MS932)使用。                                               ||~v124R~
#endif

      CVコマンドがSJIS,EUC,IBM-EBCDIC,unicode,UTF-8のコード変換を
      サポート。英小文字拡張<->カタカナ拡張の変換設定ミスによるの
      文字化けの戻しもサポート。
      またHEX表記の文字列の文字コードへの戻しもできます。
      例えばメインフレームとの通信ログなどはHEXダンプ行のみを         ||~v124R~
      表示して(例えば、xx;f 0 1 all)                                  ||~v124R~
      "cv x2c ebc 5-80:100 mult nx"                                   ||~v124R~
      とすれば HEX表記->EBCDIC->ASCII 変換結果を 100桁以降に書き出します。||~v124R~
      添付の xcv は同様の機能の 外部ツールです。                      ||~v124R~
                                                                      ||~v124R~
#if defined(W32) || defined(LNX)                                      ||~v124R~
                                                                      ||~v124R~
   .EBCDICファイルサポート。                                          ||~v125R~
                                                                      ||~v125R~
     (CV コマンド、XCV ユーティリティー、cfg ファイルの設定については次のEBCDIC変換も見て下さい)||~v125R~||~v125R~
                                                                      ||~v125R~
     -ロケールコードに変換せずに直接編集、HEX表示はEBCDICコードを表示します。||~v125R~
      メインフレームのEBCDICファイルを無変換でダウンロードしたファイルを編集したり||~v125R~
      無変換オプションでEBCDICファイルをNFSマウントして編集する場合を想定しています||~v125R~
      sshfs(Windowsには Dokan sshfs があります) で Linux/390 にアクセスする場合にも使用できます||~v125I~
      画面にはユニコードで出力するのでローカルのコードページにない文字も表示可能です。||~v125R~
      EBCDICコンバータは省略値が日本語環境はCP930,日本語環境以外ではCP037です。||~v125R~
      これはローカルの環境のことですのでリモートの環境がローカルと異なる場合は||~v125I~
      cfg ファイルで コンバータを指定してください。                   ||~v125I~
      wxeで文字化けする場合SetupダイアログでcharsetもDefault以外を試して見て下さい。||~v125I~
                                                                      ||~v125R~
     -EDIt/SAVe/REPlace/CREate/APPend/CUT/END/COPy/MOVe/PASte コマンドで CPEB オプションを指定||~v125R~
      不正なEBCDIC文字があるときこれを無視して開く時は IE オプションを指定する。||~v125R~
      ヘッダー行には "=E" , バイナリーモードの場合は "=e" で表示されます||~v125R~
      (ある程度の印刷不能文字があるとバイナリーモードとみなしますが、バイナリーモードとなると||~v129R~
      DBCSが表示されません、/Mt オプションを付けて強制的にテキストモードで開けばDBCSが表示されます)||~v129R~
      改行コードは /Mp(0x0d0a) /Mu(0x0a) を指定しない場合 0x15 です   ||~v129R~
        例。 "e file1 cpeb"                                           ||~v125R~
      cfg無しの場合あるいはcfg以外のコードページを使用する場合は CPEB:codepage の形式を使用します||~v125R~
        例。 "e file1 cpeb:IBM1047"                                   ||~v125R~
      cfg に戻す時には "CPEB=" のように空白のコードページを指定する   ||~v125R~
      セッションにつき最大７種類のコードページが使用できます。        ||~v125R~
      xe は 別名を認識できないので同じコードページには決まった名前を使用してください。||~v125R~
                                                                      ||~v125R~
      COPy/MOVe/PASte コマンドは指定のコードページからコピー先のコードページに変換され、||~v125R~
      SAVe/REPlace/CREate/APPend/CUT/ENDでは指定のコードページに変換して出力されます。||~v125R~
        例。 "rep file2 cpeb nx ie"                                   ||~v125R~
                                                                      ||~v125R~
      これらのコマンドでも CPEB:xx が使用できます。                   ||~v125R~
      出力時のオプションはプロファイルに記録されるので1度指定すればセッションを跨って有効です。||~v125R~
      またCOPy/MOVe/PASte コマンドはプロファイルの記録をチェックするので通常はCPxxの指定は不要でしょう。||~v125R~
      但しセッション間で　cfg　の　CONVERTER　パラメータを ICU から ICU 以外に変更、||~v125R~
      またはその逆の変更をするとネイミングが異なるため、コードページが見つからない結果になる可能性がある。||~v125R~
      そのため Cut&Paste の Paste の時 "無効なコードページ" のエラーが出ることもあります。||~v125R~
      その場合はcfgに従って変換される。                               ||~v125R~
      セッション間で CONVERTER パラメータを変更した場合は改めて CPEB=xxxを指定してください。||~v125R~
                                                                      ||~v125R~
      COPy/MOVe/PASte コマンドでプロファイルの記録に従った変換をしたくない場合は||~v125R~
      "B"(Binaryモード)サフィックスを指定してください                 ||~v125R~
      Binaryモードは複写先:UTF8ファイルはサポートされません。         ||~v125R~
      "B"サフィックスの指定は下記、コピー行コマンドの場合と同じです。 ||~v125R~
                                                                      ||~v125R~
      デレクトリーリストを開く時のCPEBオプションはフォルダー内のファイルの省略値となります。||~v125R~
      他のオプション(CPLC/CPU8/CPAS)で開くとプロファイルは上書きされます。||~v125R~
      尚、コードページは "TOP OF LINE" と "END OF LINE" 行に表示されます。||~v125R~
                                                                      ||~v125R~
      出力コマンドで変換エラーがあるときも最後まで出力されますがプロファイルは更新されません。||~v125R~||~v125R~
      変換エラー文字は代替文字に置換されます。                        ||~v125R~
      代替文字はコードページ依存ですが cfg ファイルで設定できます(外部コンバーター使用の場合)。||~v125R~
      DBCSの代替文字は定義されてない場合 u-fffd,u-ff1f(DBCS "?"),u-3000(DBCS space)の順に||~v125R~
      変換可能なものを採用します。                                    ||~v125R~
                                                                      ||~v125R~
     -行コマンド "C"/"M" でも コピー元とコピー先のコードページが異なれば変換されます。||~v125R~
      変換したくない場合は "B"(Binaryモード)サフィックスを指定してください||~v125R~
      Binaryモードは複写元、先とも UTF8ファイルはサポートされません。 ||~v125R~
      ロケールファイル-->EBCDICファイルのとき TAB(0x09)拡張によるスペースは削除されます。||~v125R~
        {A|B}[B][C][n][,b][.s]                                        ||~v125R~
          A : After, B: Before, B : Binary Mode, C : Copy with CID    ||~v125R~
          n : repeat, b : bandle, s : skip                            ||~v125R~
        例)　c3                                                       ||~v125R~
             :       Copy 3 lines After by Binary mode                ||~v125R~
             ab                                                       ||~v125R~
                                                                      ||~v125R~
     -行コマンド "=" でも コピー元とコピー先のコードページが異なれば変換されます。||~v125R~
      (UTF8、ロケールコードファイルとの比較ではEBCDIC-->UTF8,ロケール変換後に比較されます)||~v125R~
      Binaryモードで比較したい場合は "B"(Binaryモード)サフィックスを指定してください||~v125R~
      Binaryモードは UTF8ファイルではサポートされません。             ||~v125R~
      ロケールファイル-->EBCDICファイルのとき TAB(0x09)拡張によるスペースは無視されます。||~v125R~
        =[B][n][,b][.s]                                               ||~v125R~
        ==[B]                                                         ||~v125R~
      (どこか一箇所に"B"をつけてください。)                           ||~v125R~
                                                                      ||~v125R~
     -CV コマンドは CPLC(Locale コード)ファイルに対して B2M/M2B を使用できます。||~v125R~||~v125R~
      変換オプションは前記のcfgファイルを共用します。 -MFcfgfile  オプションは廃止です。||~v125R~||~v125R~
                                                                      ||~v125R~
      B2M/M2B で CPEB:ebcidc-codepage パラメータを指定することで mapping cfg 以外の||~v125R~
      EBCDIC コードページで変換できます。                             ||~v125R~
      EBCDIC ファイルを開いて B2M する場合は CPEB を省略するとそのファイルのコードページが使用されます。||~v125R~
        例) cv m2b cpeb:37                                            ||~v125R~
      EBCDICファイルのコードページを変更する場合は B2B オプションを使用してください||~v125R~
        例) cv b2b cpeb:1026                                          ||~v125R~
      但し、ファイルのコードページ属性は変更してないので画面表示は元のコードぺーじで表示される。||~v125R~
      新しいコードページに移行するには SETCP オプションを指定してください。||~v125R~
        例) cv b2b cpeb:1026 SETCP                                    ||~v125R~
                                                                      ||~v125R~
     -EBC コマンド。                                                  ||~v125R~
                                                                      ||~v125R~
      EBC コマンドでもコードページを変更できます。                    ||~v125R~
        例) EBC SETCP=CP935                                           ||~v125R~
      EBC コマンドでは元のデータは変更されません。指定のコードページに従って表示されます。||~v125R~
      従って他に変更がなければ保存操作でファイルは書き直されません。  ||~v125R~
      UNDo機能で、EBC/CV コマンドの SETCP オプションで設定したコードページは戻されます。||~v125R~
      SETCP オプションで設定したコードページはファイルを保存するとプロファイルに記録されます。||~v125R~
      "EBC SETCP=" で省略値のコードページに戻ります。                 ||~v127R~
                                                                      ||~v125R~
     -xcv ユーティリティー                                            ||~v125R~
                                                                      ||~v125R~
        B2M/M2B で "m"は現在のローカルコードページで"b"はebcmapfileで指定するか-CPEB:で指定します||~126DR~
          例) xcv -cm2b -cpeb:37 -mseteol localfile1  ebcfile1        ||~v125R~
        EBCDICのコードページを変更する場合は B2B を使用してください。 ||~v125R~
          例) xcv -cb2b -f:37 -t:1026 ebcfile1 -oebcfile2               ||~v125R~||~126DR~
        ICU コンバータを使用する場合は -mf: で指定のcfg ファイルで CONVERTER=1 を指定してするか||~126DR~
        -ICU オプションを指定してください                             ||~126DR~
          例) xcv -cb2b -f:IBM037 -t:IBM1047 -mf:xeebc.map ebcfile1 ebcfile2||~v125R~
              xcv -cb2b -f:IBM037 -t:IBM1047 -ICU          ebcfile1 ebcfile2||~126DR~
                                                                      ||~v125R~
                                                                      ||~v125R~
     -改行文字。                                                      ||~v125R~
        cfgファイルの改行コードの変換指定はREPlaceコマンドなどで変換出力||~v125R~
        するときに適用されますが、編集表示ではファイルは0x15 を 行末文字として行分割されます。||~v125R~
        行末文字とレコードモードのLRECL指定を以下のコマンドでサポート。||~v125R~
        LRECLの変更も可能。                                           ||~v125R~
          EDIt/BROwse, END, CREate/REPlace, SAVe, COPy/MOVe。         ||~v125R~
        但しSAVeはファイル名指定のときのみ指定可能                    ||~v125R~
        COPy/MOVe コマンドの Fxx は コピー元のLRECLの指定になります。 ||~v125R~
        尚 レコードモードのON/OFF, LRECL はプロファイルに保存しますが ||~v125R~
        行末文字の指定は省略値以外は毎回指定が必要です。              ||~v125R~
                                                                      ||~v125R~
            /M{t|p|u|m|e|r} /Fnn[-mm]                                 ||~v125R~
              e:EBCDIC-NL(0x15), r;RecordMode, nn:LRECL               ||~v125R~
        例。                                                          ||~v125R~
            e ebcf1 CPEB                        : EBCDIC ファイルテキストモード(行末文字=0x15)||~v125R~
            e ebcf1 CPEB  /mp                   : EBCDIC ファイルテキストモード(行末文字=0x0d0a)||~v125R~
            e ebcf1 CPEB  /mr /F72              : EBCDIC ファイル固定長レコードモード(LRECL=72)||~v125R~
                                                  LRECLの省略地は80.  ||~v125R~
            end /mu                             : 行末文字を 0x0a に変更。||~v125R~
            end /mr /f80                        : LRECL=80の固定長ファイル(行末文字無し)として保存。||~v125R~
            s ebcf1 CPEB /mr /F80               : (PC ファイルから) EBCDIC ファイルに変換。||~v125R~
                                                  出力はLRECL=80の固定長ファイル。||~v125R~
            rep u8f1 nx CPU8 /mp                : (固定長EBCDICファイルから) UTF8 ファイルに変換。||~v125R~
                                                  各行に行末文字0x0d0a追加されます。||~v125R~
                                                                      ||~v125R~
     -DBCS について                                                   ||~v125R~
      EBCDIC では 2バイト文字は SO(0x0e)とSI(0x0f)で囲まれます。例えば 0e-40-40-0f で DBCS のスペース。||~v125R~
      SO/SIは1文字ずつ囲む必要はなく文字列を囲みます。                ||~v125R~
      EBCDIC 以外では DBCS は 特定のLeadingバイト(>=0x80)と次の文字の組み合わせです。||~v125R~
      3バイト(EUC-SS3),4バイト(GB18030)の場合もあります。 DBCSスペースは例えば MS932 では 81-40 です。||~v125R~
      従ってEBCDIC<-->ロケールコードページの変換では行の長さが変わります。||~v125R~
      コマンドのオプションででSO/SIの扱いを指定してください。         ||~v125R~
      省略値はcfg ファイルで指定する。行コマンドのCopyはパラメータ指定できないのでcfgが適用されます。||~v125R~
        例.   COPy     file1 cpeb -sd       :EBCDIC ファイルを画面内にコピーする時 SO/SI を削除。||~v125R~
              COPy     file1 cpeb -sr       :SO/SIはスペース置換されます。行長が変わりません。||~v125R~
              REPlace  file1 cpeb -sr       :EBCDIC に変換して出力する時 SO/SIが挿入されるが||~v125R~
                                             前後がスペースであればそれを置き換える。||~v125R~
              REPlace  file1 cpeb -si       :SO/SIが挿入されるので行長が変わります。||~v125R~
      cfg では省略値を設定します。                                    ||~v125R~
          SOSI_A2E      REP (="-sr") または INS ("=-si")              ||~v125R~
          SOSI_E2A      DEL (="-sd") または REP ("=-sr")              ||~v125R~
                                                                      ||~v125R~
     -コードページ、オプションは cfg ファイルで指定。                 ||~v125R~
        形式は従来 3270接続 で使用したものと共通です。                ||~v125R~
        cfgファイルがない時の省略値は以下のようになります。           ||~v125R~
          (Windows)                                                   ||~v125R~
            日本語環境のとき コードページはCP930(日本語カタカナ拡張、内部変換テーブル)、JIS83 で画面表示されます。||~v125R~
            日本語環境以外の コードページはCP037で画面表示。DBCS(SO/SI)は考慮されません||~v125R~
          (Linux)                                                     ||~v125R~
            日本語環境のとき コードページはEUC-JP(日本語カタカナ拡張、内部変換テーブル)、JIS83 で画面表示されます。||~v125R~
            日本語環境以外の コードページはCP037で画面表示。DBCS(SO/SI)は考慮されません||~v125R~
          cfg ファイルで CONVERTER=0 を指定した時もコードページの省略値は同じですが||~v125R~
          SOSI,SJIS オプションを指定することが出来ます。              ||~v125R~
          但しSOSIオプションは CV コマンドに対してのみに有効で、編集では無視されます(0x0E/0x0Fで表示)||~v125R~
                                                                      ||~v125R~
        (例)外部、Windowsの変換テーブルを使用するときはcfgファイルで以下のように指定します||~v125R~
              コントロールパネル->地域と言語のオプションで追加が必要かもしれません。||~v125R~
              Windows では DBCS はサポートされてないようです。        ||~v125R~
              従って日本語以外のCJKではWindowsではICUの導入が必要となります。||~v125R~
              ICU を使用する場合 DLL/so のPATHを設定する必要があるかもしれません。||~v125R~
              PATH(LIBPATH は使用されません) / LD_LIBRARY_PATH などOSにあわせて設定してください。||~v126R~
                                                                      ||~v125R~
              CHARSETで指定する値はICU/Windows/LinuxICONVなどで異なります||~v125R~
              文字セットのリストは "uconv -l"(ICU) ないし "iconv -l" で得ることができます。||~v126R~
              Windows の CP はコントロールパネル->地域と言語のオプションで調べる。||~v125R~
                                                                      ||~v125R~
              -ICU を使用:SBCS言語                                    ||~v125R~
                 CONVERTER          1                                 ||~v125R~
                 ICU_DLL_SUFFIX    44                                 ||~v125R~
                 ICU_API_SUFFIX   _44                                 ||~v125R~
                 SBCS_CHARSET     cp1047          //EBCDIC Latin/1 Open System(iso-8859-1)||~v125R~
                                                                      ||~v125R~
              -ICU を使用:DBCS言語                                    ||~v125R~
                 CONVERTER          1                                 ||~v125R~
                 ICU_DLL_SUFFIX    44                                 ||~v125R~
                 ICU_API_SUFFIX   _44                                 ||~v125R~
                 DBCS_CHARSET     cp1388          //chinese simplified. superset of cp935||~v125R~
                                                                      ||~v125R~
              -Windows の MultiByteToWideChar/WideCharToMultibute API を使用||~v125R~
                 CONVERTER          2                                 ||~v125R~
                 SBCS_CHARSET       20924        //EBCDIC Latin/1 Open System(1047+Euro)||~v125R~
                                                                      ||~v125R~
              -Linux の iconv API を使用                              ||~v125R~
                 CONVERTER          1                                 ||~v125R~
                 SBCS_CHARSET       cp1047                            ||~v125R~
                                                                      ||~v125R~
        改行コードの変換は実用と定義とが不明確になっています          ||~v125R~
            EBCDIC NL(x15)-->u0085, LF(x25)-->u000a                   ||~v125R~
            ASCII  LF(0x0a)-->EBC-15/EBC-25                           ||~v125R~
        コードページの変換を変更したい時は次のオプションを指定してください。||~v125R~
            MAP_E2A  0x15: 0x0a   # EBCDIC 0x15(NL) -> ASCII 0a(LF)   ||~v125R~
            MAP_E2A  0x25: 0x3b   # EBCDIC 0x25(LF) -> ASCII "?"      ||~v125R~
            MAP_A2E  0x0a: 0x15   # EBCDIC 0x15(NL) <- ASCII 0a(LF)   ||~v125R~
                                                                      ||~v125R~
                                                                      ||~v125R~
     -0x09はタブとしては扱われません。(0x05もタブとはしません)        ||~v125R~
      文字挿入モード時のTabキーは0x09の挿入ではなく文字置換モード時と同様タブジャンプとなります||~v125R~
     -HEX入力モード(Ctrl+F11)の時DBCS考慮はなく1バイトづつ画面に送られます。||~v125R~
     -SO(0x0e)/SI(0x0f):DBCS 囲み文字は "?" で表示されます。          ||~v125R~
      DBCS入力時はSO)/SIが挿入されます。                              ||~v125R~
      EBCファイルからCut&Pasteの場合SO/SIで囲まれて初めて(偶数バイトのみ)DBCS評価されます。||~v125R~
      例えば、UTF8/ロケールコードファイルにPasteする場合コード変換されますがSO/SIも||~v125R~
      一緒にCopyしてないとSBCS変換されます。                          ||~v125R~
      DBCS位置でSplit行コマンドで行分割された後、                     ||~v125R~
      Join 行コマンドでの行連結ではDBCS評価され得ますがTflow コマンドは間に1スペース||~v125R~
      挿入するのでもとには戻りません。                                ||~v125R~
      無効なDBCS-EBCDICは ":;" で画面表示されます。縦HEX表示でHexコードを確認してください。||~v125R~
     -バイナリーモードで開くと(EB コマンド) DBCSは考慮されません(SO/SIは無変換でコピーされます)||~v125R~
      制御文字が多すぎてバイナリーモードと判定された場合は ET コマンドで開いてください。||~v125R~
     -Find/Change コマンド。                                          ||~v125R~
        kbdのUTF8モードにかかわらずEBCDICコードで探索、置換します。   ||~v125R~
        バイナリーモードで開いた時はDBCSは考慮されません              ||~v125R~
        -g (Grep), P'.' 探索はサポートされていません。                ||~v125R~
     -TFLow コマンドで 行が連結される場合連結部には1スペースが挿入されるので||~v125R~
      奇数桁になり、通常は前の行の SO と 次の行の SI が DBCSを再構成することはないでしょう。||~v125R~
     - "#" 行コマンド(その行に記述を Native コマンドとして実行) はサポートされません。||~v125R~
                                                                      ||~v125R~
   .EBCDIC変換。                                                      ||~v124R~
                                                                      ||~v124R~
      EBCDIC 変換ではICU/iconvなど外部のコンバータを使用することが出来ます。||~v124R~
      CVコマンド(同梱のXCVコマンドは同等の機能の外部ツールです),xe3270FTPで使用できます。||~v124R~
      変換定義ファイルを用意してください。以下はその説明です。        ||~v124R~
      (EBCDICファイルの直接編集は"EBCDICファイルサポート"を参照       ||~v125R~
                                                                      ||~v124R~
      ****************************************************************************||~v124R~
        このファイルは EBCDIC<->PC コードページ 変換パラメータを定義します。||~v124R~
          xeのEBCDICファイルサポート,xe の CV 編集コマンド,xe3270 FTP, XCV ユーティリティーで使用します。||~v124R~||~v125R~
          このファイルの場所は xe3270FTP では xe3270.cfg の CHARSET_CFG パラメータで、||~v124R~
          ユーテリティのXCVコマンドでは /MF:mapfile パラメータで指定します。    ||~v124R~||~v125R~
          xeのEBCDICファイルサポート,xe の CV 編集コマンドではini ファイルで指定します。省略値は ::xeebc.cfg||~v125R~
            EBCDIC_cfg   ="" #("::xeebc.map")# EBCDIC translation config filename||~v125R~
                                                                      ||~v124R~
        変換パターンが３種あります。                                  ||~v124R~
          各々のパターンで必要なパラメータは異なり、不要な指定はあっても無視されます。||~v124R~
          (a).内部テーブルを使用した日本語の変換。                    ||~v124R~
              XCV/CVコマンドは関連したオプションパラメータがありそちらが優先されます。||~v124R~
              xe3270FTP では 必要なら このファイルの SJIS_OPTで指定してください。||~v124R~
              有効なパラメータは SJIS_OPT,SOSI_A2E,SOSI_E2A です。    ||~v124R~
          (b).外部(ICU)ないしはシステム(Windows NLS API, Linux iconv)コンバータを使用した変換。||~v124R~
              ICUは uconv コマンドを、iconv は iconv コマンドを単独で使用することもできます。||~v124R~
              xe3270FTPではこのファイルを使用して変換します。         ||~v124R~
              XCV/CVコマンドからMAP_A2E/MAP_E2Aを指定したこのファイルを使用して、||~v124R~
              uconv/iconvによる変換を補正することができます。         ||~v124R~
              文字セットのリストは "uconv -l" (ICU) ないし "iconv -l" で得ることができます。||~v124R~||~v125R~
              Windows コードページ, ICU のコードページは xcv -List で出ます。||~v124R~||~126DR~
              (Windowがサポートするコードページには有効な DBCS EBCDIC コードページは含まれてないようです。||~v124R~
              (a)で問題がある場合は、ICUの導入が必要です）            ||~v124R~
          (c).指定されたマッピングをs3270+IND$FILE によるuploadの前(MAP_A2F)、downloadの後(MAP_F2A)に||~v124R~
              適用しs3270による変換を補正します。                     ||~v124R~
              MAP_A2F/MAP_F2Aのみが有効なパラメータです。             ||~v124R~
                                                                      ||~v124R~
        3270FTPについて。                                             ||~v124R~
          .DBCSユーザーの場合                                         ||~v124R~
             IND$FILEはDBCSをサポートしていません。                   ||~v124R~
             (s3270 を --enable-DBCS オプションで make すると画面データは変換されます)||~v124R~
             xe3270は FTP データを 外部/内部コンバータで変換しバイナリーモードで送信/受信します。||~v124R~
             (バイナリーモードはテキストモードに比べて少しパーフォーマンスが良い)||~v124I~
             但し、それができるのは固定長データセット/MEMBER だけです。||~v124R~
             可変長データセット/MEMBER は s3270によるSBCS変換に上記(c)の補正ができるだけです||~v124R~
                                                                      ||~v124R~
             更にxehosts で DBCS= オプションを指定する必要があります。||~v124R~
             DBCS=CP939 か DBCS=939 を指定すると内部テーブルを使用します。上記のパターン(a)。||~v124R~
                                                                      ||~v124R~
             DBCS=OTHER を指定し このファイルの CONVERTER パラメータを 1 とすると、||~v124R~
             外部/システム コンバータを使用します。上記のパターン(b)。||~v124R~
             このファイルのパラメータは以下のタイミングで適用されます。||~v124R~
                ホストへ送信。                                        ||~v124R~
                  [PCcode]->{mbrtowc/LOCAL_CHARSET}->[UCS2]->{DBCS_CHARSET/SBCS_CHARSET}->[EBCDIC]||~v124R~
                        ===>(binary mode xfer)===>HOST                ||~v124R~
                ホストから受信。                                      ||~v124R~
                  [PCcode]<-{wcrtomb/LOCAL_CHARSET}<-[UCS2]<-{DBCS_CHARSET/SBCS_CHARSET}<-[EBCDIC]||~v124R~
                        <===(binary mode xfer)<===HOST                ||~v124R~
             MAP_A2E MAP_E2A SUBCHAR_xxx は SBCSの変換を補正するのに使用されます。||~v124R~
             そこで定義されたコードポイントはコンバータを通さずにマッピングされます。||~v124R~
                                                                      ||~v124R~
          .SBCSユーザーの場合                                         ||~v124R~
             s3280 は --charset オプションでいくつかの文字セットをサポートしています。||~v124R~
             (サポートされてる文字セットは http://x3270.bgp.nu/s3270-man.html を参照)||~v124R~
             この中に適当な文字セットがあればxe3270の変換機能は不要と思われます。||~v124R~
             もしいくつかのコードポイントでそちらの環境に適合しない場合は||~v124R~
             このファイルの MAP_F2A/MAP_A2F パラメータで補正してください。||~v124R~
             この場合は CONVERTER パラメータは 0 を使用します。上記パターン(c)。||~v124R~
             パラメータは以下のタイミングで適用されます。             ||~v124R~
                ホストへ送信。                                        ||~v124R~
                   [PCcode]->{MAP_A2F}->[PCcode]->(s3270)->[PCcode]===>(IND$FILE)->[EBCDIC]||~v124R~
                ホストから受信。                                      ||~v124R~
                   [PCcode]<-{MAP_F2A}<-[PCcode]<-(s3270)<===[PCcode]<-(IND$FILE)<-[EBCDIC]||~v124R~
                                                                      ||~v124R~
             固定長データセット/MEMBER に対しては外部/システムコンバータを使用することも出来ます。||~v124R~
             その場合パラメータCONVERTERを 1 に設定し SBCS_CHARSET を指定します。||~v124R~
             パラメータの適用タイミングはDBCS変換に準じますが、SBCS_CHARSETにDEFAULTMAPを||~v124R~
             指定するとコンバーターを使用せず ISO-8859-1<-->CP037に準ずるs3270のテーブルと同じ||~v124R~
             マッピングをします。いずれの場合もMAP_A2E/MAP_E2Aが適用されます。||~v124R~
                                                                      ||~v124R~
        固定長レコードについて。                                      ||~v124R~
          x3270FTPの場合はDATASETのRECFMが固定長、XCVコマンドの場合は/F[xx][N]コマンドラインオプションを||~v124R~
          指定した(CVコマンドには /F オプションはありません)、その場合PC->EBCDIC変換の時||~v124R~
          長文は分割され短文はLRECLまでスペースパディングされます。   ||~v124R~
          改行文字は出力されません。                                  ||~v124R~
          /F[xx][N]のNオプションは行末8桁が行番号であることの指定です。||~v124R~
          DBCS変換でSO/SIの挿入により伸びた行は行番号欄の前にスペースがあれば||~v124R~
          そのスペースを削除してLRECLを保持しようとします。それが出来ない場合||~v124R~
          行分割されますが N 指定があれば行番号欄は切り捨てられます   ||~v124R~
          xe3270FTPの場合PROfileコマンドでDATASETのプロファイルをNUMSTDにすることで||~v124R~
          行番号ファイルとなります。                                  ||~v124R~
          (DATASETのメンバーを1つどれか /Mnオプションで開き "PRO path save"を入力)||~v124R~
                                                                      ||~v124R~
          EBCDIC->PC変換の場合、固定長ファイルはバイナリーモード(改行コード無視)で||~v124R~
          読み込み変換され改行コードを付与して出力されます。          ||~v124R~
                                                                      ||~v124R~
       XCVコマンドの /Mseteol指定で PC<-->EBCDIC変換で改行コードを付与できます。||~v125R~
            /mASCEOL: EBCDIC ファイルの行末コードが Windows:0x0d0a, Linux 0x0a。省略値:0x15。||~v125R~
            /mSETEOL: 出力各行にEOL-IDを追加出力。x2B と レコードモード B2x用。||~v125R~
        尚、固定長LRECL は /F オプションで指定します                  ||~v125R~
            /F[nn][N]:EBCDIC ファイルが固定長。nn:LRECL(省略値=80)。  ||~v125R~
                      B2x(入力) 又は x2B(出力) EBCDIC ファイルのLRECL。||~v125R~
                      N: 行末8桁が行番号欄。SO/SI挿入で行長を調整する。||~v125R~
                         "N" は m2b でのみ有効。                      ||~v125R~
        例。                                                          ||~v125R~
         xcv /cm2b ms932 ibm939.txt  /mf:sjisebc.map /F80 /Mseteol /Masceol||~v125R~
             (locale-->ebcdic, output LRECL=80, set ASCII-EOL-ID)     ||~v125R~
         xcv /cm2b ms932 ibm939.txt /mf:sjisebc.map  /Masceol /Mseteol||~v125R~
             (locale-->ebcdic, output line with appened ASCII-EOL-ID) ||~v125R~
         xcv /cb2m ebcf1 ascf2 /mf:sjisebc.map /F80 /Mseteol          ||~v125R~
             (locale<--ebcdic, input LRECL=80, output line with appened ASCII-EOL-ID)||~v125R~
         xcv /cb2m ebcf1 ascf2 /mf:sjisebc.map /Masceol               ||~v125R~
             (locale<--ebcdic, input line with ASCII-EOL-ID           ||~v125R~
                                                                      ||~v124R~
                                                                      ||~v125R~
       cfg ファイルパラメータ。                                       ||~v125R~
        #####################################################################################||~v124R~
                                                                      ||~v124R~
        ## 各パラメータの説明 ##                                      ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
           CONVERTER      : コンバーターの選択                        ||~v124R~
                            0 : MAP_A2F/MAP_F2A パラメータにしたがって全SBCS変換する。||~v124R~
                                MAP_A2F, MAP_F2A 以外は無視される。   ||~v124R~
                            1 : ICU で変換(ICUの導入が必要)           ||~v124R~
                            2 : Linuxでは iconv API, Windowsでは WideCharToMultibyte/MultiByteToWideCharで変換。||~v124R~
                                                                      ||~v124R~
                            1 と 2 では CHARSET_DBCS, CHARSET_DBCS (LOCAL_CHARSET) パラメータで変換され、||~v124R~
                            MAP_E2A と MAP_A2E がその補正のために使用されます。||~v124R~
                            MAP_A2F と MAP_F2A は無視されます。       ||~v124R~
                              例)                                     ||~v124R~
                                 CONVERTER   1           # apply converter||~v124R~
           ICU_DLL_SUFFIX : .dllないし.so ライブラリ名のサフィクス。  ||~v124R~
                            "CONVERTER 1" の時 必要。                 ||~v124R~
                            但し省略値のライブラリーを調べる以下のロジックで問題がなければ指定不要です||~v126R~
                                Android版   : /system/lib             ||~v126R~
                                Linux版     : /usr/local/lib:/usr/lib:$(LD_LIBRARY_PATH)||~v126R~
                                Linux-64版  : /usr/local/lib64:/usr/lib64:$(LD_LIBRARY_PATH)||~v126R~
                                Windows版   : GetSystemDirectory();GetWindowsDirectory();$(PATH)||~v126R~
                                              例えば  GetSystemDirectory() : c:\Windows\system32||~v126R~
												      GetWindowsDirectory(): c:\Windows||~v126R~
                              例)                                     ||~v124R~
                                 ICU_DLL_SUFFIX 44          # if dllname is icuuc40.dll||~v124R~||~v125R~
           ICU_API_SUFFIX : ICU API 名のサフィックス。                ||~v124R~
                            "CONVERTER 1" の時 必要。                 ||~v124R~
                            但し省略値のライブラリーを調べるロジックで問題がなければ指定不要です||~v126R~
                            例えば "ucnv_open" の実名は icuuc40.dll では ucnv_open_4_0 になっています。||~v124R~
                              例)                                     ||~v124R~
                                 ICU_DLL_SUFFIX _44         # if dllname is icuuc40.dll||~v124R~||~v125R~
                                                                      ||~v125R~
             v44 の場合 SUFFIXは以下に定義されています                ||~v125R~
                                                                      ||~v125R~
                $(icu)/source/common/unicode/uvernum.h                ||~v125R~
					#define        U_ICU_VERSION_SHORT         "44"   ||~v125R~
					#define        U_ICU_ENTRY_POINT_RENAME(x)  x ## _44||~v125R~
                                                                      ||~126DR~
           ICU_DATA       : 自分で .cnv ファイルを作成して省略値のフォルダー以外においた場合その場所を指定する||~126DR~
                              例)(Linux)   ICU_DATA /system/usr/icu:/data/data/yourcnvs||~126DR~||~v128R~||~v129R~
                                 (Windows) ICU_DATA w:\icu\icu562\icu\bin;w:\icu\icu481\icu\bin||~v128R~||~v129R~
                                 yourcnvsにはicudt__l(例えば icudt56l)サブフォルダーを作成しその中にcnvファイルを置いてください||~126DR~||~v128R~
                            Windows版ではICUライブラリー(dll)が見つからない時 ICU_DATA に指定したフォルダーのなかも調べます||~v129R~
                            なければ 環境変数 ICU_DATA もしらべます   ||~v129R~
                            LinuxではsoはLD_LIBRARY_PATHに通してください||~v129R~
                                                                      ||~v124R~
           DBCS_CHARSET   : UCS<-->EBCDIC 変換でDBCS をサポートする文字セットを指定する。||~v124R~||~v125R~
                            (文字セットのリストは "uconv -l" ないし "iconv -l" で得ることができます。)||~v125R~
                            この指定がない場合は全SBCS変換になります。||~v124R~
                            尚、xe3270FTP の場合 この指定を適用するにはxehosts で DBCS=OTHER の指定が必要です。||~v124R~
                              例)                                     ||~v124R~
                                 DBCS_CHARSET cp939     #Japanese     ||~v124R~
                                 DBCS_CHARSET cp933     #Korean Mixed EBCDIC||~v124I~
                                 DBCS_CHARSET cp935     #Chinese(Simplified) Mixed EBCDIC||~v124I~
                                 DBCS_CHARSET cp937     #Chinese(Traditional)Mixed EBCDIC||~v124I~
           SBCS_CHARSET   : UCS2<-->EBCDIC SBCS 変換文字セットを指定。||~v124R~
                            (文字セットのリストは "uconv -l" ないし "iconv -l" で得ることができます。)||~v125R~
                            DBCS_CHARSET 指定の文字セットがSBCS変換を含む場合は指定不要。||~v124R~
                            "DEFAULTMAP"を指定すると ibm37,swaplfnl の ISO8859-1<-->EBCDIC に相当する内部テーブルを使用。||~v124R~||~126DR~
                            ibm37,swaplfnlはs390標準でibm37と異なりEBCDIC-0x25<-->ASCII-0x85, EBCDIC-0x15<-->ASCII<-->0x0aです||~126DR~
                              例)                                     ||~v124R~
                                 SBCS_CHARSET CP037          #use external converter||~v124R~
                                 SBCS_CHARSET DEFAULTMAP     #use internal map corresponding to ISO-8859-1 and CP037||~v124R~
                              Windows で CONVERTER=2 の場合           ||~v127R~
                                 SBCS_CHARSET 1047           #EBCDIC latin||~v127R~
           LOCAL_CHARSET  : UCS2<-->PC コードページコンバーター名。   ||~v124R~
                            "SBCS_CHARSET DEFAULTMAP"の時は無視される。||~v124R~
                            指定のない場合は 環境変数などからコードページが決定される||~v125R~
                            Axeでは ICU が使用されます                ||~v126R~
                              例)                                     ||~v124R~
                                 LOCAL_CHARSET ISO-8859-1     #       ||~v124R~
                                 LOCAL_CHARSET CP932          #       ||~v124R~
                            Windows では Windows コードページ番号を指定する||~v127R~
                                 LOCAL_CHARSET   932          #JP     ||~v127R~
           MAP_E2A/MAP_A2E: SBCS変換の補正をコードポイントごとに指定します。||~v124R~
                            例えば, 0x7e は iso-8859-1 ではチルダで cp897 では上線です。||~v124R~
                            そして CP1027(EBCDIC) では 0xa0 は上線、0xa1 がチルダです。||~v124R~
                            s3270で CP1027 が使えない場合、"s3270 -charset CP290" とした上で||~v124R~
                            次のようなパラメータ設定が考えられます。  ||~v124R~
                              例)                                     ||~v124R~
                                 MAP_E2A  0xa0: 0xaf   # EBCDIC 0xa0 -> ASCII upper-bar||~v124R~
                                 MAP_E2A  0xa1: ~      # EBCDIC 0xa1 -> ASCII tilde||~v124R~
                                 MAP_A2E  0xaf: 0xa0   # EBCDIC 0xa0 <- ASCII upper-bar||~v124R~
                                 MAP_A2E     ~: 0xa1   # EBCDIC 0xa1 <- ASCII tilde||~v124R~
           MAP_A2F/MAP_F2A: "CONVERTER 0" の時に使用されます。        ||~v124R~
                            s3270+IND$FILE の変換を補正します。       ||~v124R~
                            MAP_A2F は ホストへ送信前のファイルに適用、||~v124R~
                            MAP_F2A は ホストから受信後のファイルに適用されます。||~v124R~
                              例)                                     ||~v124R~
                                 MAP_A2F  0xaf: ~      # upload 0xaf(upper bar) as 0x7e(tilde)||~v124R~
                                 MAP_F2A  0x1f: .      # convert downloaded 0x1f to printable char||~v124R~
           SUCHAR_SBCS    : 変換不能 SBCS 文字の代替文字。ユニコード値で指定。||~v124R~
                            省略値は U001a.                           ||~v124R~
           SUCHAR_DBCS    : 変換不能 DBCS 文字の代替文字。ユニコード値で指定。||~v124R~
                            省略値は Ufffd.                           ||~v124R~
                            ICU の 文字セット->ユニコード 変換の代替文字は 0x1a と 0xfffd です。||~v124R~
                            文字セット<-ユニコード 変換の代替文字は ICU ソースファイルの||~v124R~
                            各文字セットの xxx.ucm ファイルで定義されています。||~v124R~
                            xe は EBCDIC<->ユニコードとPC文字セット<->ユニコード変換でこれを受け入れます。||~v124R~
                            従って、SUBCHAR_SBCS と SUBCHAR_DBCS は次の場合に利用され、||~v124R~
                            変換不能なコードの代わりにこのユニコードを変換して出力します。||~v124R~
                              LOCAL_CHARSET指定のない場合(ICUではなくwcr2mb/mbrtowc APIを使用)||~v124R~
                              "CONVERTER 2" 指定の場合(システムコンバータを使用)。||~v124R~
                              例)                                     ||~v124R~
                                 SUBCHAR_SBCS  0x003f       # "?" for translation err||~v124R~
                                 SUBCHAR_DBCS  0x30fb       # EBCDIC 0x4345 in CP939||~v124R~
                            ICUでない場合は 省略値の Ufffd や U001a の変換も失敗する可能性もあります。||~v124R~
                            その場合は変換もとの値が出力されます。不都合がある場合は||~v124R~
                            SUBCHAR_xxxx を指定してください。         ||~v124R~
           SUBCHAR_0a     : PCコードページへの変換のとき 0x0a(改行コード)の出力を制御する。||~v124R~
                            1 : 0x0a を SBCS 代替文字(の変換)で置換する。||~v124R~
                            0 : 0x0a をそのまま出力する。(省略値)     ||~v124R~
           SUBCHAR_S2D    : PCコードページへ変換の時、EBCDIC SBCS->マルチバイト変換を許すか。||~v124R~
                            1 : SBCS 代替文字(の変換)で置換する。     ||~v124R~
                            0 : マルチバイト出力を許す。(省略値)      ||~v124R~
           SJIS_OPT       : SJIS 変換オプションを指定する。           ||~v124R~
                            パターン (a) で有効なパラメータ。(xehostsで DBCS=CP939 か CP930 を指定した場合)||~v124R~
                            XCV/CV コマンドでは同じ効果のコマンドラインパラメータがあり、||~v124R~
                            コマンドラインパラメータの指定が優先される。||~v124R~
                            IBM  :EBCDIC 漢字を SJIS-IBM エリアにマッピング (省略値)||~v124R~
                            NEC  :EBCDIC 漢字を SJIS-NEC エリアにマッピング||~v124R~
                            JIS78:SJIS 1978 版                        ||~v124R~
                            JIS83:SJIS 1983 版  (省略値)              ||~v124R~
                            ENG_EXT :日本語英小文字拡張(CP939=CP1027) ||~v125R~
                            KANA_EXT:日本語カタカナ拡張(CP930=CP290)  ||~v125R~
                              例)                                     ||~v124R~
                                 SJIS_OPT      NEC                    ||~v124R~
                                 SJIS_OPT      JIS78                  ||~v124R~
                                 SJIS_OPT      KANA_EXT               ||~v125R~
           SOSI_A2E       : DBCS を EBCDIC へ変換する時の SO/SI 設定オプション。||~v124R~
                            XCV/CV/SAVe/REPlace/COPy/... コマンドでは同じ効果のコマンドラインパラメータがあり、||~v124R~||~v125R~
                            コマンドラインパラメータの指定が優先される。||~v124R~
                            省略値は xe3270FTP では SHIFT, 以外では INS。||~v124R~||~v125R~
                                                                      ||~v125R~
                            INS  :SO(0xe), SI(0x0f) を 挿入。 出力は伸張します。||~v124R~
                            REP  :DBCS文字列の前後がスペースがあればこれを置換、なければ挿入。||~v124R~
                            SHIFT:xe3270のみ、REPに加えて挿入による伸張分を後続のスペースの削除で吸収。||~v124R~||~v125R~
                              例)                                     ||~v124R~
                                 SOSI_A2E      REP                    ||~v124R~||~v125R~
                                                                      ||~v125R~
           SOSI_E2A       : DBCS を EBCDIC から変換する時の SO/SI の取り扱い。||~v124R~
                            XCV/CV/SAVe/REPlace/COPy/... コマンドでは同じ効果のコマンドラインパラメータがあり、||~v124R~||~v125R~
                            コマンドラインパラメータの指定が優先される。||~v124R~
                                                                      ||~v125R~
                            DEL  :SO/SI を削除。出力行長が短縮になります。||~v124R~
                            REP  :SO/SI を ASCII スペースで置換(省略値)。||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
      ## サンプルファイル ##                                          ||~v124R~
                                                                      ||~v124R~
        xeebc.map                                                     ~
        ##########################################################    
        # CONVERTER             1     # 0:s3270 translation, 1:ICU, 2:iconv/WindowsAPI||+v124R
        # ICU_DLL_SUFFIX      44      # ICU dllname suffix            ||~v125R~
        # ICU_API_SUFFIX      _44     # ICU apiname suffix            ||~v125R~
        # DBCS_CHARSET        cp939   #(Linux)EBCDIC Japanese English lower-case letter extension.~||+v124R
        # DBCS_CHARSET        nnnn    #(Windows)No corresponding Windows Codepage||+v124I
        # SBCS_CHARSET        cp037   #(Linux)EBCDIC-US               ||+v124R
        # SBCS_CHARSET        37      #(Windows)ECDIC-US              ||+v124I
        # SBCS_CHARSET        cp939                                   
        # SBCS_CHARSET        CP037   #Linux                          
        # SBCS_CHARSET        37      #Windows Codepage for CP037(EBCDIC US)
        # LOCAL_CHARSET    ISO-8859-1 #(Linux)Latin-1                 ||+v124R
        # LOCAL_CHARSET    28591      #(Windows Codepage) for ISO-8859-1||+v124R
        #                                                             
        #     MAP_A2F    0xaf: ~      # upload 0xaf(upper bar) as 0x7e(tilde)
        #     MAP_A2F    0x30: 0x31   # upload 0xaf(upper bar) as 0x7e(tilde)
        #     MAP_A2F    0x31: 0x30   # upload 0xaf(upper bar) as 0x7e(tilde)
        #     MAP_F2A    0x1f: .      # convert downloaded 0x1f to printable char
        #     MAP_F2A    0x31: 0x30   # upload 0xaf(upper bar) as 0x7e(tilde)
        #     MAP_F2A    0x30: 0x31   # upload 0xaf(upper bar) as 0x7e(tilde)
        #     MAP_F2A       {: }      # upload 0xaf(upper bar) as 0x7e(tilde)
        #     MAP_F2A       }: {      # upload 0xaf(upper bar) as 0x7e(tilde)
        #                                                             
        #     MAP_E2A    0xa2: 0x5c   # Yen sign and backslash        
        #     MAP_A2E    0x5c: 0xa2   #                               
        #     MAP_E2A    0xa1: ~      # tilde and upper bar           
        #     MAP_A2E       ~: 0xa1   #                               
        #     MAP_E2A    0xa0: ?      # tilde and upper bar           
        #                                                             
        #     MAP_E2A    0x25: ?      # avoid 0x0a generation         
        #     MAP_E2A    0x4a: ?      # Cent, avoid DBCS output by CP939
        #     MAP_E2A    0x5f: ?      # Not , avoid DBCS output by CP939
        #     MAP_E2A    0xb1: ?      # Pond, avoid DBCS output by CP939
        #                                                             
        #     MAP_E2A    0x31: 1      # Pond, avoid DBCS output by CP939
        #     MAP_E2A    0x32: 2      # Pond, avoid DBCS output by CP939
        #     MAP_E2A    0x33: 3      # Pond, avoid DBCS output by CP939
        #                                                             
        #   SOSI_A2E   INS : SOSI setting option when translate DBCS to EBCDIC
        #   SUBCHAR_DBCS    0x30fb                                    
        #   SUBCHAR_SBCS    0x1a                                      
        #   SUBCHAR_0a     1  # replace by SBCS substitution char.    
        #   SUBCHAR_S2D    1  # replace converter output by substitution char when SBCS is translated to pc-codepage DBCS.
        ##################################################################################||~v124R
        #                                                             ||~v125R~
        ## Use ICU , SBCS codepage                                    ||~v125R~
        #                                                             ||~v125R~
        #        CONVERTER          1                                 ||~v125R~
        #        ICU_DLL_SUFFIX    44                                 ||~v125R~
        #        ICU_API_SUFFIX   _44                                 ||~v125R~
        #        SBCS_CHARSET     cp1047          //EBCDIC Latin/1 Open System(iso-8859-1)||~v125R~
        #                                                             ||~v125R~
        ## Use ICU , DBCS codepage                                    ||~v125R~
        #                                                             ||~v125R~
        #        CONVERTER          1                                 ||~v125R~
        #        ICU_DLL_SUFFIX    44                                 ||~v125R~
        #        ICU_API_SUFFIX   _44                                 ||~v125R~
        #        DBCS_CHARSET     cp1388          //chinese simplified. superset of cp935||~v125R~
        #                                                             ||~v125R~
        ## Use API (Windows:MultiByteToWideChar/WideCharToMultibute)  ||~v125R~
        #                                                             ||~v125R~
        #        CONVERTER          2                                 ||~v125R~
        #        SBCS_CHARSET       20924        //EBCDIC Latin/1 Open System(1047+Euro)||~v125R~
        #                                                             ||~v125R~
        ## Use API (Linux:iconv)                                      ||~v125R~
        #                                                             ||~v125R~
        #        CONVERTER          2                                 ||~v125R~
        #        SBCS_CHARSET       cp1047                            ||~v125R~
        #                                                             ||~v125R~
        ##################################################################################||~v125R~
                                                                      ||~v124R~
#endif                                                                ||~v124R~

#if defined(W32)||defined(LNX)                     ||~v124R~          ||~v125R~
                                                                      ||~v125R~
   .UTF8サポート                                                      ||~v124R~
     .UTF8エンコーデッドファイルを表示/編集できます                   ||~127MR~
      Linuxの場合、UTFエンコーデッドファイル名を処理できます          ||~127MR~
      言語環境がUTF8である必要があります。LANG=xx_yy.utf8, 例えば en_US.utf8。||~v128R~
      Windowsの場合、内部的にはファイル名はUTF16ですがサロゲートペアもＯＫです。||~127MR~
      Linux版/Windows版とも21ビットUCS4(0x10000->0x10ffff)まで。||~v125R~||~127MR~
                                                                      ||~v125R~
     .UTF8文字は緑色で表示。                                          ||~v125R~
#ifdef W32                                                            ||~127MR~
	  ディレクトリーリストのファイル名は現在の言語環境では表示できない文字を含むファイル名は||~127MR~
      緑色で表示されます                                              ||~127MR~
      リモート(共有でなく,FTP)のデレクトリーリストのファイル名は LNX の場合に準じます||~127MR~
#endif                                                                      ||~v125R~||~127MR~
#ifdef LNX                                                            ||~127MR~
	  ディレクトリーリストのファイル名はUTF8エンコーデッドの場合緑色で表示されます||~127MR~
      ファイル名がUTF8としても、ロケールコードとしても正しい場合に                ||~v127R~||~127MR~
      どちらを取るかを指定する手段は優先順 高->低 の順に以下の通り。  ||~v127R~||~127MR~
            EDItコマンド :  e xxx FN{U8|LC|AS}                        ||~v127R~||~127MR~
            コマンドラインパラメータ :  xe  -UN{8|L}                  ||~v127R~||~127MR~
            UTF コマンド : UTF FN CP{U8|LC|AS}                        ||~v127R~||~127MR~
            Linux の場合 LANG 環境変数, Windows:リモートFTPの場合UTF8,ローカルはロケール||~127MR~
#endif                                                                ||~127MR~
                                                                      ||~v125R~
     .キーボード入力は Alt+u または "UTF SWKBD" コマンド で UTF8か各国語か モードを変更します||~127MR~
      Alt-u キーを押して2行目の "===>" が "=u=>"になっている時はUTF8コード入力になります。||~v125R~||~127MR~
      キーボード入力モード:UTF8が効果するのは次の場合です             ||~127MR~
        -Ctrl+w で UTF8またはEBC ファイルからコマンド入力行にカーソル位置のワードを複写する||~127MR~
        -クリップボードがUTF8またはEBCのときこれをファイル編集内容エリア以外にペーストする||~127MR~
                                                                      ||~v125R~
     .UTF8エンコードファイルの表示/編集。                             ||~v125R~
                                                                      ||~v125R~
       -ファイル内容への入力はA+uの状態とは無関係にUnicodeになります。||~v125R~
        出力時はUTF8に変換。                                          ||~v125R~
                                                                      ||~v125R~
       -印刷不能文字は ":;"で表示、無効なUTF8コードは"?"で表示。      ||~v125R~
        いずれの場合も、もとのバイト値は残されていて、そのままファイルに書き戻しされます。||~v125R~
                                                                      ||~v125R~
       -バイナリーファイルは常に無変換。                              ||~v125R~
        eb/ehコマンドでのバイナリー表示では全てバイト列は各国語解釈です。||~v125R~
                                                                      ||~v125R~
       -Hex コマンドによる縦Hex表示はUnicodeのHex表示です。           ||~v125R~
        ASCIIは文字部、Hex部とも1桁表示。ASCII以外はHex部はUCS(2ないし3桁)表示なので、||~v125R~
        SBCS(文字部1桁、Hex部2桁)により文字部とHex部と行長が異なる事があります。||~v125R~
        Alt+g(カーソルジャンプ)キーで対応を取ることが出来ます。       ||~v125R~
                                                                      ||~v125R~
       -Unicode入力。                                                 ||~v125R~
        IMEによるかHex入力モード(Ctrl+F11)を使用します。              ||~v125R~
        Ctrl+F11でHex入力モードにするとUTF8ファイルの場合Hex文字を4桁 ||~v125R~
        入力した時点でカーソル位置へUCS2が転送されます。              ||~v125R~
        カーソルがファイルテキスト上以外にあるときは通常入力になります。||~v125R~
        u-00a0-->u00ffは2桁入力後"x"キーで転送することも出来ます。    ||~v125R~
        6桁数字入力が必要なUCS4を入力する時は先に"v"キーを押してから  ||~v125R~
        Hex数字を続けてください。                                     ||~v125R~
        "u"や"v"キーを押した時も未転送の数字があると転送されます      ||~v125R~
                                                                      ||~v125R~
        また、縦Hex表示の場合、Hex行で"u"キーを使用すると             ||~v125R~
        隣接する2文字(アスキー文字または開く時に無効なUTF8コードと判断された文字)から||~v125R~
        UCS2を合成することも出来ます。                                ||~v125R~
        例えば、スペース(0x20)が2文字ある位置で上下いずれかのHex行上で||~v125R~
        "u"キーを押すと u-2020(十字架?)に変わります。                 ||~v125R~
        "v"キーを使用すると後続の3桁からUCS4を合成します。            ||~v125R~
                                                                      ||~v125R~
        コマンド入力行へのUTF8コード入力。                            ||~v125R~
          コマンド行、ファイル名リスト画面(=1, =2 画面), ユーティリティー画面(=3.12, =3.14 画面）,||~v125R~
          DirList画面の改名欄にHexでUTF8コード入力できます            ||~v125R~
          Hexコード入力(C+F11)モードに切替えて一文字ごとに"u"/"v"キーで始めてHexでユニコードを入力します。||~v125R~
          "u"/"v"を打たないと入力はそのまま転送されます。ロケールコードをHex入力することは出来ません。||~v125R~
          Hex入力モードのとき"u"や"v"を入力したい時は２回連続してキーを押してください。||~v125R~
          UTF8ファイルを開いてカット＆ペーストないしはCtrl+wを利用したほうが便利なこともあります||~127MR~
                                                                      ||~v125R~
                                                                      ||~v125R~
        RAW CODE 入力対応。                                           ||~v125R~
          但し、Linuxコンソール版はLANG環境変数がUTF8でないとロケールコードに変換できない文字は入力できません。||~v125R~
                Windowsコンソール版は RAW CODE 入力出来ません(xeではA+"+"(NumPad)が無効なので)。||~v125R~
          その場合xeのHexコード入力を使用してください                 ||~v125R~
          (参考)ユニコードをHEX文字入力する方法                       ||~v125R~
             (Linux) SCIMで IMEを その他->RAW CODE に変更する。       ||~v125R~
                     NumPadキーを使用する場合はNumLock ON にします。  ||~v125R~
             (Windows)-Altキーを押したまま NumPadキーの"+"を押して続けてHEXコード入力。||~v125R~
                       レジストリーの設定が必要かもしれません。       ||~v125R~
                       regedit で HKEY_CURRENT\Control Panel\Input Method に||~v125R~
                       EnableHexNumpad を追加ないし値の変更をしてください。||~v125R~
                       タイプは文字列(REG_SZ)で値は"1"に設定。        ||~v125R~
                      -日本語IME(Microsoft IME standard 2002)では 変換モードのときに||~v125R~
                       U3042 などと入力して F5 を押します。           ||~v125R~
                       DOS窓では効かないようです。                            ||~v125R~||~v125R~
                      -ロケールコードに変換できない場合は"?"入力になるようです。||~v125R~
                       その場合は上記 xe のHex コード入力機能を使用してください||~v125R~
                                                                      ||~v125R~
       -UTF8用追加のコマンドオプション。                              ||~v125R~
                                                                      ||~v125R~
           -Edit/Browse/Select  [CPU8|CPLC|CPAS] [IE]                 ||~v125R~
              CPU8: UTF8ファイルとして開く                            ||~v125R~
              CPLC: 各国語ファイルとして開く                          ||~v125R~
              CPAS: 環境変数に従う。(省略値)                          ||~v125R~
                                                                      ||~v125R~
                指定されたオプションはプロファイルに保存されます。    ||~v125R~
                同じファイルでは二度目以降は指定不要です。            ||~v125R~
                省略値はCPASですが、ディレクトリーに指定した場合はその中のファイルの省略値となります。||~v125R~
                ヘッダー行のファイル名の後ろの =U/=u/=L/=l/=b がそのファイルのコードページを示しています。||~v125R~||~v125R~
                大文字はコマンドパラメータで指定したか、以前の指定がプロファイルに保存されていたかのいずれかです。||~v125R~
                "b"はバイナリーモードオープンを示します。             ||~v125R~
                無効なUTF8文字を含む場合、CPU8を指定するか、そのファイルに対し過去に指定した(プロファイルの記録)||~v125R~
                のでなければCPLCでロードし直します。                  ||~v125R~
                UTF コマンドで省略値、CPLCリロードオプションを変更できます||~v125I~
                                                                      ||~v125R~
              IE  : CPU8のとき無効なUTF8コードのファイルは編集で開けません||~v125R~
                    エラーを無視して開く場合"IE"を指定する。          ||~v125R~
                    表示オープンでは"IE"の指定は不要。エラーは"?"で表示されている。||~v125R~
                    コードは無変換ままロードされている。              ||~v125R~
                    エラー位置は "f *ec" コマンドで探索できる。       ||~v125R~
                                                                      ||~v125R~
                                                                      ||~v125R~
           -End/Save/Replaxe/Create/Append [CPLC | CPU8 [IE]]         ||~v125R~
              CPU8/CPLC: 出力ファイルのEncoding指定。                 ||~v125R~
                         必要ならUTF8<-->各国語変換の後、書き出される。||~v125R~
              IE       : UTF8-->各国語変換で変換エラーを無視して出力。||~v125R~
                         エラー文字は"?"に置換されている。            ||~v125R~
                                                                      ||~v125R~
           -Copy/Move source-file [CPLC | CPU8 [IE]]                  ||~v125R~
              CPU8/CPLC: "source-file"のEncoding。                    ||~v125R~
                         必要ならUTF8<-->各国語変換の後、編集画面にCopy/Moveする。||~v125R~
              IE       : 変換エラーを無視。エラー文字はそのまま複写され、"?"で表示される。||~v125R~
                         (バイト値はそのまま保持される)               ||~v125R~
                         指定がないとエラー発生行で複写は停止。       ||~v125R~
                         ファイルが IE オプションで開かれている時は不要。||~v125R~
                                                                      ||~v125R~
           -Find/Change コマンド                                      ||~v125R~
                                                                      ||~v125R~
             .Find/Ifind [U[B|L|8]]                                   ||~v125R~
              Change     [U[B|L|8|4]]                                 ||~v125R~
                 U   : オプションプレフィックス。                     ||~v125R~
                 B/L : BigEndian/LittleEndian UCS探索。省略値はOSに従う(80x86系は"L")。||~v125R~
                       例えば 0x'003100320033' を探す時 "F 123 UB"、  ||~v125R~
                              0x'310032003300' を探す時 "F 123 UL" とする。||~v125R~
                 8   : UTF8 コードで探します。                        ||~v125R~
                       コマンド行の入力は A+u キーでどちらのコードでも入力できます。||~v125R~
                       すなわち、コマンド行が "=u=>" で表示されていればUTF8、||~v125R~
                       そうでなければロケールコード入力状態です。     ||~v125R~
                       ロケールコード入力状態で U8を指定すればUTF8コードで探します。||~v125I~
                       UTF8ファイルが無変換で開かれている時などに使用します。||~v125R~
                         例.  F x  U8                                 ||~v125I~
                         ここで x は ロケールコード、例えばその値が 0xa0 とすると||~v125I~
                         0xa0 の UTF8 コード値 0xc2a0 を探します。    ||~v125I~
                 4   : 置換文字をHex指定した時それがUCS4であることの指定。||~v125R~
                       3バイトUCSの文字列とみなします。               ||~v125R~
                         例.  C abc  \x10fffd   u4                    ||~v125R~
                       UTF8ファイル上の置換で U4 の指定がないとUCS2とみなします||~v125R~
                         例.  C abc  \x30203021                       ||~v125R~
             .Find *ec                                                ||~v125R~
                 *ec : CPU8 で開いた時の変換エラー文字位置を探します  ||~v125R~
                       変換エラー行は 更新でエラーがリセットするまでの間は　*e で探せます。||~v125R~
             .Change *ec  *                                           ||~v125R~
                 *   : CPU8 で開いた時の変換エラー文字を1文字づつ変更します||~v125R~
                       置換巻文字 "*" はもとの値のままエラー解除します。||~v125R~
                       解除されないままの文字はそのままファイルに書き戻されますが||~v125R~
                       解除すると書き戻しの時ロケールコード-->UTF8変換の対象になります。||~v125R~
                                                                      ||~v125R~
                       * 以外ににも任意の文字列が指定できます。       ||~v125R~
             .UTF8ファイルでは \x__指定の場合文字境界を意識します     ||~v125R~
              \x 指定は探索文字列も置換文字列も4桁の倍数です。        ||~v125R~
              \xaabbのaaは u-xxyy の yyとはマッチしません。xxとのみマッチします。||~v125R~
              例) c \x30003000 \x20202020                             ||~v125R~
                                                                      ||~v125R~
           -Sort コマンド                                             ||~v125R~
            UTF8ファイルのSortで D[S|I|X]オプション追加               ||~v125R~
            SORTキーカラム指定がDBCSを分割する時                      ||~v125R~
              S:スペースみなす、 I:分割無しのDBCS値で比較、X:その桁は除いて比較||~v125R~
            尚UTF8ファイルの照合順序はユニコード値です。              ||~v125R~
                                                                      ||~v125R~
           -DirList画面でCPU8/CPLCを指定する場合は"O"行コマンドを使用してください。||~v125R~
            Selectコマンドに同じく改名欄にCPxxを指定する。||~v125R~   ||~v125R~
            行コマンド "[" と "]" はそれぞれ CPLC,CPU8 をつけて開きます。||~v125R~
                                                                      ||~v125R~
                                                                      ||~v125R~
                                                                      ||~v125R~
       -::xe___.ini.xxx ファイル(___はos type,xxxはロケールID)による罫線文字の設定はロケールコードで指定する。||~v125R~
                                                                      ||~v125R~
       -UTF8関連の設定コマンド。                                      ||~v125R~
                                                                      ||~v125R~
           - UTF { {ALTCPLC | NOALTCPLC } | SWKBD | FILE | FN } [ CPU8 | CPLC | CPAS ]                                               ||~v125R~||~v125R~
                                                                      ||~v125R~
              ALTCPLC / NOALOTCPLC : プロファイルの記録も含めてCPU8指定のない場合||~v125I~
                                     UTF8変換エラーのときCPLCでリロードするかしないか。||~v125I~
              SWKBD:KBD Input変換を切り替える(Locale code<-->UTF8)    ||~v125R~
                                                                      ||~v125R~
                Alt+u は "UTF SWKBD" を実行しキーボード入力をLocaleCode<->UTF-8変換します。||~v125R~||~v125R~
                コマンド入力行の "===>" が "=u=>"に変化します||~v125R~||~v125R~
                  =u=:キーボード入力はUTF8文字扱いです。       ||~v125R~||~v125R~
      			キーボード入力モード:UTF8が効果するのは次の場合です   ||~127MR~
        			-Ctrl+W で UTF8またはEBC ファイルからコマンド入力行にカーソル位置のワードを複写する||~127MR~
        			-クリップボードがUTF8またはEBCのときこれをファイル編集内容エリア以外にペーストする||~127MR~
                                                                      ||~v125R~
              FILE/FN:ファイルの中身/ファイル名のエンコーデングの省略値を設定。||~v125R~
                      CPAS は設定をリセットする時に指定します         ||~v125R~
                      設定は iniファイル に保存されます。             ||~v125R~
                      コマンドラインの /U オプションの指定があればそちらが優先します。||~v125R~
                                                                      ||~v125R~
              UTF8とLocaleコードをコマンド行、ファイル名入力画面, 3.12/3.14 ユーテリティー画面 でミックスことも出来ます。||~v125R~||~v125R~
              デレクトリー名、ファイル名にロケールコード、UTF8コードが混在する場合に使用します。||~v125R~
              但しこの場合UTF8コードロケールコードは間にASCIIコード(0x00<->0x7f)を||~v125R~
              置かないと境界が区別できません。                        ||~v125R~
                                                                      ||~v129R~
           -  OPT UNICOMB [ COMB | SPLIT | UNPR ] [ SHADOW | ITSELF | PADDING | U-xxxx ]||~v125R~
                                                                      ||~v125R~
              結合文字の表示方法を設定します。                        ||~v125R~
              Alt+":" キーも COMB-->SPLIT-->UNPR をスイッチするのに使用できます||~v125R~
                                                                      ||~v125R~
       -コマンドラインオプション                                  ||~v125R~||~v125R~
                                                                      ||~v125R~
            xe [/U{F|N}{8|L}]                                                  ||~v125R~||~v125R~
              UF  : ファイル内容のエンコーディングの省略値の指定。    ||~v125R~
              UN  : ファイル名のエンコーディング解釈の省略値指定。    ||~v125R~
                                                                      ||~v125R~
             -省略値はUTF コマンドでも設定できます、個々での指定がUTFコマンドより優先します。||~v125R~
                                                                      ||~v125R~
             -ファイル内容のエンコーディグについて。                  ||~v125R~
              File/Dir を開く時のCPU8/CPLCを指定するとプロファイルに保存されます||~v125R~
              優先順位は コマンドオプション->プロファイル->コマンドラインオプション->UTF8コマンド設定||~v125R~
              その後がLinuxの場合LANG環境変数に依存します。           ||~v125R~
                                                                      ||~v125R~
       -iniファイルで印刷可能/倍角の定義は変更することが出来ます。    ||~v125R~
                                                                      ||~v125R~
          .フォントの表示幅は言語環境で異なると思います               ||~v125R~
           文字入力した位置と違う場所が変更されたりします。           ||~v125R~
           sample dirの utf8data.0000-ffff を表示確認してください     ||~v125R~
           問題がある場合は以下の手段を使ってください。               ||~v125R~
          .ini ファイルでユニコードテーブルファイル名を指定。         ||~v125R~
           Console版(DOS窓/Terminal Emulatorで動くxe)とGUI版(wxe,gxe)とで||~v125R~
           フォント表示幅が異なる場合があるので別々に指定してください。||~v125R~
                                                                      ||~v125R~
           SBCS(1カラム)表示コードは内部的コードにマッピングしていますがSBCSの数が許容値を超えた場合||~v125R~
           DBCS(2カラム)表示されます。                                ||~v125R~
           次の様な警告が出た場合はこの指定で、使用してないユニコードの範囲をDBCSとしてください||~v125R~
           例)　"2 e000-f8ff"                                         ||~v125R~
             "Warning:UCS map tbl overflow. Treate this range as DBCS(adjustable by ini file)."||~v125R~
                                                                      ||~v125R~
               UnicodeTbl="::xeuctb" #("")# Unicode Codepoint File:SBCS/DBCS/Unprintable specification||~v125R~
               UnicodeTbl_Console="::xeuctb.cons" #("")# Unicode Codepoint File for console version||~v125R~
                                                                      ||~v125R~
          .ユニコードテーブルファイルの例。(sample/xeuctb)            ||~v125R~
                                                                      ||~v125R~
               #################################################      ||~v125R~
               # Unicode character type specification file            ||~v125R~
               #   Specify file name on ini file                      ||~v125R~
               #   You need specify only to change default            ||~v125R~
               ## Line Format ##################################      ||~v125R~
               # unicode character type specification file            ||~v125R~
               # type start-end                                       ||~v125R~
               # type     : 0:Width0(Combine character), 1:printable single column character,||~v128R~
               #            2:printable wide(double column) character, N:unprintable||~v128R~
               #            #:comment                                 ||~v125R~
               # start-end: unicode range by hex digit notation. Lines should be accendant sequence.||~v125R~
               # Ex) 2 01cb-01e3                                      ||~v125R~
                                                                      ||~v125R~
       -その他。                                                      ||~v125R~
          .CV 各国語ファイルでのみサポートされます。UTF8ファイルでは使用できません。||~v125R~
          .コマンド(=6)画面はCPAS,ショートカットキー編集(=0.1)画面はCPLCです。||~v125R~
                                                                      ||~v125R~
#endif  //WIN | LNX                                                   ||~v125R~
                                                                      ||~v124R~
   .短縮ファイル名                                                    ||~v129R~
       -ファイル名指定の箇所に以下の省略形が使用できます              ||~v129R~
          *\  : 現在の画面で開いているファイル/フォルダーと同じフォルダー||~v129R~
          ^*\ : 画面分割した状態でもう一方の画面で開いているファイル/フォルダーと同じフォルダー||~v129R~
          ::  : ワークディレクトリー                                  ||~v129R~
        例)   e *\another.txt   e ^*\more.c   e ::xehosts             ||~v129R~
                                                                      ||~v129R~
       -短縮名                                                        ||~v129R~
            定義ファイル(::xe.shortpath) に短縮名を定義して sp:xxxx 形式で使用||~v129R~
            定義ファイルは自分で編集するか SP コマンドで追加          ||~v129R~
            例)                                                       ||~v129R~
               定義ファイルに次行があるとした場合                     ||~v129R~
                 srctest1 d:\eclipse-workspace\testproject1\src\com\debug\test||~v129R~
               e sp:srctest1 は                                       ||~v129R~
               e d:\eclipse-workspace\testproject1\src\com\debug\test と解釈される||~v129R~
                                                                      ||~v129R~
#if defined(W32) || defined(LNX)                                      ||~v124R~
                                                                      ||~v124R~
   .シンタックスハイライト。                                          ||~v124R~
                                                                      ||~v124R~
    シンタックスハイライトとはキーワード、コメントなどを色を変えて表示する機能です。||~v124R~
    xe のシンタックスハイライトはandre-simonのHighlightかまたはGNU source-highlight を利用します||~v124R~||~v124R~
                                                                      ||~v124R~
      GNU source-highlighの場合(configファイルでSHCMD=またはSHCMDR=で指定)||~v124R~
         source-highlight(Windows版ないしはLinux版)の導入が必要です。 ||~v124R~
         (http://www.gnu.org/software/src-highlite/source-highlight.html)||~v124R~
         source-highlightは boostのregexに依存するのでこれも導入が必要かもしれません。||~v124R~
         (http://www.boost.org)                                       ||~v124R~
         Win版用にcygwinでコンパイルしたものは遅いのでMinGWでコンパイルしたものをHPにアップしています。||~v124I~
         これを使用すればcygwinの導入も不要です。(2008/03/21)         ||~v124I~
                                                                      ||~v124R~
       andre-simon さんの Highlightの場合(configファイルでSHCMDA=で指定)  ||~v124R~||~v125R~
         こちらのほうが使いやすいようです。                           ||~v124R~
         andre-simon さんの ホームページからプラットホームにあったバイナリーを導入してください。||~v124R~||~v125R~
         (コマンドラインpgm "highlight"をxeパッケージのsampleディレクトリーに同梱しています）||~126DI~
         Windows版はinstaller付きです。                               ||~v124R~
         commandline プログラムのみ使用するので、Linux版ではgui版はコンパイルできなくてもかまいません。||~v127R~
         boost依存もないので導入は簡単です。                          ||~v125R~
         COBOL,PLIなどサポートする言語タイプも多いようです,           ||~v124R~
         カラーの変更はxeのcfgファイル CMAPオプション指定でしてください。||~v124R~
         このハイライターはオープンソースですが、軽いので常駐モードは作っていません。||~v124R~
                                                                      ||~v125R~
         Windows 版は sample デレクトリーに xe に必要な範囲でコピーを入れてあります。||~v125R~
         Windows版は cfg ファイルなど Dataディレクトリーは省略値で exe のある場所のようです。||~v125R~
         Linux は /usr/share/highlight ですが --data-dir= で指定変更できます。||~v125R~
                                                                      ||~v125R~
         ansi オプションは v3.1 では -A は無効で --out-format=ansi が有効となっています||~v125R~
         従って、xe は内部指定をやめたので、cfg ファイルで            ||~126DR~
             ::xesynw.cfg(Windows), ::xesynl.cfg(Linux), ::xesyna.cfg(Android)||~126DR~
         バージョンにあわせたオプションを指定してください             ||~v125R~
            旧: SHCMDA= "d:\gnuwin32\WinHighlight\highlight.exe -q -A ||~v125R~
            新: SHCMDA= "d:\gnuwin32\WinHighlight\highlight.exe -q --out-format=ansi||~v125R~
         アンドロイド版は v2.16を同梱しています。データファイルは以下の場所に展開しています||~126DR~
           SHCMDA= "highlight -q --data-dir=/data/data/com.xe.Axe/files/highlight-data --add-config-dir=/data/data/com.xe.Axe/files/highlight-data --out-format=ansi "||~126DR~
                                                                      ||~v124I~
    ハイライターのANSI-escタイプの出力をパイプで受け取り解析しその出力をxeが表示します。||~v124R~
    escタイプの出力にはカラーとフォントスタイル情報を指定するANSI ESC シーケンスコードが含まれています。||~v124R~
    (元のソースにescコードが含まれていると正しく表示できません。)     ||~v124R~
    (注）プロセスのI/Oを監視するウィルス対策ソフトがパフォーマンスに影響することがあります。||~v124I~
                                                                      ||~v124R~
    (ANSI のフォントスタイルコードは NORMAL:0, BOLD:1, UNDERLINE:4, BLINK:5, REVERSE:7, INVISIBLE:8. カラーコードは後述)||~v124R~
    (添付ツールxeacbは単独でANSI Esc シーケンス入りのファイルのブラウザーとしても使用できます。)||~v124R~
                                                                      ||~v124R~
    行を変更してもすぐシンタックスの再評価は行われません。省略値ではCtrl+sを押すごとに再評価します。||~v124R~
    Enterキーに連動して再評価するように設定も出来ますが、大きなファイルでは反応が遅くなります。||~v124R~
    行を変更してもすぐシンタックスの再評価は行われません。省略値ではCtrl+sを押すごとに再評価します。||~v124I~
    Enterキーに連動して再評価するように設定も出来ますが、大きなファイルでは反応が遅くなります。||~v124I~
    一番応答が良いのは                                                ||~v124I~
      1.ENTERキートリガー設定無し。                                   ||~v124I~
      2.Ctrl+sで必要な都度更新行のみの再評価。                        ||~v124I~
      3.マルチラインシンタックスの評価が必要になったら"SYN ALL"コマンド。||~v124I~
    応答に問題がなければ次の設定がいいかと思います。                  ||~v124I~
      1.ENTERキートリガー設定は更新行のみの評価無し。                 ||~v124I~
      2.Ctrl+sで必要な都度全行の再評価。                              ||~v124I~
    関連するcfg設定は                                                 ||~v124I~
      0. OPEN=/OPEN_EXT=で開く時からシンタックスハイライトONに設定。  ||~v124I~
      1. ENTER=でENTERキーのトリガー設定。                            ||~v124I~
      2. UPDONLY_EXT=でCtrl+sで全行/更新行評価を設定。                ||~v124I~
                                                                      ||~v124R~
    (a)コマンド                                                       ||~v124R~
                                                                      ||~v124R~
       SYN [ ? | ALL | RESET | ENTER | ENTERA | ON [lang-type] | OFF] ||~v124I~
            ?                 : ヘルプと現在の状況を若干表示。        ||~v124R~
            ALL               : 更新の有無、cfgファイルのUPDONLY_EXTの設定にかかわらず全行の再評価を実施||~v124I~
            RESET             : config ファイルの再読み込み。         ||~126DR~
            ENTER             : 現在開いているファイルに "ENTERキー入力時に再評価実施" を設定。||~v124I~
                                再評価は更新行。複数行にわたるシンタックスは考慮されないが応答が良い。||~v124I~
                                全行の再評価は適宜 SYNコマンド(Ctrl+S)で実施すればよい。||~v124I~
            ENTERA            : 現在開いているファイルに "ENTERキー入力時に再評価実施" を設定。||~v124I~
                                再評価はファイルの全行。複数行にわたるシンタックスは考慮されるが応答が悪い。||~v124I~
            ON [lang-type]    : 現在開いているファイルで前回から変更があればのファイル全体の再評価を実施。||~v124I~
                                (但しcfgファイルのUPDONLY_EXTに該当する場合は更新行のみ再評価)||~v124I~
                                lang-type はファイルの言語タイプ(拡張子)で||~v124I~
                                現ファイルの拡張子が適当でない時に指定する。||~v124I~
            OFF               : 現在開いているファイルのSyntaxHighlight表示を停止。||~v124I~
                                                                      ||~v124R~
       オペランド無しは "SYN ON"で 省略値は Ctrl+s を割り当て。       ||~v124R~
                                                                      ||~v124R~
    (b)設定ファイル。                                                 ||~v124R~
                                                                      ||~v124R~
       ワークディレクトリー(省略値はc:\xe_wdないしは/home/userID/xe_wdnnnn)にcfgファイルを作成してください。||~v124R~
       (Windows版はxesynw.cfg,Linux版はxesynl.cfg,Android版はxesyna.cfg)||~126DR~
       source-highlightの設定は後述(d)、andre-simon's Highlight の設定については後述-(e).||~v124R~
       ANSI ESC シーケンスについては後述-(f)を参照。                  ||~v124R~
                                                                      ||~v124R~
          SHCMD=       :source-highlight 実行コマンド。               ||~v124R~
                        省略値は "source-hightlight -f esc"。 -f escは自動で付与されます。||~v124R~
                        Windowsでバッチファイルを使用するときはコマンドの前に||~v124R~
                        "@"を付けてコマンドのエコーが標準出力に出ないようにしてください。||~v124R~
                        そうしないと"Invalid Index file"等のエラーメッセジが出ます。||~v124R~
          SHCMDA=      :andre-simonのHighlightを実行します。          ||~v124R~
                       パスがスペースを含む場合は次のように指定してください||~v125R~
                         SHCMDA= '""c:\Program Files\WinHighlight\highlight.exe"" -q --out-format=ansi'||~v125R~
                                                                      ||~v124R~
          ENTER =      :Enterキー入力をシンタックスの再評価のトリガーに閾値をファイルの行数で指定。||~v124I~
                        ファイルを開く時行数がここでの指定以内の場合Enterキー入力が再評価(更新行のみ)のトリガーになります。||~v124I~
                        ファイルを開いた後ではSYNコマンドで変更できます。||~v124I~
                        "0" はOFFで再評価はCtrl+sで実施。             ||~v124I~
                        "-1"は無制限でEnterキーをトリガーとします。   ||~v124I~
                        省略値は-1。                                  ||~v124I~
                                                                      ||~v124R~
          OPEN  =      :ファイルを開く時にシンタックスハイライト評価をする指定。||~v124R~
                        "Y":次の OPEN_EXT パラメータに指定がある拡張子のファイルをONとする。||~v124R~
                        "N":ファイルを開く時はOFFとする。後でSYNコマンドでONにできます。||~v124R~
                        "A":全てのファイルでファイルを開く時からONとする。||~v124R~
          OPEN_EXT=    :OPEN=y 指定の時に対象となるファイル拡張子のリストを指定。||~v124R~
                        例) OPEN_EXT=c cpp h hpp                      ||~v124R~
          UPDONLY_EXT  :"SYN ON"コマンド(Ctrl+s)での再評価を更新行に限る言語タイプの拡張子をリストします。||~v124I~
                        C言語の/* */コメントのように複数行にわたるシンタックスを持たない言語タイプでは||~v124I~
                        更新行だけ再評価すればよいので"SYN ON"(Ctrl+s)の応答が速くなります。||~v124I~
                        ENTERキーをトリガーキー設定している場合はENTERキーで更新行のみの再評価は実施||~v124I~
                        されているので"SYN ON"(Ctrl+s)を使用する理由がないので意味がありません。||~v124I~
                        Enterキーの応答がトリガーキー設定で少しでも遅くなるのを嫌う場合で||~v124I~
                        その言語は本来マルチラインシンタックスをもってはいるが"SYN ON"コマンドの応答を早くしたい場合に意味があります。||~v124I~
                        この設定に該当する場合でも"SYN ALL"でファイル全体の再評価がされます。||~v124I~
                        UPDONLY_EXT=default とすると全てのファイルが対象となる。||~v124I~
                        例) ULO_EXT=cob                               ||~v124I~
          PATH_EXT_xxx=:適切な拡張子を持たないファイルのためにディレクトリパス名で拡張子を与えます。||~v124R~
                        xxx(最大７桁まで)に拡張子を指定。１行１経路指定です。||~v124R~
                        指定されたディレクトリー内のファイルはその本来の拡張子にかかわらず||~v124R~
                        xxxの拡張子を持つものとされます。             ||~v124R~
                        例) PATH_cob=d:\src\cobs                      ||~v124R~
                             PATH_syslog=d:\logs\windows\actlog       ||~v124R~
                                                                      ||~v124R~
          BG=          :背景色のパレット番号。各パレット番号の色は0.0画面でチェックしてください。||~v124R~
                        番号は "0" から "15(Windows)/"7"(Linux)。     ||~v124R~
          BG_BROWSE    :Browse(表示)モードの時の背景色。              ||~v124R~
                        省略値は BG に同じ                            ||~v124R~
          FG=          :前景色のパレット番号。                        ||~v124R~
                        番号は "0" から "15。                         ||~v124R~
          BG_EOL=      :行末以降の背景色パレット番号。                ||~v124R~
    　　　　　　　　　　省略値は BG(編集モード)またはBG_BROWSE(表示モード)に同じ。||~v124R~
          BG_TAB=      :TAB/印刷不能文字の背景色パレット番号。        ||~v124R~
    　　　　　　　　　　省略値は BG(編集モード)またはBG_BROWSE(表示モード)に同じ。||~v124R~
          BG_UPD=      :更新後未評価の行の背景色パレット番号。        ||~v124R~
    　　　　　　　　　　省略値は 0(黒)                                ||~v124R~
          BG_REVERSE_EDIT=  :Editパネル上のFindコマンド、カット＆ペーストなどの反転時の背景色||~v124R~
                             省略値は 14(黄色)、但しLinux Console版では 6(茶色)||~v124R~
          BG_REVERSE_BROWSE=:Browseパネル上のFindコマンド、カット＆ペーストなどの反転時の背景色||~v124R~
                             省略値は 15(白色)、但しLinux Console版では 6(茶色)||~v124R~
          CMAP  =      :source-highlightはその構成定義にしたがってANSI ESCシーケンスで色番号を||~v124R~
                        出力しますがそれをxeのパレット番号とせずマッピングを換えるときに指定。||~v124R~
                        andre-simon's Highlightはその構成定義ではマッピングを変更出来ないようです。(後述(e)参照)||~v124R~
                        CMAPを使ってください。                        ||~v124R~
                        カラー番号"0"から順に必要なだけ指定。         ||~v124R~
                        例) CMAP  =__.04.10.__.01  # 赤と青の入れ替え、緑を高輝度に設定。"__"は変更無しの意味です。||~v124R~
          RGBn  =      :GUI版(wxe,gxe)ではパレット番号の色も無段階で設定できます。||~v124R~
                        n は 0 から 15 のパレット番号。               ||~v124R~
                        例) rgb2=20e030    # パレット番号２(緑)のRGB値を R:0x20, G:0xe0, B:0x30 に設定。||~v124R~
                                                                      ||~v124R~
          ITALIC_ESC = :source-highlightのesc.outlangで italics に 与えたANSI ESC シーケンスコードをxeに知らせます。||~v124R~
                        "0", "1":bold, "4":underline 以外を指定してください。||~v124R~||~v29tR~
                        省略値は"5":blinkです。省略値をイタリックとするにはesc.outlangを変更してください。||~v124R~
                        andre-simon's Highlightはフォントスタイル指定できません。||~v124R~
          C_BOLD     = :コンソール版でのフォントスタイル=1(Bold)の扱い。 Windows 版のみ。||~v124R~
                         "H":高輝度(省略値), "N":無視、"R":反転。               ||~v124R~||~v29tR~
          C_UNDERLINE= :コンソール版でのフォントスタイル=4(Underline)の扱い。||~v124R~
                         "H":高輝度, "N":無視(省略値)、"R":反転。               ||~v124R~||~v29tR~
          C_ITALIC   = :コンソール版でのフォントスタイル=5(但し、ITALIC_ESCを指定していればその値)の扱い。||~v124R~
                         "H":高輝度, "N":無視(省略値)、"R":反転。               ||~v124R~||~v29tR~
          G_BOLD     = :GUI版(wxe,gxe)でのフォントスタイル=1(Bold)の扱い。||~v124R~
                         "H":高輝度, "Y":Bold,  "N":無視、"R":反転。省略値は"YH"。||~v124R~||~v29tR~
          G_UNDERLINE= :GUI版(wxe)でのフォントスタイル=4(Underline)の扱い。gxeではサポートされません。||~v124R~
                         "H":高輝度, "Y":Undrerline,  "N":無視、"R":反転。省略値は"Y"。||~v124R~||~v29tR~
          G_ITALIC   = :GUI版(wxe,gxe)でのフォントスタイル=5(但し、ITALIC_ESCを指定していればその値)の扱い。||~v124R~
                         "H":高輝度, "Y":Italic,  "N":無視、"R":反転。省略値は"Y"。||~v124R~||~v29tR~
                                                                      ||~v124R~
    (c)サンプルファイル。                                             ||~v124R~
                                                                      ||~v124R~
    ######################################################################################||~v124R~
    # xesynw.cfg                                                      ||~v124R~
    # ==syntax highlight configuration==                              ||~v124R~
    #                                                                 ||~v124R~
    #   if err detected, correct, save then use "SYN RESET" cmd to re-load config file.||~v124R~
    #                                                                 ||~v124R~
    ### execution                                                     ||~v124R~
    #                                                                 ||~v124R~
    #  select highight command from SHCMD or SHCMDR or SHCMDA         ||~126DR~
    #     SHCMDA is recomended(installation required,"sample" dir contains required files(highlight-3.7)||~126DR~
    #                                                                 ||~126DR~
    #     SHCMD=       :Specify source-highlight command              ||~v124R~
    #                   default "source-highlight -f esc". "-f esc" (outlang:esc) is always appended.||~v124R~
    #                   If use .bat file on Windows, use "@" to avoid that cmd echo is written to stdout.||~v124R~
    #     SHCMDA=      :Specify andre-simon's Highlight command       ||~v124R~
    #                    Specify as following if space is embedded in the path.||~v125R~
    #                    SHCMDA= '""c:\Program Files\WinHighlight\highlight.exe"" -q --out-format=ansi'||~v125R~
    #     ENTER =      :Specify file line count threshold to use Enter key as trigger of SyntaxHighlight re-evaluation.||~v124R~
    #                   If the file line count is under this value at open,||~v124R~
    #                   Enter key is treated as trigger of re-evaluation of updated lines..||~v124I~
    #                   You can change triger ON/OFF status by SYN cmd later.||~v124I~
    #                   0 :Do not use as trigger. Use Ctrl+s to evaluate syntax.||~v124I~
    #                   -1:No line count limit.(Default)              ||~v124I~
    ### file type                                                     ||~v124R~
    #     OPEN  =      :SyntaxHighlight mode at opening file.         ||~v124R~
    #                   "Y":SyntaxHighlight mode if the extention is listed by OPEN_EXT||~v124R~
    #                   "N":always No SyntaxHighlight mode at open    ||~v124R~
    #                   "A":always SyntaxHighlight mode at open       ||~v124R~
    #     OPEN_EXT=    :Specify file extention list for the case of OPEN=y.||~v124R~
    #                   ex) OPEN_EXT=c cpp h hpp                      ||~v124R~
    #     UPDONLY_EXT= :Specify file extention list to limit evaluation by "SYN ON"(Ctrl+s) cmd to updated lines only.||~v124I~
    #                   If the language has no multiline syntax such as /* */ comment in c-like language,||~v124I~
    #                   You get better response by limiting syntax evaluation to updated lines only.||~v124I~
    #                   If you set ENTER key as trigger of re-evaluation,there is no need to use "SYN ON" cmd||~v124I~
    #                   because updated lines evaluation is done by ENTER key.||~v124I~
    #                   If you not want to set ENTER key trigger,and evaluate by "SYN ON"(Ctrl+S) cmd each time||~v124I~
    #                   even the language has multiline syntax, register extension in this list.||~v124I~
    #                   For all lines re-evaluation,"SYN ALL" cmd is used in this case.||~v124I~
    #                   "UPDONLY_EXT=default" means all file extension.||~v124I~
    #                   ex) UPDONLY_EXT=cob                           ||~v124I~
    #     PATH_EXT_xxx=:For the file with missing or improper extension name,specify extention name.||~v124R~
    #                   xxx:max 7 byte extension name. Specify 1 pathname/line.||~v124R~
    #                   All files in the directory is assumed as xxx is its extension name.||~v124R~
    #                   ex) PATH_cob=d:\src\cobs                      ||~v124R~
    #                       PATH_syslog=d:\logs\windows\actlog        ||~v124R~
    ### color                                                         ||~v124R~
    #     BG=          :BackGround color palette number.              ||~v124R~
    #                   You can check the palette color on =0.0 panel.||~v124R~
    #                   Valid value is "0" to "15"(Windows) or "1 to "7"(Linux).||~v124R~
    #     BG_BROWSE    :BackGround color palette number for browse panel||~v124R~
    #                   Default is same as BG                         ||~v124R~
    #     FG=          :ForeGround color palette number               ||~v124R~
    #                   Valid value is "0" to "15"                    ||~v124R~
    #     BG_EOL=      :Background color for the right of EndOfLine.  ||~v124R~
    #                   Default is same as BG(Edit) or BG_BROWSE(Browse)||~v124R~
    #     BG_TAB=      :Background color for TAB/UnPrintable Character.||~v124R~
    #                   Default is same as BG(Edit) or BG_BROWSE(Browse)||~v124R~
    #     BG_UPD=      :Background color for updated and not yet re-evaluated line.||~v124R~
    #                   Default:0(black)                              ||~v124R~
    #     BG_REVERSE_EDIT=  :Background color for reverse on edit panel(Find cmd,Cut&Paste)||~v124R~
    #                        Default:14(yellow) except linux console version(6:brown)||~v124R~
    #     BG_REVERSE_BROWSE=:Background color for reverse on browse panel(Find cmd,Cut&Paste)||~v124R~
    #                        Default:15(white) except Linux console version(6:brown)||~v124R~
    #     CMAP  =      :Color palette re-mapping. Remap ANSI color number to xe's palette.||~v124R~
    #                   Specify from color palette number from 0 to max 15 each.||~v124R~
    #                   Use this option when using andre-simon's Highlight because it is not customizable.||~v124R~
    #                   ex) CMAP=__.04.10.__.01   # swap Red and Blue and use Intense Green("__" means no change.)||~v124R~
    #     RGBn  =      :RGB value for each palette (wxe and gxe only) ||~v124R~
    #                   n:0-->15 (correspond to palette number of xe 0.0 panel)||~v124R~
    #                   ex) rgb2=20e030   # palette No2(green)'rgb value is R:0x20, G:0xe0, B:0x30.||~v124R~
    ### font style                                                    ||~v124R~
    #     ITALIC_ESC = :ANSI esc code for italic.                     ||~v124R~
    #                   Notify value specified on esc.lang file of source-highlight as ANSI font style code:italic.||~v124R~
    #                   Valid value is one digit except reserved "0","1":bold, "4":underline.||~v124R~||~v29TR~
    #                   Default is "5":blink. (If you use this default,specify it on esc.outlang).||~v124R~
    #     C_BOLD     = :treatment of font style:1(BOLD) for console version xe||~v124R~
    #                   "H":HighIntensity, "N":Ignore, "R":Reverse. Default is "H".||~v29tR~
    #     C_UNDERLINE= :treatment of font style:4(UNDERLINE) for console version xe. Not supported for Linux version.||~v124R~
    #                   "H":HighIntensity, "N":Ignore, "R":Reverse.  Default is "N".||~v29tR~
    #     C_ITALIC   = :treatment of font style:5(or value of ITALIC_ESC parameter if used) for console version xe||~v124R~
    #                   "H":HighIntensity, "N":Ignore, "R":Reverse.  Default is "N".||~v29tR~
    #     G_BOLD     = :treatment of font style:1(BOLD) for GUI version xe(wxe,gxe)||~v124R~
    #                   "H":HighIntensity, "Y":Bold, "R":Reverse, "N":Ignore. Default is "YH".||~v29tR~
    #     G_UNDERLINE= :treatment of font style:4(UNDERLINE) for GUI version xe(wxe). Not supported for gxe.||~v124R~
    #                   "H":HighIntensity, "Y":Underline, "R":Reverse, "N":Ignore. Default is "Y".||~v29tR~
    #     G_ITALIC   = :treatment of font style:5(or value of ITALIC_ESC parameter if used) for GUI version xe(wxe,gxe)||~v124R~||~v127R~
    #                   "H":HighIntensity, "Y":Italic, "R":Reverse, "N":Ignore. Default is "Y".||~v29tR~
    ### sample ###########################                            ||~v124R~
    #                                                                 ||~v124R~
    #     SHCMD = "g:\src\syntaxh\GnuWin32\bin\source-highlight --data-dir=g:\src\syntaxh\GnuWin32\share\source-highlight"||~v124R~
    ###   SHCMD = "/usr/local/bin/source-highlight --data-dir=/use/local/share/source-highlight"||~v124R~
    #     OPEN  = y              # display color at file open.        ||~v124R~
    #     ENTER = -1             # Enter key is trigger of re-evaluation||~v124R~
    #     BG    = 7              # Black on White                     ||~v124R~
    #     BG_TAB= 7              # Draw TAB/Unprintable by BG color.  ||~v124R~
    #     CMAP  =__.04.10.__.01  # swap Red and Blue and Intense Green("__" means no change.)||~v124R~
    #     G_ITALIC=N             # ignore italic style                ||~v124R~
    #                                                                 ||~v124R~
    #####################################################################||~v124R~
    #SHCMD = "g:\src\syntaxh\GnuWin32\bin\source-highlight --data-dir=g:\src\syntaxh\GnuWin32\share\source-highlight --style-file=esc.style"   #see source highlight document||~v124R~
    #SHCMDA= "d:\gnuwin32\WinHighlight\highlight.exe -q"              ||~v124R~||~v125R~
     SHCMDA= '""c:\Program Files\WinHighlight\highlight.exe"" -q --out-format=ansi'||~v125R~
    #SHCMDA= '/h/objlinux/up/sample/highlight-3.7/highlight -q --out-format=ansi -D /h/objlinux/up/sample/highlight-3.7 --add-config=/h/objlinux/up/sample/highlight-3.7'||~126DR~
    #ENTER =0                                                         ||~126DR~
     BG    = 7                                                        ||~v124R~
     FG    = 0                                                        ||~v124R~
     BG_EOL= 6                                                        ||~v124R~
     BG_TAB= 10                                                       ||~v124R~
    #BG_UPD= 7                                                        ||~v124R~||~126DR~
    #BG_REVERSE_EDIT=14;                                              ||~v124R~
    #BG_REVERSE_BROWSE=1                                              ||~v124R~
    #CMAP  =__.04.10.__.01.__.14  # swap Red and Blue and Intense Green("__" means no change.)||~v124R~
    #RGB1 = 20e030                                                    ||~v124R~
    #RGB4 = 80f020                                                    ||~v124R~
    #RGB14= f01080                                                    ||~v124R~
    #ITALIC_ESC= 0                                                    ||~v124R~
    #C_BOLD=h                                                         ||~v124R~
    #C_ITALIC=n                                                       ||~v124R~
    #C_UNDERLINE=n                                                    ||~v124R~
    #G_BOLD=y                                                         ||~v124R~
    #G_ITALIC=hy                                                      ||~v124R~
     G_UNDERLINE=h                                                    ||~v124R~
     OPEN  = y                                                        ||~v124R~
     OPEN_EXT= c cpp java                                             ||~126DR~
    #######                                                           ||~v124R~
    PATH_EXT_cob=g:\src\xe\cobs                                       ||~v124R~
    #####################################################################||~v124R~
                                                                      ||~v124R~
    (d)source-highlight 設定。                                        ||~v124R~
                                                                      ||~v124R~
       詳細は前述のsource-highlightのHPを見て下さい。                 ||~v124R~
       ここでは変更箇所など関連部のみかいつまんで記述します。         ||~v124R~
       (source-highlight v2.8時点では COBOL の対応がありません。最後のCOBOLシンタックス記述は自作です||~v124R~
        data-dirにコピーして使用してください)                         ||~v124R~
                                                                      ||~v124R~
       .lang.map                                                      ||~v124R~
                                                                      ||~v124R~
        拡張子 = langファイル の形式で拡張子とシンタックス記述ファイルとの対応をとります。||~v124R~
        例えば c については 次のような記述があります                  ||~v124R~
        ###                                                           ||~v124R~
            cpp = cpp.lang                                            ||~v124R~
            c = cpp.lang                                              ||~v124R~
            C = cpp.lang                                              ||~v124R~
            cc = cpp.lang                                             ||~v124R~
            h = cpp.lang                                              ||~v124R~
            hh = cpp.lang                                             ||~v124R~
            H = cpp.lang                                              ||~v124R~
            hpp = cpp.lang                                            ||~v124R~
                                                                      ||~v124R~
        COBOL を使用する場合はファイル拡張子を例えば .cob とした場合次のような行を追加します。||~v124R~
        cobol.lang ファイルは後述。                                   ||~v124R~
            cob  = cobol.lang                                         ||~v124R~
                                                                      ||~v124R~
       .cpp.lang                                                      ||~v124R~
                                                                      ||~v124R~
        c 言語のシンタックス(コメント、キーワードなどの判定方法)がsource-highlightの文法と||~v124R~
        正規表現で記述されています。                                  ||~v124R~
                                                                      ||~v124R~
        ###                                                           ||~v124R~
            include "c_comment.lang"                                  ||~v124R~
                                                                      ||~v124R~
            state preproc start '^[[:blank:]]*#(?:[[:blank:]]*include)' begin||~v124R~
                    string delim "<" ">"                              ||~v124R~
                    string delim "\"" "\"" escape "\\"                ||~v124R~
                    include "c_comment.lang"                          ||~v124R~
            end                                                       ||~v124R~
                                                                      ||~v124R~
            preproc = '^[[:blank:]]*#([[:blank:]]*[[:word:]]*)'       ||~v124R~
                                                                      ||~v124R~
            include "number.lang"                                     ||~v124R~
                                                                      ||~v124R~
            string delim "\"" "\"" escape "\\"                        ||~v124R~
            string delim "'" "'"  escape "\\"                         ||~v124R~
                                                                      ||~v124R~
            keyword = "__asm|__cdecl|__declspec|__export|__far16|__fastcall|__fortran|__import",||~v124R~
                  "__pascal|__rtti|__stdcall|_asm|_cdecl|__except|_export|_far16|_fastcall",||~v124R~
                  "__finally|_fortran|_import|_pascal|_stdcall|__thread|__try|asm|auto",||~v124R~
                  "break|case|catch|cdecl|class|const|const_cast|continue|default|delete",||~v124R~
                  "do|dynamic_cast|else|enum|explicit|extern|false|for|friend|goto",||~v124R~
                  "if|inline|mutable|namespace|new|operator|pascal|private|protected",||~v124R~
                  "public|register|reinterpret_cast|return|sizeof|static|static_cast",||~v124R~
                  "struct|switch|template|this|throw|true|try|typedef|typeid|typename|union",||~v124R~
                  "using|virtual|volatile|while"                      ||~v124R~
                                                                      ||~v124R~
            type = "bool|char|double|float|int|long|short|signed|unsigned|void|wchar_t"||~v124R~
                                                                      ||~v124R~
            include "symbols.lang"                                    ||~v124R~
                                                                      ||~v124R~
            cbracket = "{|}"                                          ||~v124R~
                                                                      ||~v124R~
            include "function.lang"                                   ||~v124R~
                                                                      ||~v124R~
       .default.style                                                 ||~v124R~
                                                                      ||~v124R~
         コメント、キーワードなどの種別の表示形式(色、フォントスタイル)が指定されています||~v124R~
         SHCMD で --style-file= パラメータを指定すれば変更できます。  ||~v124R~
                                                                      ||~v124R~
        ###                                                           ||~v124R~
            keyword blue b ;    // for language keywords              ||~v124R~
            type darkgreen ;    // for basic types                    ||~v124R~
            string red f ;      // for strings and chars              ||~v124R~
            comment brown i ;   // for comments                       ||~v124R~
            number purple ;     // for literal numbers                ||~v124R~
            preproc darkblue b ;    // for preproc directives (e.g. #include, import)||~v124R~
            symbol darkred ;    // for simbols (e.g. <, >, +)         ||~v124R~
            function black b;   // for function calls and declarations||~v124R~
            cbracket red;       // for block brackets (e.g. {, })     ||~v124R~
                                                                      ||~v124R~
       .esc.outlang                                                   ||~v124R~
                                                                      ||~v124R~
         source-highlightの省略値は出力形式はhtmlですが、             ||~v124R~
         xeは -f esc パラメータ指定で ESCシーケンス形式の出力を利用します。||~v124R~
         このファイルで style 記述に対応したESCコードを記述します     ||~v124R~
         italic を利用するには                                        ||~v124R~
            italics "$style"                                          ||~v124R~
         の行を                                                       ||~v124R~
            italics "5$style"                                         ||~v124R~
         に変更します。 5 はxeの省略値でこの値と xe の構成定義 ITALIC_ESC= を一致させます。||~v124R~
                                                                      ||~v124R~
         ANSI 定義は後述(f)を参照してください.                        ||~v124R~
                                                                      ||~v124R~
        ###                                                           ||~v124R~
            extension "txt"                                           ||~v124R~
                                                                      ||~v124R~
            styletemplate "\x1b[$stylem$text\x1b[m"                   ||~v124R~
            styleseparator ";"                                        ||~v124R~
                                                                      ||~v124R~
            bold "01$style"                                           ||~v124R~
            underline "04$style"                                      ||~v124R~
            italics "$style"                                          ||~v124R~
            color "$style"                                            ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
            colormap                                                  ||~v124R~
            "green" "32"                                              ||~v124R~
            "red" "31"                                                ||~v124R~
            "darkred" "31"                                            ||~v124R~
            "blue" "34"                                               ||~v124R~
            "brown" "33"                                              ||~v124R~
            "pink" "35"                                               ||~v124R~
            "yellow" "33"                                             ||~v124R~
            "cyan" "36"                                               ||~v124R~
            "purple" "35"                                             ||~v124R~
            "orange" "31"                                             ||~v124R~
            "brightorange" "31"                                       ||~v124R~
            "brightgreen" "32"                                        ||~v124R~
            "darkgreen" "32"                                          ||~v124R~
            "black" "30"                                              ||~v124R~
            "teal" "37"                                               ||~v124R~
            "gray" "37"                                               ||~v124R~
            "darkblue" "34"                                           ||~v124R~
            default "30;"                                             ||~v124R~
            end                                                       ||~v124R~
                                                                      ||~v124R~
            # Decorate text with terminal control sequences (escape sequences).||~v124R~
            # To set the attribute/fg_color/bg_color we need to print ||~v124R~
            #   "\033[AA;FF;BBm"                                      ||~v124R~
            # where AA is one of these:                               ||~v124R~
            # 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed,||~v124R~
            # FF is one of these:                                     ||~v124R~
            # 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white||~v124R~
            # BB is one of these:                                     ||~v124R~
            # 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white||~v124R~
            #                                                         ||~v124R~
            # Any of AA,FF,BB may be omited.                          ||~v124R~
            #                                                         ||~v124R~
            # To reset do default color/attribute we need to print    ||~v124R~
            # "\033[m"                                                ||~v124R~
                                                                      ||~v124R~
       .cobol.outlang                                                 ||~v124R~
                                                                      ||~v124R~
         キーワードはvim の定義を参照しました。                       ||~v124R~
         Col.1-6をコメントとしない場合は次の行を抜いてください        ||~v124R~
            comment='^.{6}'                                #col.1-6:comment||~v124R~
         Col.73以降をコメントとする方法はわかりません。教えてください。||~v124R~
                                                                      ||~v124R~
        ###                                                           ||~v124R~
                                                                      ||~v124R~
            ######################################                    ||~v124R~
            # for COBOL                                               ||~v124R~
            ######################################                    ||~v124R~
            #delm                                                     ||~v124R~
            # minus"-" may be part of variable                        ||~v124R~
            #                                                         ||~v124R~
            #symbol = "~","!","%","^","*","(",")","-","+","=","[",    ||~v124R~
            symbol = "~","!","%","^","*","(",")","+","=","[",         ||~v124R~
                    "]","\\",":",";",",",".","/","?","&","<",">","\|" ||~v124R~
            symbol = '[[:blank:]]+-[[:blank:]]+'                      ||~v124R~
                                                                      ||~v124R~
            ######################################                    ||~v124R~
            #data type to PICTURE                                     ||~v124R~
            ######################################                    ||~v124R~
            type="BINARY|PACKED-DECIMAL"                              ||~v124R~
            type='(COMP|COMPUTATIONAL)-[123456XN]'                    ||~v124R~
            type='(PIC|PICTURE)[[:blank:]]+X(\([[:digit:]]+\)|X*)'    ||~v124R~
            type='(PIC|PICTURE)[[:blank:]]+[S]?(9\([[:digit:]]+\)|9+)[V]?(9\([[:digit:]]+\)|9+)?'||~v124R~
            type='(PIC|PICTURE)[[:blank:]]+[+-]?([Z9]\([[:digit:]]+\)|[Z9]+)([\.,]?([Z9]\([[:digit:]]+\)|[Z9]+)?)*(E[+-]?9+)?'||~v124R~
            ######################################                    ||~v124R~
            # keyword from VIM  2008/02/26                            ||~v124R~
            ######################################                    ||~v124R~
            keyword="DIVISION"                                        ||~v124R~
            keyword="IDENTIFICATION|ENVIRONMENT|DATA|PROCEDURE"       ||~v124R~
            keyword="PROGRAM-ID|SOURCE-COMPUTER|OBJECT-COMPUTER|SPECIAL-NAMES|FILE-CONTROL|I-O-CONTROL"||~v124R~
            keyword="CONFIGURATION|INPUT-OUTPUT|FILE|WORKING-STORAGE|LOCAL-STORAGE|LINKAGE"||~v124R~
            keyword="FUNCTION-POINTER|PROCEDURE-POINTER"              ||~v124R~
            keyword = "ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALPHABET|ALPHABETIC",||~v124R~
                "ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALS",||~v124R~
                "ALTERNATE|AND|ANY|ARE|AREA|AREAS|ASCENDING|ASSIGN|AT|AUTHOR|BEFORE|BINARY",||~v124R~
                "BLANK|BLOCK|BOTTOM|BY|CANCEL|CBLL|CD|CF|CH|CHARACTER|CHARACTERS|CLASS",||~v124R~
                "CLOCK-UNITS|CLOSE|COBOL|CODE|CODE-SET|COLLATING|COLUMN|COMMA|COMMON",||~v124R~
                "COMMUNICATIONS|COMPUTATIONAL|COMPUTE|CONTENT|CONTINUE",||~v124R~
                "CONTROL|CONVERTING|CORR|CORRESPONDING|COUNT|CURRENCY|DATE|DATE-COMPILED",||~v124R~
                "DATE-WRITTEN|DAY|DAY-OF-WEEK|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE",||~v124R~
                "DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT",||~v124R~
                "DELARATIVES|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION",||~v124R~
                "DETAIL|DISABLE|DISPLAY|DIVIDE|DIVISION|DOWN|DUPLICATES|DYNAMIC|EGI|ELSE|EMI",||~v124R~
                "ENABLE|END-ADD|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF",||~v124R~
                "END-MULTIPLY|END-OF-PAGE|END-READ|END-RECEIVE|END-RETURN",||~v124R~
                "END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING",||~v124R~
                "END-WRITE|EQUAL|ERROR|ESI|EVALUATE|EVERY|EXCEPTION|EXIT",||~v124R~
                "EXTEND|EXTERNAL|FALSE|FD|FILLER|FINAL|FIRST|FOOTING|FOR|FROM",||~v124R~
                "GENERATE|GIVING|GLOBAL|GREATER|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|I-O",||~v124R~
                "IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE",       ||~v124R~
                "INITIATE|INPUT|INSPECT|INSTALLATION|INTO|IS|JUST",   ||~v124R~
                "JUSTIFIED|KEY|LABEL|LAST|LEADING|LEFT|LENGTH|LOCK|MEMORY",||~v124R~
                "MERGE|MESSAGE|MODE|MODULES|MOVE|MULTIPLE|MULTIPLY|NATIVE|NEGATIVE|NEXT|NO|NOT",||~v124R~
                "NUMBER|NUMERIC|NUMERIC-EDITED|OCCURS|OF|OFF|OMITTED|ON|OPEN",||~v124R~
                "OPTIONAL|OR|ORDER|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|PACKED-DECIMAL|PADDING",||~v124R~
                "PAGE|PAGE-COUNTER|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|POSITION|POSITIVE",||~v124R~
                "PRINTING|PROCEDURES|PROCEDD|PROGRAM|PURGE|QUEUE|QUOTES",||~v124R~
                "RANDOM|RD|READ|RECEIVE|RECORD|RECORDS|REDEFINES|REEL|REFERENCE|REFERENCES",||~v124R~
                "RELATIVE|RELEASE|REMAINDER|REMOVAL|REPLACE|REPLACING|REPORT|REPORTING",||~v124R~
                "REPORTS|RERUN|RESERVE|RESET|RETURN|RETURNING|REVERSED|REWIND|REWRITE|RF|RH",||~v124R~
                "RIGHT|ROUNDED|RUN|SAME|SD|SEARCH|SECTION|SECURITY|SEGMENT|SEGMENT-LIMITED",||~v124R~
                "SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SIGN|SIZE|SORT",||~v124R~
                "SORT-MERGE|SOURCE|STANDARD",                         ||~v124R~
                "STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2",||~v124R~
                "SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLYING",||~v124R~
                "TAPE|TERMINAL|TERMINATE|TEST|TEXT|THAN|THEN|THROUGH|THRU|TIME|TIMES|TO|TOP",||~v124R~
                "TRAILING|TRUE|TYPE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES",||~v124R~
                "VARYING|WHEN|WITH|WORDS|WRITE"                       ||~v124R~
            keyword="CONTAINS"                                        ||~v124R~
            keyword="IF|INVALID|END|EOP"                              ||~v124R~
            keyword="ALL"                                             ||~v124R~
            keyword="SPACE|SPACES|NULL|ZERO|ZEROES|ZEROS|LOW-VALUE|LOW-VALUES"||~v124R~
            keyword="GO|GOTO"                                         ||~v124R~
            keyword="COPY"                                            ||~v124R~
            keyword="ALTER|ENTER|RENAMES"                             ||~v124R~
            keyword="OCCURS|DEPENDING|VARYING|BINARY|COMP|REDEFINES"  ||~v124R~
            keyword="REPLACING|RUN"                                   ||~v124R~
            keyword="EXEC|END-EXEC"                                   ||~v124R~
            keyword="CALL|END-CALL|CANCEL|GOBACK|PERFORM|END-PERFORM|INVOKE"||~v124R~
            #keyword='(?=.*[[:lower:]])(?=.*[[:upper:]])(?=.*[[:punct:]]).+'||~v124R~
            #keyword='(?=.*[[:lower:]])A.*'                           ||~v124R~
            #keyword='(?(?=.{80}).{8}$)'        //cond not support    ||~v124R~
            #keyword='(?(?=xx)AAB|AAC)'     //cond not support        ||~v124R~
                                                                      ||~v124R~
            ######################################                    ||~v124R~
            #comment:no consideration of COL.1-6,73-                  ||~v124R~
            ######################################                    ||~v124R~
            #comment start '^.{72}(?=.+)'                             ||~v124R~
            comment start '^.{6}[*/C]'                     #*,/,C on col.7||~v124R~
            comment='^.{6}'                                #col.1-6:comment||~v124R~
            #state comment start '^.{72}'    begin                    ||~v124R~
            #   comment='.{8}'                                        ||~v124R~
            #end                                                      ||~v124R~
            #environment comment start '^.' begin                     ||~v124R~
            #   comment = '^.{6}' exitall                             ||~v124R~
            #end                                                      ||~v124R~
            #comment start `(?(?=^.{72}).{8}$)`                       ||~v124R~
            #comment start '(^[[:blank:]]{72}).{8}$'                  ||~v124R~
            ######################################                    ||~v124R~
            #string:no consideration of COL.1-6,73-                   ||~v124R~
            ######################################                    ||~v124R~
            #string delim "\"" "\"" escape "\"\""                     ||~v124R~
            #string delim "'"  "'"  escape "''"                       ||~v124R~
            string delim '[X]?\"'  '(\"|.$)'                          ||~v124R~
            string delim '[X]?\''  '(\'|.$)'                          ||~v124R~
            ######################################                    ||~v124R~
            # numbers                                                 ||~v124R~
            ######################################                    ||~v124R~
            number = '\<[+-]?(([[:digit:]]*\.)?[[:digit:]]+([eE][+-]?[[:digit:]]+)?)\>'||~v124R~
                                                                      ||~v124R~
            ######################################                    ||~v124R~
            #include "function.lang"                                  ||~v124R~
            # no function definition                                  ||~v124R~
            ######################################                    ||~v124R~
                                                                      ||~v124R~
    (e)andre-simon's Highlight 設定。                                 ||~v124R~
                                                                      ||~v124R~
       .v2.7 でテストしました。                                       ||~v124R~
       .installで構成ファイルの場所はRegistryに登録されます。         ||~v124R~
       .構成定義はandre-simonのhomepageを見て下さい。                 ||~v124R~
        ANSI 出力は ansigenerator.cppで以下のように固定されているようです。||~v124R~
        ("31","34"...の意味は後述(f)ANSIの定義を参照してください.)    ||~v124R~
        カラーの変更は xesynw.cfg/xesynl.cfg の CMAP オプションで与えてください。||~v124R~
        Bold,Italicなどの指定は出来ないようです(第一パラメータ"00")。 ||~v124R~
                                                                      ||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "31")); //str       ||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "34"));//number     ||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "34"));//sl comment ||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "34"));//ml comment ||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "35"));//escapeChar ||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "35"));//directive  ||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "31"));//directive string||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "30"));//linenum    ||~v124R~
          styleTagOpen.push_back(getOpenTag("00", "00"));//symbol     ||~v124R~
                                                                      ||~v124R~
          getMatchingOpenTag(unsigned int styleID)                    ||~v124R~
            return (styleID)?getOpenTag("00", "32", ""):getOpenTag("00", "33");||~v124R~
          (langDef Dir の .lang の $KW_LISTのクラスで "32" か "33" になる模様。）||~v124R~
                                                                      ||~v124R~
    (f)ANSIでの定義。                                                 ||~v124R~
                                                                      ||~v124R~
      (注) WindowsではR(赤)とB(青)のBitの扱いがLinuxとはが入れ替わるようです。||~v124R~
           style                                                      ||~v124R~||~v124R~
             NORMAL     '0'                                           ||~v124R~||~v124R~
             BOLD       '1'                                           ||~v124R~||~v124R~
             UNDERLINE  '4'                                           ||~v124R~||~v124R~
             BLINK      '5'                                           ||~v124R~||~v124R~
             REVERSE    '7'                                           ||~v124R~||~v124R~
             INVISIBLE  '8'                                           ||~v124R~||~v124R~
           foreground colors                                          ||~v124R~||~v124R~
             30 black                                                 ||~v124R~||~v124R~
             31 red                                                   ||~v124R~||~v124R~
             32 green                                                 ||~v124R~||~v124R~
             33 yellow                                                ||~v124R~||~v124R~
             34 blue                                                  ||~v124R~||~v124R~
             35 magenta                                               ||~v124R~||~v124R~
             36 cyan                                                  ||~v124R~||~v124R~
             37 white                                                 ||~v124R~||~v124R~
           background colors                                          ||~v124R~||~v124R~
             40 black                                                 ||~v124R~||~v124R~
             41 red                                                   ||~v124R~||~v124R~
             42 green                                                 ||~v124R~||~v124R~
             43 yellow                                                ||~v124R~||~v124R~
             44 blue                                                  ||~v124R~||~v124R~
             45 magenta                                               ||~v124R~||~v124R~
             46 cyan                                                  ||~v124R~||~v124R~
             47 white                                                 ||~v124R~||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
#endif  //W32 || LNX                                                  ||~v124R~
                                                                      ||~v124R~
#if defined(W32) || defined(UNX)
   .リモートファイルアクセス。
                                                                      ||~v124I~
    #if defined(W32)                                                  ||~v124R~
                                                                      ||~v124I~
      .Windows間で共有ファイルをアクセスする場合はUNC表記が利用出来ます。||~v124R~
                                                                      ||~v124I~
       例えば \\{サーバー名/IPアドレス}\{共有フォルダー}\...\{ファイル名}||~v124I~
         但しlogin パスワードが必要な場合はあらかじめ explorerでlogin するか||~v124I~
         net use \\ip-addr コマンドでログインしてください。           ||~v124I~
         ex) net use \\server1\folder1 password /user:domainname\userid||~v124I~
       また、接続はアイドルタイムアウト、最大接続ユーザー数があります。||~v124R~
       "net config server" で確認してください。                       ||~v124R~
       接続が切れるとネーワーク探索が入り時間がかかります。           ||~v124R~
       省略値１５分、"net config server /autodisconnect:"で変更可能   ||~v124R~
       最大ユーザー数(XP-Home:5,XP-Professional:10)を超えると接続できません。||~v124R~
       サーバー名は "net view"で確認できます。                        ||~v124R~
       共有名は "net view \\サーバー名"でリストされます。             ||~v124I~
                                                                      ||~v124I~
       尚、接続に時間がかかる場合はWebClientサービスを無効にしてください。||~v124I~
       (共有名がドライブＩＤなど１文字だと起こらない?)                ||~v124I~
       このサービスが有効の場合これを使ってHTTP(port:80)通信を試みるので||~v124I~
       サーバーFirewallがport:80を無視する場合時間がかかるそうです。  ||~v124I~
       (コントロールパネル-->管理-->サービス、Webclientを選択して右クリックし||~v124I~
       無効を設定する。)                                              ||~v124I~
       サーバー側でport:80の許可を設定をする方法もあります。          ||~v124I~
                                                                      ||~v124I~
       共有ファイルの場合の特殊処理。                                 ||~v124I~
         cd コマンド, dir-list 行コマンド "." で現行ドライブ、現行dirを||~v124R~
         共有ファイルに設定することもできます。                       ||~v124R~
           例えば cd \\server\dir とすると                            ||~v124R~
           \:abc は \\server\dir\abc,                                 ||~v124R~
           \:\abc は \\server\abc となります。                        ||~v124R~
           現行ドライブが \:の場合("."行コマンドはドライブとパスの両方を設定します)||~v124I~
           xyz は \\server\dir\xyz になります。                       ||~v124I~
         現行ドライブは保存されませんが、                             ||~v124R~
         共有ファイルに対する現行Dir設定は保存され、次のセッションでも有効です。||~v124I~
         現行ドライブが共有ファイルの状態でxe を終了すると、          ||~v124R~
         xe /R で次のセッションでこの設定を復元できます               ||~v124R~
                                                                      ||~v124R~
         OPT UNDEL が ON の設定の時、                                 ||~v124R~
         dirlist上で復元可能削除コマンド("d"または"/"行コマンド)による削除では||~v124R~
         "u"(Undo)行コマンドに備えて同じdir内でrenameで保存されます。 ||~v124R~
         これらは セッション終了時に実際に削除されます。              ||~v124R~
                                                                      ||~v124R~
    #endif //W32                                                      ||~v124R~
                                                                      ||~v124I~
      .ホスツファイル(省略値は::xehosts(ワークディレクトリーのxehost))に
       登録したリモートIDを使用してリモートファイルをアクセスします。
       たとえばホスツファイルに次の行をCodingし
         a1 192.168.2.15  user001 pswdpswd
       "e a1:file1.txt"で192.168.2.15のホームDirのfile1.txt を編集
       できます。
                                                                      ||~126FI~
    #ifdef LNX                                                        ||~126FI~
                                                                      ||~126FI~
        権限がなく共有資源をmount出来ない場合に xehostsにshare=パラメータ指定で登録すれば||~126FI~
        WindowsあるいはSambaサーバーの共有資源にアクセスできます。    ||~126FI~
        (Linux版はsmbclient,Android版はJCIFSを利用)                   ||~126FI~
          登録例  "w764  192.168.8.22 usrskt pswd  share=sharename"   ||~126FI~
        Android版では password指定無しのNODeコマンドで別スレッドで接続テストをします||~126FI~
        Sambaの方がftpより格段に速いようです                          ||~v128R~
        まず最初に Samba サーバーと接続できるか次のコマンドで確認     ||~v128R~
            smbclient -L hostname      hostname: ip-address or name on /etc/hosts||~v128R~
        問題がある場合は ::xeftplog を調べてください                  ||~v128R~
        ::xeftplogは "xe -ftpw" で立ち上げると出力されます            ||~v128R~
                                                                      ||~126FI~
    #endif //LNX                                                      ||~126FI~
                                                                      ||~126FI~
      .ホスツファイルをxeで編集するとパスワードは一応暗号化されますが ||~126FR~
       より安全のためにはNODeコマンドで毎回パスワードを設定してください。||~126FR~
       NODeコマンドで設定したパスワードは::xehostsには保存されません、セッションでのみ有効です。||~126FR~
        コマンド: NODe host-ID password (例. "nod ftpsvr1 CabZyx")    ||~126FI~
      .ディレクトリーリストのundoはTSO以外では未サポート。
      .リモートとしてWindowsはLinuxからはSambaクライアント(smbclient)でサポート||~v128R~
       (xehostsファイルで SHARE= を指定する)                          ||~v128R~
       あるいは                                                       ||~v128R~
        Windows 共有名を次のようにマウントすれば                      ||~v128R~
          mkdir /WinDriveE                                            ||~v128R~
          mount -t cifs //192.168.1.12/E /WinDriveE -o username=yourname||~v128R~
        "xe /WinDriveE" でアクセスできます                            ||~v128R~
                                                                      ||~v128R~
      .リモートファイルをSUBmitするとローカル実行。
       但しTSOファイルの場合はリモート(MVS)
      .リモートファイルをXPRintするとローカルで印刷。
      .コマンドラインパラメータでFTPサポートを選択する。
            /Fx[t][:hosts]  :x=0:FTP 不使用, x=1:FTP 使用(log無し)
                             x=w:ftplog 出力, x=a:追加モード ftplog
                            :t:一時ファイルを削除しないDebug用オプション
                            :hosts: xe 用のホストファイル名。
            省略値は /F1:xehosts(xehostsはワークディレクトリー)
      .ホスツファイルの形式。
       -コメントは # の後に書く
        但し puTTY の PSFTPのパラメータは次のように指定します         ||~v124I~
        #@PSFTP=  : psftp がPATH上にない時は PSFTP のコマンドを指定します。||~v124I~
        #@SSH=all : この行以降の SSH=指定の省略値を SSH=Y とする指定です。||~v124I~
        この行をコメントにするには次のようにします。                  ||~v124I~
           ##@PSFTP=~/psftp                                           ||~v124I~
           ##@SSH=all                                                 ||~v124I~
       -リモートID リモートアドレス ユーザーID パスワードの順に
        スペースで区切って書く。
       -リモートID は2<-->8桁。リモートがTSO以外では大文字小文字区別あり
       -リモートアドレスはIPアドレスかNativeのホスツファイル定義の
        ホスト名を書く。URL も使用できる                              ||~v128R~
       -パスワードが不要のときは "" と書いておく。
       -パスワードの後はオプションで次のパラメータを指定する。
        HOME=/xxx/yyy    :ホームDir、~/で参照可能。
        TZ=[-]hhmm       :時刻表示調整値。  ex)TZ=-0900.
                          ファイル日付はGMTで送られるのでクライアントと
                          ホストのTimeZoneが異なっても問題ないがAIXの
                          場合GMT=JSTが設定されているのでホストがAIXの
                          時はTZ=0000を指定する必要がある。
        DBCS={EUC|SJIS|  :lsコマンド出力が日本語表示のときのCodePage指定||~v124R~
             cp930|cp939| リモートがTSOで日本語の場合cp930かcp939を指定する。||~v124R~
             OTHER}       ICUなどの外部コンバータを使用する。("EBCDIC変換"を参照)||~v124R~
                                                                      ||~v124R~
        TSO=portNo[opts] :リモートがTSOのときポート番号を指定         ||~v124R~
                          TurnkeyMVSでは3270, tn3270の場合は23        ||~v124R~
                          opts には                                   ||~v124R~
                           R:宛先がTurnkeyMVS でない実際のメインフレーム||~v124R~
                           S:TurnkeyMVS の場合でその submit ツールを使用せず||~v124R~
                             TSOのSUBMITコマンドでJOBをSUBMITする。   ||~v124R~
                          例)  TSO=23R, TSO=3270S                     ||~v124R~
        LS="xx"/NLST     :ユニックスコマンド"ls -la"に対応するFTPサブコマンドを指定。
                          省略値は"dir"。 dirコマンドがサポートされてない場合に指定する。
                          LS=NLSTはLS="ls -la"と同じ。                
                          (ファイル名だけを表示するのがRFC規定のlsコマンドらしい)
        ICMD="cmds"      :ログイン直後に発行するコマンドを指定する。  
                          複数ある場合は間に"\n"を挿入する。          
                  　      FTPサーバーがpassiveモードを受け付けない設定の場合、
                          FTPクライアントの省略値がpassiveモードだとloginはできるが
                          ls コマンドなど "no route to host" で失敗する。
                          この場合ICMD=passiveを指定すると、最初にpassiveサブコマンドが
                          発行されactiveモードに反転する。            
        SSH={Y|N}        :FTPクライアントにPSFTP を使用する(Y) か 否か(N)||~127EI~
        SHARE=shraename  :共有資源名。リモートがSambaサーバーまたはWindowsの時指定||~126FI~
        P=prtNo          :psftp で SSH ポートを省略値(22)以外を使用する場合指定||~v129R~

例）

    ###################################################################
    #sample hosts file for xe
    #                                                                 ||~v124I~
    #format
    #                                                                 ||~v124I~
    #@PSFTP=g:\src\putty060\psftp.exe   #specify PSFTP command string if psftp.exe is not on %PATH%||~v124I~
    ##@PSFTP=/home3/putty-0.62/unix/psftp #(Linux sample)             ||~126FR~
    ##@PSFTP=~/psftp                    #This is comment because this line data dose not start by "#@xxx" patern.||~v124I~
    #@SSH=all                           #specify to use PSFTP as default for the following destionation after this lins.||~v124I~
    ##@SSH=all                          #This is a sample of comment out of #@xxx statement||~v124I~
    #                                                                 ||~v124I~
    # RemoteID  RemoteAddress UserID  Password [option] #Comment
    #   option:HomeDir     :ex. HOME=/tmp/myhome
    #                           HOME='herc01.source.asm' (default Dataset of MVS)||~v124R~
    #         :TimeZone    :ex. TZ=-0900
    #         :DBCS        :ex. DBCS=EUC     :Remote codepage=JapaneseEUC||~v124R~
    #                           DBCS=SJIS    :Remote codepage=ShiftJIS(Japanese)||~v124R~
    #                           DBCS=CP930   :Remote is TSO and use Japanese katakana extension||~v124R~
    #                           DBCS=CP939   :Remote is TSO and use Japanese English lower case letter extension||~v124R~
    #                           DBCS=OTHER   :Remote is TSO and use the converter other than CP939/CP930.||~v124I~
    #                                         (specify charset by CHARSET_CFG parm on xe3270.cfg)||~v124I~
    #         :TSO=portno  :ex. TSO=3270       TurnkeyMVS destination port may be 3270||~v124R~
    #                           TSO=3270S      "S" is submit option(use TSO SUBMIT cmd)||~v124R~
    #                                          without "S",use sub tool of TurnkeyMVS||~v124R~
    #                           TSO=23R        R means target is Real MVS(TSO/E through tn3270))||~v124R~
    #                                          (use TSO SUBMIT cmd.)  ||~v124R~
    #         :LS="xx"/NLST:ex. LS=NLST        specify any "list directory" cmd string(max 12 byte).
    #                                          default is dir,NLST means "ls -la".
    #         :ICMD="cmds" :ex. ICMD="passive" specify cmd to be issued after opened session
    #                                          insert "\n" between commands when multiple.
    #         :SSH={Y|N}   :ex. SSH=Y          use PSFTP for this destination. "N":use FTP.||~126FR~
    #         :SHARE=name  :ex. SHARE=disk1    use smbclient to this destination(SAMBA server/Windows).||~126FR~
    #Sample
    # a1 192.168.2.5  mizumaki machi TZ=0900
    # hm localhost    herc01   ""        TSO=3270 home='herc01.maclib.asm'||~v124R~
    # t6 S390T6       PURPLE   PSWDPSWD  TSO=23R  home='SAK01.TEST.ASM',DBCS=CP939||~v124R~
    # h390  Linux390  user1    PSWD1     SSH=Y                        ||~v124I~
    # w64   SmbSvr      user1    ""      SHARE=d                      ||~126FR~
	# w7p   192.168.2.12 w7user pswd     share=p                      ||~126FR~
	# gcty  ftp.geocities.jp ybbusr pswd SSH=N                        ||~v128R~
    # centos7r localhost    root pswd  SSH=Y P=2222                   ||~v129R~
    ###################################################################

    (注)ftpを利用するので接続するための適切な環境設定が必要です。
        また、ftpサーバーは接続元のipアドレスでDNS逆引きをしていると、
        DNS参照が遅いと接続に時間がかかります。(xeは毎回sessionをcloseしています）
        DNS参照はftpサーバーの/etc/hostsに接続元を登録し/etc/host.confが
        order hosts,bind
        となっていると避けることができます。(DNSより先にhostsを参照する設定)
                                                                      ||~v124I~
        vsftpd について。(FC12の場合)                                  ||~v124I~||~127ER~
          /homeをリストしようとすると次のメッセージで失敗することがあります||~v124I~
			226 Transfer done (but failed to open directory)."        ||~v124R~
          SELinuxによって保護されている可能性があります。 Syslog(/var/log/messages)を確認してください。||~v124I~
             ... avc: denied { read } for ... comm="vsftpd" name="home" ...||~v124I~
          SELinuxの現在値は "getsebool -a"で表示されます。            ||~v124I~
          "setsebool -P ftp_home_dir 1" で /home が読めるようになります。||~v124I~
          ftp_home_dirがoffの場合でも,xehostでLS=NLSTを指定すると     ||~v124I~
          /homeのサブDirの属性を表示できます(ls -la が "."(現Dir)を返す場合)||~v124I~
          /etc などホームDirの外に出る場合は cfg ファイルの chroot パラメータを||~127EI~
          設定する必要があるかもしれません                            ||~127EI~
                                                                      ||~v124I~

        Tiny FTP v0.52d(By H.Nomura氏)がFTP daemonの場合、次の設定をチェックしてください。||~v124R~
          .設定->システム設定->再接続で"接続間隔チェックを行う"のチェックをはずす||~v124R~
          .設定->ユーザー設定->禁止の"デレクトリーの操作"は全てチェックをはずす。||~v124R~
          .設定->ユーザー設定->名前の"パスワードの使用"はオンにする。 ||~v124R~
          .設定->ユーザー設定->ファイルの"全てのファイルを許可"にすると||~v124I~
           設定したホームディレクトリーの外にもアクセスできます。     ||~v124I~
          .ファイル名は "e hostname:/"で設定されたHomeDirをさすようです||~v124R~
                                                                      ||~v124I~
        puTTYのPSFTP(SSH2)に対応。(v063でテストしました)              ||~v124I~||~127ER~
            #@PSFTP=g:\src\putty060\psftp.exe                         ||~v124I~
                PATHが通ってない場合 "#@PSFTP="でコマンド名を指定。   ||~v124I~
                追加のオプションがあれば指定可能。省略値は ::xeftplog に表示される。||~v124I~
                (::xeftplogは -ftpw オプションで立ち上げると出力される) ||~v124I~||~v128R~
            #@SSH=all                                                 ||~v124I~
                この行以降の接続先の省略値としてPSFTPを使用することの指定||~v124I~
            dest1 192.168.2.5  user pswd  ssh=Y                       ||~v124I~
                各接続先ごとにPSFTP(ssh=Y)か FTP(ssh=N)を選択設定する。||~v124I~
                指定がなければ #@SSH=の指定の有無に従う。             ||~v124I~
         (注).#@___をコメントアウトするには例えば##@PSFTP=...のようにする。||~v124I~
             .PSFTPを使用する場合は最初一度にコンソール窓からPSFTPコマンドで||~v124I~
              接続しcacheにhost-keyを記録するようにしてください。(psftp -l USER -pw PSWD)||~v124I~
              (SSH key を キャッシュに保存する為のyes/no 応答が必要なのでxe外で一度実行してください)||~127MR~
              -batch オプションを使用していますがWindows版はcacheにhost-key||~v124I~
              がないとハングします。Linux版は接続失敗でPSFTPが制御を戻すので||~v124I~
              SSH失敗のエラーメッセージを表示します。                 ||~v124I~
             .現在のところpsftpではDir-Listでslinkが表示されません。  ||~v124I~
             .::xehostsの変更は次回から有効です                       ||~v124I~

   .リモートシェル(rsh)。
      .適切な権限設定をすればリモート上でコマンドを実行し
       結果をローカルに表示できます。
       コマンド結果表示画面を設定すればインタラクティブでないコマンド
       なら結果をLogしながらtelnet画面のように使えます。
       複数のリモートを渡り歩いて情報を収集するのに便利です。

#endif

#if defined(W32) || defined (LNX)

   .TSO サポート                                                      ||~v124R~
                                                                      ||~v129I~
     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!              ||~v124R~||~v129R~
     !!!  廃止しました                               !!!              ||~v129I~
     !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!              ||~v129I~
                                                                      ||~v124R~
          tn3270+s3270+ind$file で TSO/E と接続し MVS のファイルを Downloadしlocalで編集,Upload します。||~v124R~
          3270-FTP はかなり遅いので,xeの操作性を取る場合はお試しください。||~v124R~
          しばらくはプライベートな Dataset で様子を見て下さい。       ||~v124R~
                                                                      ||~v124R~
      !!! xeの使用によるいかなる問題が発生しても責任は負えません。!!! ||~v124R~
                                                                      ||~v124R~
          Windows版しかテストできていません。また HOSTの設定の関係で ISPF =6 画面でしかテストできていません。||~v124R~
          初期画面がセッションマネージャーモード(ネイティブ TSO READY 画面)の場合は||~v124R~
          xe3270.cfgのログオン手順定義でISPFコマンドを追加してください。||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
              "Turnkey MVS"はPC上で動くMVSR38Jです。HerculesがS370命令をエミュレートします。||~v124R~
              以下TurnkeyMVSに特殊なことは（--TurnkeyMVSの場合--)で記述されます。||~v124R~
                                                                      ||~v124R~
      (0) 前提                                                        ||~v124R~
                                                                      ||~v124R~
          s3270を経由します。s3270の導入が必要です。x3270/c3270/wc3270は使用できません。||~v124R~
#ifdef W32                                                            ||~v124R~
          s3270.exe のため cygwinの導入が必要です。                   ||~v124R~
#endif                                                                ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
               x3270を使用する場合はその導入と、xe3270.cfgでの設定が必要です。||~v124R~
               x3270を使用するとその時点の3270画面が見れますが、Focusを取られるようなら||~v124R~
               Minimaizeしたほうが良いでしょう。                      ||~v124R~
               #ifdef W32                                             ||~v124R~
                   xe3270を開始する前にXサーバーを開始しておかないとコネクションが||~v124R~
                   失敗します("Pipe Closed"ないしは"TimeOut"になります)||~v124R~
               #endif                                                 ||~v124R~
                                                                      ||~v124R~
          MVS に IND$FILE の導入が必要です。ISPFの=6画面で IND$FILE と打って見て下さい。||~v124R~
          (APVUFILEはDBCS対応していますが) IND$FILEは DBCS 対応していません。||~v124R~
          DBCS(DoubleByteCharacterSet)については(6)を見て下さい。     ||~v124R~
          また、SBCS言語環境でもuploadでスペース(0x20)がEBCDICブランク(0x40)にならない場合の||~v124R~
          の対応についても(6)を見て下さい。                           ||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
             （注意）IND$FILEバージョンに注意。                       ||~v124R~
              Hostファイル名を間違った時 ind$file106は "TARNS00file not opened"を||~v124R~
              返しますが、ind$file111は応答を返さず待ちになります。   ||~v124R~
              xeの対応としては事前にLISTDSコマンドで存在を確認します。||~v124R~
              herculesがリモートにある場合はFireWallの例外設定が必要になる場合があります。||~v124R~
                                                                      ||~v124R~
          最初はs3270単体で次のように接続テストをしたほうがよいでしょう。||~v124R~
           .s3270をオペランド無しでスタート。                         ||~v124R~
           .'connect hostname:23' と入力。 hostnameのところは "localhost" など||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v125R~
               'connect hostname:3270'                                ||~v125R~
            hosts ファイル(/etc/hosts ないし c:\windows\system32\drivers\etc\hosts) に定義された宛先。||~v124R~
            表示されるステータス行のインディケータが"C"(4番目の文字)に変わりましたか。||~v124R~
            画面内容はいつでも ascii コマンドで確認できます。         ||~v124R~
              ascii                                                   ||~v124R~
            と入力してログイン画面が確認できますか。                  ||~v124R~
           .接続できたらLOGON 手順を実施するのですがこれはそれぞれの環境で異なります。||~v124R~
            文字はStringコマンドで入力します。 例えば "LOGON UID001" と入力したい場合は||~v124R~
              String "LOGON UID001\n"                                 ||~v124R~
            と入力します。 最後の \n は Enterキーの意味で これを省略した場合は次に||~v124R~
              Enter                                                   ||~v124R~
            と打ち込みます。                                          ||~v124R~
            パスワードプロンプトが出たら同様にStringコマンドで答えます。||~v124R~
            REENTER などがでて、ブレークにPA1を打ちたい場合は         ||~v124R~
              PA(1)                                                   ||~v124R~
            PFキー,例えばPF3は                                        ||~v124R~
              PF(3)                                                   ||~v124R~
            と打ち込みます。                                          ||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
              String "logon herc01\n"                                 ||~v124R~
              と入力してログオンする                                  ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
           .FTPするにはTransferコマンドを使用します。                 ||~v124R~
              Transfer Direction=Receive HostFile=xxxx(yyy) LocalFile=zzz Exist=replace||~v124R~
            FTPコマンド入力は 画面が TSO READY のときでないと出来ませんが||~v124R~
            HOSTのLOGON PROCEDUREがLOGON後ISPF画面を呼び出す設定になっているかもしれません||~v124R~
            その場合は "String =6\n" で SPF をコマンドシェル画面にしてください。||~v124R~
                                                                      ||~v124R~
      (1) xe の設定。                                                 ||~v124R~
         ."::xehosts"(ワークディレクトリー内のxehostsファイル) に 接続先を定義する||~v124R~
                                                                      ||~v124R~
          例）  T4E     Heaven         HERC01  ""        TSO=23R      ||~v124R~
                T4J     192.168.2.33   HERC02  password  TSO=23R  HOME='TEST.SRC.ASM'||~v124R~
                                                                      ||~v124R~
          "TSO=" が3270接続識別になります。オペランドにtn3270のポート番号を指定してください||~v124R~
          通常は telnet の 23 で良いと思います                        ||~v124R~
          "R" は TurnkeyMVS でないことを示します。                    ||~v124R~
          (xe の SUB コマンドはTSOのSUBMITコマンドを使用します)       ||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
              TSO=3270 を指定してください                             ||~v124R~
              TurnkeyMVS の場合でその submit ツールを使用せず         ||~v124R~
              TSOのSUBMITコマンドでJOBをSUBMITする場合は TSO=3270Sとしてください。||~v124R~
                                                                      ||~v124R~
          "TSO=" がないと通常の tcpip:ftp を使用したリモートファイルアクセスとなります。||~v124R~
          TSOの場合ホストID(１つ目の項目)は大文字小文字区別無しです。 ||~v124R~
          パスワードはファイルを保存すると暗号化されます。            ||~v124R~
                                                                      ||~v124R~
          HOMEを設定するとファイル名指定でDSNを省略してメンバー名のみを指定すればよくなります。||~v124R~
          例えば "e h01:" でPDS メンバーリストを表示し、"e h01:abc"でメンバーABCを開きます。||~v124R~
          HOMEは省略値の現行PDSの意味ですが CD コマンドでこれを一時的に変更できます。||~v124R~
          HOME指定を有効に戻すには "CD h02:''"のように指定してください。||~v124R~
          よく使用するPDSをいくつか別のホストＩＤで登録しておくのも良いでしょう。||~v124R~
          但しlogon は userID 単位なのでリモートシェルでは同じ画面を見ることになります。||~v124R~
                                                                      ||~v124R~
         .xe3270.cfgの設定。                                          ||~v124R~
                                                                      ||~v124R~
          (作成、修正したら１度                                       ||~v124R~
             xe3270 1 -wxxdir                                         ||~v124R~
           でエラーがないかチェックしてください。xxdir は xe3270.cfg のあるディレクトリー。||~v124R~
           xe3270.cfg に形式エラーがなければ                          ||~v124R~
           ==>のコマンドプロンプトから                                ||~v124R~
             logon hostid,userid[/pswd]                               ||~v124R~
           と入力しLOGON手順を確認してください。                      ||~v124R~
           ここでの hostid は xehosts の宛先でなく OS の hosts の宛先です。||~v124R~
          )                                                           ||~v124R~
          ファイルの場所は xe3270 の /w コマンドラインオプションでDirを指定しますが、||~v124R~
          xe から自動起動される場合は 自動的にxeのワークディレクトリになります。||~v124R~
                                                                      ||~v124R~
          このファイルでログオン手順を定義してください。              ||~v124R~
          SPF情報を表示/更新するにはSPF_LEVELとCMD_MEMBLISTの両方を指定します。||~v124R~
          以下のオプションＩＤは、                                    ||~v124R~
            CMD3270, OPTIONS, LOGON_CMD, LOGOFF_CMD, LOGON_ERR, TEXT_PRELOGON, SUBMITWORK||~v124R~
          例えば LOGON_CMD は LOGON_CMD.T4E のように                  ||~v124R~
          オプションＩＤの後ろに宛先ＩＤ(xehostの1番目のワード)を指定できます||~v124R~
          指定無しは省略値を設定します。宛先ＩＤを指定した場合は      ||~v124R~
          その宛先に対しては省略値は使用されないのでそのオプションＩＤに||~v124R~
          ついて全記述する必要があります。                            ||~v124R~
                                                                      ||~v124R~
            CMD3270        :s3270 にパスが通ってない場合、-charsetなどのオプションを指定する場合に使用。||~v124R~
                           :省略値は s3270。                          ||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
                            x3270を使用する場合は -script オプションをつけてください||~v124R~
                            #ifdef LNX                                ||~v124R~
                                CMD3270 = "x3270 -script"             ||~v124R~
                            #else                                     ||~v124R~
                                CMD3270 = "bash c:\x3270script"       ||~v124R~
                                          シェル x3270scriptは        ||~v124R~
                                              DISPLAY=:0.0  x3270 -script||~v124R~
                            #endif                                    ||~v124R~
                                                                      ||~v124R~
            OPTIONS        :以下のオプションがあります                ||~v124R~
                            NOGETCONF :Turnkey MVS との接続の場合転送ミスがあったのでDownloadは2度やって||~v124R~
                                       両者が等しいことを確認います。これをオプションにしました。||~v124R~
                            NOPUTCONF :同様にUploadもUploadが完了したら再度Downloadして転送ミスがないか||~v124R~
                                       確認しています。NOPUTCONFでやめることが出来ます。||~v124R~
                            (確認オプションＯＮで転送確認処理でエラーを見つけた場合 ::xe3270ftp.perrlogに追加モードで||~v124R~
                             記録しています。一時は様子を見たほうが良いでしょう)||~v124R~
            TEXT_PRELOGON  :VTAM LOGON 画面を識別する文字列。         ||~v124R~
                            画面でこの文字列を見つけるとLOGON手順を開始します。||~v124R~
                            指定がないと3270セッションがx22で切れた場合に||~v124R~
                            "UNSUPPORTED FUNCTION"などのエラーが戻ります。||~v124R~
            LOGON_CMD      :LOGON 手順を記述します。                  ||~v124R~
                            LOGON手順を記述しないと "logon %userid%/%pswd%\n" を打ち込みます||~v124R~
                            (%userid%,%pswd%はxehostに定義したものに置換)||~v124R~
                            各行に入力文字列[,確認文字列,[リトライ回数]]を指定し、xe3270は順に実行します||~v124R~
                            確認文字列の指定がありそれがリトライ回数以内に見つからないと手順は中断します。||~v124R~
                            リトライ回数の省略値=8で3秒(100から700msまでの和)待ちに相当します。||~v124R~
                            入力文字列には最後に\nをつけてください、そうしないとEnterキーを押したことになりません。||~v124R~
                            例えば                                    ||~v124R~
                              LOGON_CMD = "LOGON %user%\n"            ||~v124R~
                            入力文字列に"Action" プレフィクスをつけて3270アクション(3270のコマンド)を指定できます||~v124R~
                            例えば                                    ||~v124R~
                              LOGON_CMD = "Action MoveCursot(6,10)"   ||~v124R~
                            ただしEnter だけは Actionプレフィックスは省略できます||~v124R~
                              LOGON_CMD = Enter                       ||~v124R~
                            のように"Action"プレフィックスなしで指定でき、Enter処理します。||~v124R~
                            3270アクションはs3270,x3270-scriptのマニアルを見てください。||~v124R~
                            EraseEOF,Attnなどがあります               ||~v124R~
                            複数フィールドに入力するとき\nをつけずに "ABC"のように入力、||~v124R~
                            Home,Tabアクションでカーソル移動し最後にEnterしてください。||~v124R~
                            \t(TAB),\r(改行),\f(Clear)も利用できます。||~v124R~
                              ABC\t123\rXYZ\n                         ||~v124R~
                            は                                        ||~v124R~
                              ABC ; Action TAB ; 123 ; Action Newline ; XYX ; Enter||~v124R~
                            と同等です。                              ||~v124R~
                            待ち時間をとるには ミリ秒単位でsleepコマンドを入れます||~v124R~
                              LOGON_CMD ="Sleep 5000" は５秒waitします||~v124R~
                                                                      ||~v124I~
                            確認MSGの先頭に"|"をつけると取り扱いが変わります。例２参照。||~v124I~
                                                                      ||~v124R~
                            例-1. TSO READY モードでない場合          ||~v124R~
                                                                      ||~v124R~
                              LOGON_CMD = "Action Reset"           # 保護エラー状態の可能性に対処。||~v124R~
                              LOGON_CMD = "Action Clear"           # カーソル位置の入力可能を確保。||~v124R~
                              LOGON_CMD = "APP TSO4\n",IKJ56700A   # VTAMの画面に "APP TSO4" を入力||~v124R~
                                                                   # 画面中に"IKJ56700A" が表示されるのを待ちます。||~v124R~
                                                                   # (IKJ56700A ENTER USERID)||~v124R~
                              LOGON_CMD = %user%\n,"TSO/E LOGON"   # user id を入力します||~v124R~
                                                                   # %user% は xehosts で定義されたuseridに置換されます||~v124R~
                                                                   # "TSO/E LOGON" はこの例で ユーザーＩＤを入力した後||~v124R~
                                                                   # パスワード入力用の画面のタイトル部に表示される文字列です。||~v124R~
                                                                   # ユーザーＩＤ入力で画面が切り替わるのを待ちます。||~v124R~
                              LOGON_CMD = %pswd%\n,ICH70001I       # %pswd% は xehosts で定義されたパスワードに置換されます。||~v124R~
                                                                   # パスワード入力で画面が ICH7001I ... LAST ACCESSED ...||~v124R~
                                                                   # に切り替わるのを待ちます。||~v124R~
                              LOGON_CMD = Enter,ISPF,3             # Enter Key を押す。||~v124R~
                                                                   # ISPF 初期メニュー画面が表示されるのを待ちます。||~v124R~
                                                                   # Timingの問題か時々ミスるので100ms sleepし3回リトライします。||~v124R~
                              LOGON_CMD = "=6\n"                   # SPF コマンドシェルパネルに移行します。||~v124R~
                                                                      ||~v124R~
                            例-2  DBCS 環境のため パネルなしエラーとなる場合||~v124R~
                                                                      ||~v124R~
                              LOGON_CMD = "Action Reset"           # 保護エラー状態の可能性に対処。||~v124R~
                              LOGON_CMD = "Action Clear"           # カーソル位置の入力可能を確保。||~v124R~
                              LOGON_CMD = "APP TSO4\n",IKJ56700A      ||~v124R~
                              LOGON_CMD = %user%\n,"TSO/E LOGON"      ||~v124R~
                              LOGON_CMD = %pswd%\n,ICH70001I          ||~v124R~
                              LOGON_CMD = Enter,"|ISPF DIALOG ERROR" #パネルエラー画面が出るので||~v124R~||~v124R~
                                                                     #Enterをおすと TSO READY モードになるが||~v124I~
                                                                     #("|ISPF DIALOG ERROR"のプレフィックス"|"は||~v124R~
                                                                     #確認MSGが見つからなくてもLOGON失敗とせず次に進む。)||~v124R~
                              LOGON_CMD = Enter,READY               #Enterをおすと TSO READY モードになるが||~v124R~
                                                                    #この状態でTSOコマンドは使用できないので||~v124R~
                              LOGON_CMD = ISPF\n,"OPTION ===>"      #ISPF と打って ISPFメニューを出す(但し英語モード)||~v124R~
                              LOGON_CMD = "=6\n","COMMAND SHELL"    #=6パネルに移行(英語モードのタイトルを確認。)||~v124R~
                                                                      ||~v124I~
                                                                      ||~v124R~
            LOGOFF_CMD     :LOGOFF手順。                              ||~v124R~
                            指定方法はLOGON_CMDと同じです。           ||~v124R~
                            LOGOFF手順を指定しないと PA(1)でREADYが出るのを待って"logoff\n"を打ち込みます||~v124R~
                                                                      ||~v124R~
                            (--TurnkeyMVSの場合--)                    ||~v124R~
                              PA1でRPFがbreakされTSO READY 画面になり有効ですが||~v124R~
                                                                      ||~v124R~
                            ISPF では breakしても元のISPF画面に戻るため LOGOFF が unsupported cmd||~v124R~
                            になります。                              ||~v124R~
                                                                      ||~v124R~
                            例-1 (SPF終了で自動で切断される場合)      ||~v124R~
                              LOGOFF_CMD = "=X\n","*** VTAM"        #SPF LOG/LIST 印刷オプション画面でとまらないように設定してください||~v124R~
                                                                    #VTAM LOGON プロンプト画面を確認||~v124R~
                                                                      ||~v124R~
                            例-2                                      ||~v124R~
                              logoff_cmd       = "=X\n",BATCH       #LOG/LIST オプション指定画面でとまる場合||~v124R~
                              logoff_cmd       = "2\n","*** (T4)"   #LOG/LIST オプションを入力してVTAM画面に推移するのを待つ||~v124R~
                                                                      ||~v124R~
            LOGON_ERR      :LOGON 手順中画面に現れるエラーメッセージと対応アクションを定義。||~v124R~
                            アクションの指定方法はLOGON_CMDと同じですが、||~v124R~
                            複数アクションを";"で連結できます。       ||~v124R~
                            但し、"CONTINUE" アクションはエラーーとせずに何らかのアクションを||~v124I~
                            実行するための便宜的なものです。          ||~v124I~
                            下の例では"HIT THE ENTER KEY"が現れたらEnterキーを押すが||~v124I~
                            このMSGはエラーでなくログオン処理を続ける(LOGON_CMDの確認文字列を探す)。||~v124I~
                            また例の "_"プレフィックスは確認文字列が見つからなかった時に調べることを意味する。||~v124I~
                            "_"がない場合はLOGON_ERRを先にチェックするので同時に確認文字列があっても||~v124I~
                            LOGON失敗になる。                         ||~v124I~
                                                                      ||~v124I~
                            例                                        ||~v124R~
                              LOGON_ERR = IKJ56425I,"logoff\n"      #ユーザーＩＤは使用中||~v124R~
                                                                    #ENTER LOGON OR LOGOFF に LOGOFF と応答する||~v124R~
                              LOGON_ERR = IKJ56420I,"Action PF(3)"  #ユーザーＩＤがオーソライズされてない。||~v124R~
                                                                    #この場合の画面はPF3でLOGOFF処理がされる||~v124R~
                              LOGON_ERR = IKJ56421I,"Action PF(3)"  #パスワードエラー||~v124R~
                              LOGON_ERR = IKJ56447I,"Action PF(3)"  #REENTER THE NEW PASSWORD ... FOR VERIFICATION||~v124R~
                              LOGON_ERR = IKJ56415I,"Action PF(3)"  #CURRENT PASSWORD HAS EXPIRED||~v124R~
                              LOGON_ERR = IKJ56710I,"Action PA(1);logoff\n"  #INVALID USERID REENTER と出た場合||~v124R~
                                                                             #PA1でブレークし、LOGOFF と入力する||~v124M~
                              LOGON_ERR = "_HIT THE ENTER KEY","Enter;Continue"       #||~v124M~
                                                                      ||~v124I~
            RETRY_UPLOAD   :PUTCONFIRM オプションの時のリトライ回数を指定。||~v124R~
                            Max:4 Min:0 Default:2                     ||~v124R~
            RETRY_DOWNLOAD :GETCONFIRM オプションの時のリトライ回数を指定。||~v124R~
                            Max:4 Min:0 Default:2                     ||~v124R~
            SPF_LEVEL      :Dataset メンバーのSPF情報の取り扱い       ||~v124R~
                            0:TSOのLISTDS コマンドの出力情報を表示します。||~v124R~
                            1:メンバーのSPF情報がXE4S001Zを呼び出してディレクトリーリスト画面に表示されます。||~v124R~
                            2:SPF情報がxeのやり方で更新されます。     ||~v124R~
                            省略値はCMD_MEMBLIST指定がなければ 0, あれば 2。||~v124R~
            CMD_MEMBLIST   :PDSのメンバーリストを得るための TSO コマンド||~v124R~
                            XE4S001Z を呼び出すCALL コマンドを指定する。||~v124R~
                            指定しないと TSO の LISTDS コマンドが使用され、SPF 情報は表示されない。||~v124R~
                            例                                        ||~v124R~
                              CMD_MEMBLIST  = "call 'TEST01.load.asm(xe4s001z)'"||~v124R~
            PS_UPLOAD      :Uploadの宛先としてメンバー指定のないDSNAME指定を許すか否か||~v124R~
                            1:許可 0:不許可(省略値)                   ||~v124R~
                            PDSが壊されるのを心配したが現在は宛先にPDSのDSNAMEを指定すると||~v124R~
                              TRANS17   Missing or incorrect TSO data set name: file transfer canceled||~v124R~
                            で拒否されるようなので。                  ||~v124R~
                            1としても問題はないようです。             ||~v124R~
            RSH_ECHO       :=6 (リモートシェル)画面のとき画面出力内容を||~v124R~
                            xe3270画面にもエコーする。                ||~v124R~
                            1:エコーあり(省略値)。0:エコー無し。      ||~v124R~
                            エコー無しにするとカーソル移動などの応答が多少よくなる。||~v124R~
            TIMEOUT_CONNECT:3270接続のタイムアウト時間。              ||~v124R~
                            タイムアウトになるとxe3270の処理は続いているが一旦タイムアウト応答をxeに返すので||~v124R~
                            xe側は応答待ちを抜けて操作可能になる。    ||~v124R~
                            xe3270のDOS窓で状況をチェックしてください。||~v124R~
                            -1:無制限, 省略値=10秒                    ||~v124R~
            TIMEOUT_LOGON  :接続後LOGON処理のタイムアウト時間         ||~v124R~
                            -1:無制限, 省略値=5秒                     ||~v124R~
            TIMEOUT_LOGOFF :接続後LOGOFF処理のタイムアウト時間        ||~v124R~
                            -1:無制限, 省略値=3秒                     ||~v124R~
            TIMEOUT_DISCONN:LOGOFF後切断処理のタイムアウト時間        ||~v124R~
                            -1:無制限, 省略値=3秒                     ||~v124R~
            TIMEOUT_FTP    :FTP Send/Receive のタイムアウト時間       ||~v124R~
                            commandline parm -T override this cfg parm||~v124R~
                            -1:無制限,省略値=600秒(10分)              ||~v124R~
            TIMEOUT_TSOCMD :RENAME,ALLOC,FREE など xe の tso コマンドで入力したコマンドの||~v124R~
                            タイムアウト時間。                        ||~v124R~
                            -1:無制限, 省略値=30秒                    ||~v124R~
            CMD_ROW        :SPFのコマンドシェル画面のコマンド入力行の行番号||~v124R~
                            REDAY モードかSPFパネルモードかの判定に使用||~v124R~
                            省略値は 6 (先頭行は1)                    ||~v124R~
            CHARSET_CFG    :ICU/iconvなどの外部コンバータを使用する場合の||~v124R~
                            変換定義パラメータファイル名。            ||~v124R~
                            ("EBCDIC変換"参照)                        ||~v124R~
                                                                      ||~v124R~
          例。(先頭 "#"はコメントです)                                ||~v124R~
            #####################################################################||~v124R~
            # xe3270.cfg                                              ||~v124R~
            #          Following options may be destination specific by the format of OPT.dest=xxxx.||~v124R~
            #            CMD3270, OPTIONS, LOGON_CMD, LOGOFF_CMD, LOGON_ERR, TEXT_PRELOGON, SUBMITWORK||~v124R~
            #          For ex. LOGON_CMD.T4E is for the destination T4E on xehosts.||~v124R~
            #          That is default if destination specified.      ||~v124R~
            #                                                         ||~v124R~
            #     CMD3270        :cmd to call 3270(enclose by quotation if optional parameter required)||~v124R~
            #                     default is s3270                    ||~v124R~
            #                       To use x3270 on TurnkeyMVS -script option is required for xe.||~v124R~
            #                         Windows example                 ||~v124R~
            #                           CMD3270 = "bash c:\x3270script"||~v124R~
            #                             c:\x3270script contents is as following||~v124R~
            #                               DISPLAY=:0.0  x3270 -script||~v124R~
            #                         Linux example                   ||~v124R~
            #                           CMD3270 = "x3270 -script"     ||~v124R~
            #     OPTIONS        : NOGETCONF:bypass confirmation procedure to download twice then compare.||~v124R~
            #                    : NOPUTCONF:bypass confirmation procedure to download after upload then compare.||~v124R~
            #                      ex) OPTIONS=NOGETCONF,NOPUTCONF    ||~v124R~
            #     TEXT_PRELOGON  :String to detect VTAM LOGON prompt screen.||~v124R~
            #                     Start logon procedure when this string is found on the screen.||~v124R~
            #                     ex) TEXT_PRELOGON="Welcome to MVS3.8J"    # Turnkey-MVS VTAM panel detection||~v124R~
            #     LOGON_CMD      :defines xe3270 logon procedure.     ||~v124R~
            #                     Each line format is                 ||~v124R~
            #                       Input string[,String to be detected[,Retry count]]||~v124R~
            #                                                         ||~v124R~
            #                       ex)  LOGON_CMD = "LOGON %user%\n",ICH70001I||~v124R~
            #                       %user% and %pswd% is replaced by those defined on ::xehosts.||~v124R~
            #                       \n:Enter, \r:Newline, \t:Tab, \f:Clear||~v124R~
            #                     You can specify 3270 Actions(3270 cmd) using "Action" prefix.||~v124R~
            #                       ex)  LOGON_CMD = "Action Home"    ||~v124R~
            #                     To insert timing sleep,             ||~v124R~
            #                       ex)  LOGON_CMD ="Sleep 5000".     ||~v124R~
            #                                                         ||~v124R~
            #                                                         ||~v124R~
            #     LOGOFF_CMD     :define xe3270 LOGOFF procedure.     ||~v124R~
            #                     same format as LOGON_CMD            ||~v124R~
            #                       ex) LOGOFF_CMD = "=X\n","*** VTAM"||~v124R~
            #     LOGON_ERR      :defines error message to be detected in LOGON procedure and related actions.||~v124R~
            #                       ex) LOGON_ERR = IKJ56420I,"Action PF(3)"  #USERID NOT AUTHORIZED||~v124R~
            #               Ex. (in my environment)                   ||~v124R~
            #                 LOGON_ERR = IKJ56425I,"logoff\n"        #REJECT BY ALREADY LOGON||~v124R~
            #                 LOGON_ERR = IKJ56420I,"Action PF(3)"    #REJECT BY USERID NOT AUTH||~v124R~
            #                 LOGON_ERR = IKJ56421I,"Action PF(3)"    #REJECT BY PSWD   NOT AUTH||~v124R~
            #                 LOGON_ERR = IKJ56447I,"Action PF(3)"    #REENTER THE NEW PASSWORD ... FOR VERIFICATION||~v124R~
            #                 LOGON_ERR = IKJ56415I,"Action PF(3)"    #CURRENT PASSWORD HAS EXPIRED||~v124R~
            #                 LOGON_ERR = IKJ56710I,"Action PA(1);logoff\n"  #invalid userid reenter||~v124R~
            #     RETRY_UPLOAD   :read-check retry count when read check after put failed.||~v124R~
            #                     Max:4 Min:0 Default:2               ||~v124R~
            #     RETRY_DOWNLOAD :read retry count when dual read unmatch||~v124R~
            #                     Max:4 Min:0 Default:2               ||~v124R~
            #     SPF_LEVEL      :process level of SPF information    ||~v124R~
            #                     0:CMD_MEMBLIST is not used.         ||~v124R~
            #                     1:SPF info is displayed on dir-list using XE4S001Z||~v124R~
            #                     2:SPF info is maintenanced using XE4S001Z||~v124R~
            #                     default is 0 without CMD_MEMBLIST or 2 with CMD_MEMBLIST specified||~v124R~
            #     CMD_MEMBLIST   :TSO command to get PDS memberlist   ||~v124R~
            #                     Default is TSO native "LISTDS" command||~v124R~
            #                     Specify you LibraryDataSet name if you use XE4S001Z prepared by xe package.||~v124R~
            #                       ex)  CMD_MEMBLIST  = "call 'herc01.load.asm(xe4s001z)'"||~v124R~
            #     PS_UPLOAD      :Allow DSNAME as upload target       ||~v124R~
            #                     1:allow 0:prohibit(default)         ||~v124R~
            #                     "1" may accidentaly cause corruption of PDS directory.||~v124R~
            #     RSH_ECHO       :Echo output to RSH screen to also xe3270 screen.||~v124R~
            #                      1:Echo ON(Default),  0:Echo OFF.   ||~v124R~
            #     CHASET_CFG     :FTP translation parameter filename  ||~v124R~
            #                                                         ||~v124R~
            #     TIMEOUT_CONNECT:timeout to get 3270 connection by seconds||~v124R~
            #                     commandline parm -C override this cfg parm||~v124R~
            #                     -1:infinite, default=10             ||~v124R~
            #     TIMEOUT_LOGON  :timeout to LOGON after 3270 connection succeeded.||~v124R~
            #                     default=5                           ||~v124R~
            #     TIMEOUT_LOGOFF :timeout to LOGOFF.                  ||~v124R~
            #                     default=3                           ||~v124R~
            #     TIMEOUT_DISCONN:timeout to disconnect after LOGOFF. ||~v124R~
            #                     default=3                           ||~v124R~
            #     TIMEOUT_FTP    :timeout to file Send/Receive        ||~v124R~
            #                     commandline parm -T override this cfg parm||~v124R~
            #                     default=600                         ||~v124R~
            #     TIMEOUT_TSOCMD :timeout to file Send/Receive        ||~v124R~
            #                     -1:infinite, default=30             ||~v124R~
            #     CMD_ROW        :Command input line of ISPF command shell panel.||~v124R~
            #                     default=6 (start from 1)            ||~v124R~
            #####################################################################||~v124R~
             CMD3270.T4J     = "s3270 -charset japanese-939 -km windows-932 -trace -tracefile c:\xe_wd\s3270.trc"||~v124R~
             CMD3270.T4E     = "s3270 -trace -tracefile c:\xe_wd\s3270.trc"||~v124R~
             CMD3270         = s3270                                  ||~v124R~
             OPTIONS         = NOPUTCONF,NOGETCONF                    ||~v124R~
            #RETRY_UPLOAD    = 2                                      ||~v124R~
            #RETRY_DOWNLOAD  = 2                                      ||~v124R~
             SPF_LEVEL       = 2                                      ||~v124R~
             CMD_MEMBLIST    = "call 'sak01.load.asm(xe4s001z)'"      ||~v124R~
             PS_UPLOAD       = 1                    #allow upload to dataset without member specification||~v124R~
             RSH_ECHO        = 0                    #no echo to xe3270 for input from RSH||~v124R~
             charset_cfg     = c:\xeebc.map                           ||~v124R~
            #######                                                   ||~v124R~
            #text_prelogon   ="Welcome to MVS3.8J"    # Turnkey-MVS VTAM panel detection||~v124R~
            text_prelogon      ="*** (T4)"            #VTAM panel detection||~v124R~
            text_prelogon      ="UNSUPPORTED FUNCTION"  #VTAM panel detection||~v124I~
            ###### LOGON procedure for the case initialy ISPF panel opened #########||~v124R~
            #                                                         ||~v124R~
               LOGON_CMD.t4j = "Action Reset"           # Reset protection error status||~v124R~
               LOGON_CMD.t4j = "Action Clear"           # confirm string input availability||~v124R~
               LOGON_CMD.t4j = "APP TSO4\n",IKJ56700A   # Input on VTAM prompt panel||~v124R~
                                                    # After input "APP TSO4", wait "IKJ56700A" appears.||~v124R~
                                                    # (IKJ56700A ENTER USERID)||~v124R~
               LOGON_CMD.t4j = %user%\n,"TSO/E LOGON"   # Input user id.||~v124R~
                                                    # %user% is replaced by userid defined on xehosts.||~v124R~
                                                    # Wait "TSO/E LOGON" appears.||~v124R~
                                                    # "TSO/E" the string in the panel prompting input password||~v124R~
                                                    # in my environment.||~v124R~
               LOGON_CMD.t4j = %pswd%\n,ICH70001I       # %pswd% is replaced by password on xehosts.||~v124R~
                                                    # Wait "ICH7001I ... LAST ACCESSED ..." appears.||~v124R~
               LOGON_CMD.t4j = Enter,ISPF,3             # Press Enter key.||~v124R~
                                                    # Wait ISPF primary options menu panel.||~v124R~
                                                    # Retry screen check 3 times inserting 10mms sleep.||~v124R~
               LOGON_CMD.t4j = "=6\n"                   # change to command shell panel||~v124R~
            #                                                         ||~v124R~
            ## DIALOG ERROR case when s3270 is not enable-DBCS and HOST SPF is DBCS panel(for Japanese user)||~v124R~
            #                                                         ||~v124R~
               LOGON_CMD.t4e = "Action Reset"           # Reset protection error status||~v124R~
               LOGON_CMD.t4e = "Action Clear"           # confirm string input availability||~v124R~
               LOGON_CMD.t4e = "APP TSO4\n",IKJ56700A                 ||~v124R~
               LOGON_CMD.t4e = %user%\n,"TSO/E LOGON"                 ||~v124R~
               LOGON_CMD.t4e = %pswd%\n,ICH70001I                     ||~v124R~
               LOGON_CMD.t4e = Enter,"|ISPF DIALOG ERROR",3 #error caused by DBCS environment||~v124R~
                                                            #but changes to native TSO READY mode by Enter key.||~v124I~
                                                            #prefix "|" means that it is not logon-fail||~v124I~
                                                            #when the msg is not found,||~v124I~
                                                            # and continue to next procedure.||~v124I~
               LOGON_CMD.t4e = Enter,READY,3               #change to native TSO READY mode by Enter key.||~v124R~
                                                       #any TSO cmd cause disconnection in this status.||~v124R~
               LOGON_CMD.t4e = ISPF\n,"OPTION ===>"        #but ISPF is only avalable cmd,||~v124R~
                                                       #change to english mode ISPF primary options menu panel.||~v124R~
               LOGON_CMD.t4e = "=6\n","COMMAND SHELL"      #change to command shell panel.||~v124R~
            #define action if detected error msg in logon procedure   ||~v124R~
             LOGON_ERR   = IKJ56425I,"logoff\n"            #REJECT BY ALREADY LOGON||~v124R~
             LOGON_ERR   = IKJ56420I,"Action PF(3)"        #REJECT BY USERID NOT AUTH||~v124R~
             LOGON_ERR   = IKJ56421I,"Action PF(3)"        #REJECT BY PSWD   NOT AUTH||~v124R~
             LOGON_ERR   = IKJ56447I,"Action PF(3)"        #REENTER THE NEW PASSWORD ... FOR VERIFICATION||~v124R~
             LOGON_ERR   = IKJ56415I,"Action PF(3)"        #CURRENT PASSWORD HAS EXPIRED||~v124R~
             LOGON_ERR   = IKJ56710I,"Action PA(1);logoff\n"  #invalid userid reenter||~v124R~
             LOGON_ERR = "_HIT THE ENTER KEY","Enter;Continue"       #||~v124I~
            ##                                                        ||~v124R~
            #define logoff procedure                                  ||~v124R~
            ## for the case that Automatically disconnected when exit from ISPF||~v124R~
             LOGOFF_CMD = "Action Home"            #move cursor to home position||~v124R~
             LOGOFF_CMD = "Action EraseEOF"        #enable to input string||~v124R~
             LOGOFF_CMD = "=X\n","*** VTAM",3      #Set LOG/LIST option to bypass the LOG/LIST option input panel.||~v124R~
            #                                      #detect VTAM LOGON prompting panel||~v124R~
            ##SPF LOG/LIST option set required case                   ||~v124R~
            #logoff_cmd    = "=X\n",BATCH       #detect LOG/LIST option input panel||~v124R~
            #logoff_cmd    = "2\n","*** VTAM"   #Input LOG/LIST option,then wait ISPF exit.||~v124R~
            #                                                         ||~v124R~
            #TIMEOUT_CONNECT = 20                                     ||~v124R~
             TIMEOUT_LOGON   = 20                                     ||~v124R~
             TIMEOUT_LOGOFF  =  5                                     ||~v124R~
            #TIMEOUT_FTP     = 600                                    ||~v124R~
            #TIMEOUT_TSOCMD  = 60                                     ||~v124R~
            #CMD_ROW         =6                                       ||~v124R~
            #####################################################################||~v124R~
                                                                      ||~v124R~
         .XE4S001Zの導入。                                            ||~v124R~
          xe3270.cfgでCMD_MEMBLISTを使用する場合は添付のXE4S001Zを    ||~v124R~
          ASSEMBLEして適当なLoadModuleLibralyに置きconfigを設定してください。||~v124R~
          PDSのメンバーリストにSPF情報(最終更新日時、ファイルサイズ、行数、||~v124R~
          ユーザー名)が表示されメンテナンスされるようになります。     ||~v124R~
          ASSEMLE の参照 MACLIB はつぎのとうりです。(SPマクロを使用しています)||~v124R~
              // EXEC PGM=IFOX00,PARM='...,SYSPARM=NOSNAP',...        ||~v124R~
              //SYSLIB   DD   DSN=SYS2.MACLIB,DISP=SHR                ||~v124R~
              //         DD   DSN=SYS1.MACLIB,DISP=SHR                ||~v124R~
              //         DD   DSN=SYS1.AMODGEN,DISP=SHR               ||~v124R~
          (SYSPARM=NOSNAPはデバッグ用のマクロULSNAPをNOP化するための指定です)||~v124R~
          Assemble 出来ない場合は添付のOBJECTをLKEDして見て下さい     ||~v124R~
          XE4S001Z.obj を LRECL=80 バイナリーモードでFTP UploadしLKED。||~v124R~
            //TESTLKED  PROC MBR=                                                   00040000||~v124R~
            //********************************************************************//00050000||~v124R~
            //*            LKED                                                  *//00060000||~v124R~
            //********************************************************************//00070000||~v124R~
            //********************************************************************//00127000||~v124R~
            //*            LINK EDIT ( AMODE=31,RMODE=ANY )                      *//00128000||~v124R~
            //********************************************************************//00129000||~v124R~
            //LKED   EXEC  PGM=IEWL,                                                00130000||~v124R~
            //       PARM='LET,LIST,MAP,XREF,RENT'                                  00140001||~v124R~
            //SYSLMOD  DD  DISP=SHR,DSN=TEST.SAK.LOAD(&MBR)                         00170000||~v124R~
            //SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,                                 00180000||~v124R~
            //             SPACE=(1024,(200,50),,CONTIG,ROUND),DCB=BLKSIZE=1024     00190000||~v124R~
            //SYSPRINT DD  SYSOUT=*                                                 00200000||~v124R~
            //SYSLIN   DD DISP=OLD,DSN=TEST.SAK.OBJ(&MBR)                           00211000||~v124R~
            //         PEND                                                         00220000||~v124R~
            //SS1 EXEC TESTLKED,MBR=XE4S001Z COND=ONLY                              00230000||~v124R~
            //*                                                                     00260000||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
              添付のawsテープファイルからLoadModuleを導入するには次のようにしてください||~v124R~
               - テープユニットをオンラインにする。                   ||~v124R~
                 MVS コンソールから "V 480,ONLINE" と入力             ||~v124R~
               - XE4S001Z.jclをサブミットする。                       ||~v124R~
                 Turnkey-MVSのsubツールを使用するか、3270FTPで転送してTSOサブミットする。||~v124R~
                 jclは//DD2の導入先DSNを自分の環境にあわせて変更してください。||~v124R~
                 (LoadModuleはBLKSIZE=19069で作成してあります)        ||~v124R~
               - マウント要求がでるので Hercules のコンソールからawsファイルをマウントする。||~v124R~
                 "devinit 480 (path)XE4S001Z.aws"                     ||~v124R~
                 (path)のところにはPCでのXE4S001Z.awsの経路をあたえる。||~v124R~
                                                                      ||~v124R~
               修正してaws ファイルを作成する方法は添付の MAKEAWS.jcl を参照||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
      (2) TSO アクセス。                                              ||~v124R~
                                                                      ||~v124R~
        (2-1) FTP                                                     ||~v124R~
          xe の Edit/Browse コマンドでファイル名の先頭でHost識別を指定します。||~v124R~
                                                                      ||~v124R~
          例）  e h02:'herc01.source.asm(memb1)'                      ||~v124R~
                e herc01:source.asm(memb1)                            ||~v124R~
                                                                      ||~v124R~
          最初のアクセス要求の時にxe3270.exeをスタートさせ名前付パイプでやり取りします。||~v124R~
#ifdef LNX                                                            ||~v124R~
          中継サーバー子プロセスxe3270を起動するTerminal Emulatorはiniファイルで||~v124R~
          設定されます。省略値はgnome-terminal,konsoleを探しなければxtermが使用されます。||~v124R~
#endif                                                                ||~v124R~
          パイプの窓口はマルチで対３２７０はマルチスレッドですがこれはTimeout用で||~v124R~
          基本的にはシングルスレッド処理です。                        ||~v124R~
          ユーザーＩＤ毎に3270エミュレータプロセスを立ち上げるので複数xeからの||~v124R~
          同じユーザーＩＤの使用が出来、一つのxeから複数のユーザーＩＤの使用も出来ます。||~v124R~
          xeを終了してもxe3270.exeは残り、xeからの次のリクエストを待ちます。||~v124R~
          xe3270.exeはDOS窓を持ち、状況が確認できます。               ||~v124R~
          画面出力はオプション(xeの /F オプション)で::xe3270.logにロギングします。||~v124R~
                                                                      ||~v124R~
          xe の "TSO" コマンドでいくつかのコマンドをサポートし、      ||~v124R~
          MVS TSO コマンドの実行、障害時の応答の入力などに使用します。||~v124R~
                                                                      ||~v124R~
          コマンドはxe3270プロセスのシェル窓からも入力できます。      ||~v124R~
          ログオン手順が失敗して正しく画面推移できなかった場合や、    ||~v124R~
          予期せぬ応答待ち画面(ENTER-,REENTER-)になった場合に         ||~v124R~
          String コマンドで適切に対応する場合などに使用します。       ||~v124R~
                                                                      ||~v124R~
        (2-2) リモートシェル。                                        ||~v124R~
                                                                      ||~v124R~
         (a) xeのコマンド出力画面(=6画面)を開いて TSO logonするとlistalcなどのTSOコマンドを||~v124R~
             そのまま入力できます。                                   ||~v124R~
                                                                      ||~v124R~
             =6.xxx [FS3|FST|NFS]                                     ||~v124R~
                xxx :xehostに定義された宛先.                          ||~v124R~
                FS3 :(b)の3270キーボードモードで開始。                ||~v124R~
                FST :(c)のTSOキーボードモードで開始。                 ||~v124R~
                NFS :(全画面モードではない)画面追記モードで開始。     ||~v124R~
                指定なしは"TSO xxx: logon FS" と同じです。            ||~v124R~
                                                                      ||~v124R~
             FS(全画面モード)でない場合は応答分のみが表示されます。   ||~v124R~
             入力は最初が CAP ON 状態です。                           ||~v124R~
             ("\"のあとの文字はs3270に送る時には小文字に戻されます。 例えば \N-->\n。)||~v124R~
             Ascii/Snapコマンドは現在の 3270 画面を全画面表示します。 ||~v124R~
             全画面モードのとき画面には入力できません。               ||~v124R~
             TSO logoffでローカルコマンドモードに戻ります。           ||~v124R~
             ("TSO xxx logoff" と入力、xxxは上記のxxx)                ||~v125R~
                                                                      ||~v124R~
             操作性は良くないですが SPF の画面入力も出来ます。        ||~v124R~
             xeのコマンド行からカーソル位置への文字列入力、           ||~v124R~
             s3270がサポートするActionコマンドが利用できます。        ||~v124R~
             xeのコマンド,TSO画面入力文字列,Actionコマンドで重複がある場合||~v124R~
             ">" プレフィックスをつければ3270入力、                   ||~v124R~
             2重引用符で囲めばTSO画面文字列、                         ||~v124R~
             Action プレフィックスをつければActionコマンドになります。||~v124R~
             例えば exec TSO コマンドは xe の EXEecute コマンドとコマンド名が重複します||~v124R~
             TSOへ送るには                                            ||~v124R~
               >exec 'herc01.source.clist(helloc)'\n                  ||~v124R~
             のように入力します。                                     ||~v124R~
               =2                                                     ||~v124R~
             は xe の =2 ですが                                       ||~v124R~
               >=2\n                                                  ||~v124R~
               "=2\n"                                                 ||~v124R~
             は TSO 画面への入力となります。                          ||~v124R~
               Action Home                                            ||~v124R~
               >Action Home                                           ||~v124R~
               >>Home                                                 ||~v124R~
             はs3270 Action コマンドです。                            ||~v124R~
                                                                      ||~v124R~
             以下のコマンドは Action プレフィックス無しで入力できます。||~v124R~
             大文字小文字の区別はありません                           ||~v124R~
             例)  eraseeof                                            ||~v124R~
                  EEOF                                                ||~v124R~
                  >EEOF                                               ||~v124R~
                  >>H                                                 ||~v124R~
                  >>D                                                 ||~v124R~
                  >Ins                                                ||~v124R~
                                                                      ||~v124R~
                次のキーは代替の文字入力出来ます                      ||~v124R~
                   Enter:\n, TAB:\t, 改行:\r, 画面クリアー:\f, Left :\b||~v124R~
                   例)  >ABC\tEFG\tXYZ\n                              ||~v124R~
                                                                      ||~v124R~
                 3270 Action    短縮形   機能                         ||~v124R~
                 -------------  ------   -------------------------------------||~v124R~
                 "Attn"         "Att"    //attention key              ||~v124R~
                 "BackSpace"    "BS"     //move cursor left (or send ASCII BS)||~v124R~
                 "BackTab"      "BT"     //tab to start of previous input field||~v124R~
                 "CircumNot"    "Not"    //input "^" in NVT mode, or "¬" in 3270 mode||~v124R~
                 "Clear"        ""       //clear screen               ||~v124R~
                 "DeleteField"  "DF"     //delete the entire field    ||~v124R~
                 "Delete"       "DC"     //delete character under cursor (or send ASCII DEL)||~v124R~
                 "Down"         ">D"     //move cursor down           ||~v124R~
                 "Enter"        ""       //Enter AID (or send ASCII CR)||~v124R~
                 "EraseEOF"     "EEOF"   //erase to end of current field||~v124R~
                 "EraseInput"   "EINP"   // erase all input fields    ||~v124R~
                 "Erase"        "ERA"    //erase previous character (or send ASCII BS)||~v124R~
                 "FieldEnd"     "FEND"   //move cursor to end of field||~v124R~
                 "HexString"    "Hex"    //(hex_digits) insert control-character string||~v124R~
                 "Home"         ">H"     //move cursor to first input field||~v124R~
                 "Insert"       ""       //set insert mode            ||~v124R~
                 "Key"          ""       //(keysym) insert key keysym ||~v124R~
                 "Left"         ">L"     //move cursor left           ||~v124R~
                 "MoveCursor"   "MVC"    //(row, col) move cursor to (row,col)||~v124R~
                 "Newline"      "NL"     //move cursor to first field on next line (or send ASCII LF)||~v124R~
                 "PA"           ""       //PA n/PA(n)  Program Attention AID (n from 1 to 3)||~v124R~
                 "PF"           ""       //PF n/PF(n)  Program Function AID (n from 1 to 24)||~v124R~
                 "Reset"        "Res"    //reset locked keyboard      ||~v124R~
                 "Right"        ">R"     //move cursor right          ||~v124R~
                 "String"       "Str"    //(string) insert string (simple macro facility)||~v124R~
                 "SysReq"       "Sys"    //System Request AID         ||~v124R~
                 "Tab"          ""       //move cursor to next input field||~v124R~
                 "ToggleInsert" "Ins"    //toggle insert mode         ||~v124R~
                 "Transfer"     "FTP"    //(option=value...) file transfer||~v124R~
                 "Up"           ">U"     //move cursor up             ||~v124R~
                                                                      ||~v124R~
                (注) 現在の所 画面のInsert状態を知る手段がありません。||~v124R~
                     InsertキーをToggleInsertアクションに割りあてています。||~v124R~
                                                                      ||~v124R~
             TSOモードのときにローカルコマンドを実行したい場合はローカルコマンドの前に||~v124R~
             ":"を付けてください。例えば                              ||~v124R~
               :grep ABC *.c                                          ||~v124R~
                                                                      ||~v124R~
         (b) HOTキーでキーボードアクションを3270様に切り替えることができます||~v124R~
                                                                      ||~v124R~
               3270---*::SO2 T4J:(128.101.207.9) ---------------------------- 001-(   1)-102=Rep||~v124R~
               ===>                                                                    ===>HALF||~v124R~
               11:26:41 ===>> PF(11)                                 ||~v124R~
                   メニュー    ユーティリティー    コンパイラー    オプション    状況||~v124R~
                   ヘルプ                                             ||~v124R~
                ------------------------------------------------------------------------------||~v124R~
                                        ISPF 基本オプション・メニュ   .RIGHT   . が非活動状態||~v124R~
                 オプション  ===>                                     ||~v124R~
                                                                      ||~v124R~
                0   設定                 端末とユーザー・パラメーター    USER ID . : USER002||~v124R~
                1   ビュー               ソース・データまたは            時刻  . . : 11:24||~v124R~
                                         リスト表示                      端末  . . : 3277KN||~v124R~
                2   編集                 ソース・データの作成と変更      画面  . . : 1||~v124R~
                3   ユーティリティー     ユーティリティー機能の実行      言語  . . : KANJDBCS||~v124R~
                4   前景                 対話式言語処理                  APPL ID . : XXX||~v124R~
                5   バッチ               言語処理へジョブの実行要求      TSO LOGON : TSOLPS2||~v124R~
                6   コマンド             TSO またはワークステー          TSO PREFIX: USER002||~v124R~
                                         ション・コマンドの入力          SYSTEM ID : T4J1||~v124R~
                7   ダイアログ・テスト   ダイアログ・テストの実行        MVS 会計  : * なし *||~v124R~
                8   LM 機能              ライブラリー管理機能             リリース : ISPF 5.0||~v124R~
                9   IBM 製品             IBM プログラム開発製品       ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
                X  を入力すると、ログ／リストの省略値を用いて終了します。||~v124R~
               U F U C(128.101.207.9) I 4 24 80 4 19 0x0 -            ||~v124R~
               ok                                                     ||~v124R~
               ********** END OF FILE **********************************************************||~v124R~
                                                                      ||~v124R~
               (日本語画面表示のためにはセットアップが必要です。(6) DBCS 環境 を参照)||~v124R~
                                                                      ||~v124R~
               3270---*::SO1 T4E:(128.101.207.9) ------------------------------- 001-(   5)-102=Ins||~v124R~
               ===>                                                                       ===>HALF||~v124R~
               10:21:35 ===>> PF(3)                                   ||~v124R~
                  MENU  UTILITIES  COMPILERS  OPTIONS  STATUS  HELP   ||~v124R~
                                                                      ||~v124R~
                                           ISPF PRIMARY OPTION MENU   ||~v124R~
                OPTION ===>                                           ||~v124R~
                                                                      ||~v124R~
                0  SETTINGS      TERMINAL AND USER PARAMETERS            User ID . : USER002||~v124R~
                1  VIEW          DISPLAY SOURCE DATA OR LISTINGS         Time. . . : 10:20||~v124R~
                2  EDIT          CREATE OR CHANGE SOURCE DATA            Terminal. : 3277KN||~v124R~
                3  UTILITIES     PERFORM UTILITY FUNCTIONS               Screen. . : 1||~v124R~
                4  FOREGROUND    INTERACTIVE LANGUAGE PROCESSING         Language. : ENGLISH||~v124R~
                5  BATCH         SUBMIT JOB FOR LANGUAGE PROCESSING      Appl ID . : XXX||~v124R~
                6  COMMAND       ENTER TSO OR WORKSTATION COMMANDS       TSO logon : TSOLPS2||~v124R~
                7  DIALOG TEST   PERFORM DIALOG TESTING                  TSO prefix: USER002||~v124R~
                8  LM FACILITY   LIBRARY ADMINISTRATOR FUNCTIONS         System ID : T4E1||~v124R~
                9  IBM PRODUCTS  IBM PROGRAM DEVELOPMENT PRODUCTS        MVS acct. : **NONE**||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
                     ENTER X TO TERMINATE USING LOG/LIST DEFAULTS     ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
               U F U C(128.101.207.9) I 4 24 80 3 13 0x0 -            ||~v124R~
               ok                                                     ||~v124R~
               ********** END OF FILE *********************************************************||~v124R~
                                                                      ||~v124R~
             HOTキーの省略値は A+z です。再度押すとxeのモードに戻ります。||~v124R~
             ヘッダー行の左端 "3270" が3270キーボードモードを示します。||~v124R~
             3270キーボードの機能キーは次の表のとおりです。           ||~v124R~
             xeの機能の余地を残すためPCOM省略値とは多少違います。     ||~v124R~
             たとえば "Attn" は Shift+Esc,カーソル移動はShift+です。  ||~v124R~
             画面には入力できません。コマンド入力行から入力します。   ||~v124R~
             入力文字列はEnterキーでTSO画面入力とされます。           ||~v124R~
             xeのコマンドと重複する場合xeの処理が行われます。         ||~v124R~
             例えば、                                                 ||~v124R~
               HEX                                                    ||~v124R~
             は xe のHEX コマンド、                                   ||~v124R~
               >HEX                                                   ||~v124R~
               "HEX"                                                  ||~v124R~
             は 画面文字入力=HEX、                                    ||~v124R~
               >>HEX                                                  ||~v124R~
             は 画面文字入力=>HEX となります。                        ||~v124R~
             3270 Action 入力は,3270アクションをコマンド入力行に入力し||~v124R~
             Alt+aキーを使用してください。                            ||~v124R~
                                                                      ||~v124R~
             ISPFの場合FTPコマンドLISTCなどのTSOコマンドは=6画面からしか入力できないので||~v124R~
             xe3270はSPF画面のときは内部的に=6を発行しています。      ||~v124R~
             従ってTSOフルスクリーンリモートシェルの画面は裏面で変わっていることがあります。||~v124R~
                                                                      ||~v124R~
             (--TurnkeyMVSの場合--)                                   ||~v124R~
                                                                      ||~v124R~
               RPF は =6を入力できない画面があるので=6を発行しません。||~v124R~
               FTP/LISTC は READY モードで使用してください。          ||~v124R~
               RPFを全画面で操作する場合別のUSERIDを使用してください。||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
             3270モードキーとアクション                               ||~v124R~
             +----------------------------------------------------------------+||~v124R~
             | Key      ||(No modifier)|Shift+      | Alt+        | Ctrl+     |||~v124R~
             |----------||-------------|------------|-------------|-----------|||~v124R~
             | Enter    ||Enter/NewLine|            |             |           |||~v124R~
             | R-Ctrl   ||Enter/NewLine|            |             |           |||~v124R~
             | Esc      ||             |Attn        |SysReq       |           |||~v124R~
             | Tab      ||Tab          |BackTab     |             |           |||~v124R~
             | BackSpace||Erase        |            |             |           |||~v124R~
             | a        ||             |            |Action       |           |||~v124R~
             | c        ||             |            |Reset        |           |||~v124R~
             | q        ||             |            |(TSO-kbd)    |           |||~v124R~
             | r        ||             |            |NewLine      |           |||~v124R~
             | Insert   ||ToggleInsert |            |PA(1)        |           |||~v124R~
             | Delete   ||Delete       |            |             |DeleteWord |||~v124R~
             | Home     ||Home         |            |PA(2)        |           |||~v124R~
             | End      ||EraseEOF     |DeleteField |EraseInput   |           |||~v124R~
             | Left     ||             |Left        |PreviousWord |           |||~v124R~
             | Right    ||             |Right       |NextWord     |           |||~v124R~
             | Up       ||             |Up          |             |           |||~v124R~
             | Down     ||             |Down        |             |           |||~v124R~
             | PgUp     ||             |            |PA(3)        |           |||~v124R~
             | F1       ||PF(1)        |PF(13)      |             |           |||~v124R~
             | F2       ||PF(2)        |PF(14)      |             |           |||~v124R~
             | F3       ||PF(3)        |PF(15)      |             |           |||~v124R~
             | F4       ||PF(4)        |PF(16)      |             |           |||~v124R~
             | F5       ||PF(5)        |PF(17)      |             |           |||~v124R~
             | F6       ||PF(6)        |PF(18)      |             |           |||~v124R~
             | F7       ||PF(7)        |PF(19)      |             |           |||~v124R~
             | F8       ||PF(8)        |PF(20)      |             |           |||~v124R~
             | F9       ||PF(9)        |PF(21)      |             |           |||~v124R~
             | F10      ||PF(10)       |PF(22)      |             |           |||~v124R~
             | F11      ||PF(11)       |PF(23)      |             |           |||~v124R~
             | F12      ||PF(12)       |PF(24)      |             |           |||~v124R~
             +----------------------------------------------------------------+||~v124R~
                                                                      ||~v124R~
             (注)右Ctrlキー使用のオプションでEnter/R-Ctrl の効果は変わります||~v124R~
                 また各々、条件によってはxeの機能が実行されます。     ||~v124R~
                 基本はコマンド入力行に入力があるときは xe の処理をします。||~v124R~
                                                                      ||~v124R~
                 Enter/Rctrl:実行機能の時はカーソルがコマンド入力行にあり、||~v124R~
                             コマンド入力行に入力があるときはxeとしてコマンド行入力を処理します。||~v124R~
                 Home       :カーソルがxeのホーム(コマンド入力行の最初)にないときは||~v124R~
                             xeのホームにカーソルを移動します。       ||~v124R~
                 BackSpace  :カーソルがコマンド入力行でホーム位置でないときは||~v124R~
                             xeが処理します。                         ||~v124R~
                 Ins/Del/End:カーソルがコマンド入力行にあり、コマンド入力行に入力が||~v124R~
                                   あるときはxeが処理します。         ||~v124R~
                                                                      ||~v124R~
         (c) A+q でさらに TSO スペシフィックなモードになります。      ||~v124R~
                                                                      ||~v124R~
             文字入力は1文字づつ転送されます。"\n"なども特別な意味は持ちません||~v124R~
             Alt+a(アクションコマンド)は使えません。                  ||~v124R~
             カーソル移動はシフトキーなしです。                       ||~v124R~
             このモードの時Alt+qは3270モードへ、3270ホットキーはxeモードへ||~v124R~
             戻します。                                               ||~v124R~
                                                                      ||~v124R~
      (3) 障害対応                                                    ||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
              .Herculesがあがってない,MVSがあがってない               ||~v124R~
              #ifdef LNX                                              ||~v124R~
                  "port 3270:Connection refused."(Heculesがあがっていない場合)||~v124R~
                  "Connection rejected,no available 3270 device"(Heculesがあがっている場合)||~v124R~
              #else                                                   ||~v124R~
                  応答無し-->TimeOut(10秒）                           ||~v124R~
              #endif                                                  ||~v124R~
              .3270デバイスがつながってない。                         ||~v124R~
                  応答無し-->TimeOut(10秒）                           ||~v124R~
                  ---> MVSコンソールから INACT/ACTする。              ||~v124R~
                         V NET,INACT,ID=CUU0Cx,I                      ||~v124R~
                         V NET,ACT,ID=CUU0Cx                          ||~v124R~
                       この手順は、PF2にコマンド設定されいるとおもいます。||~v124R~
                       (MVSコンソールから"D PFK"で確認）              ||~v124R~
              .セッション数が定義を超えた(xeはホスト名+USERID単位でs3270を立ち上げます)||~v124R~
                  "no available 3270 device"                          ||~v124R~
                  --->開いている 00Cx のTSO画面をどれか閉じてxe3270から使えるようにする。||~v124R~
                      また、端末数を増やすにはsetupterm を実行する。  ||~v124R~
                      starttermも調整してxe用にセッションを空ける。   ||~v124R~
                      (SYS1.VTAMLSTには0C0から0C7までの８個が定義されている。)||~v124R~
              .TSOがあがってない                                      ||~v124R~
                  "APPLICATION IS INACTIVE"                           ||~v124R~
                  --->S TSO                                           ||~v124R~
              .TSO 画面がキーボードロック状態                         ||~v128R~
                  --->Alt+r キー入力                                  ||~v128R~
                                                                      ||~v124R~
          .USERID エラー                                              ||~v124R~
              "INPUT NOT RECOGNIZED"                                  ||~v124R~
              --->::xehostsを修正してリトライ                         ||~v124R~
          .PSWD エラー                                                ||~v124R~
              "PASSWORD NOT AUTOLIZED FOR USERID"                     ||~v124R~
              "REENTER -"                                             ||~v124R~
              --->"TSO reply hostid valid-password"コマンドを入力     ||~v124R~
                  (LOGON 手順定義の中でREENTERをブレークしLOGOFF発行まで自動化できます)||~v124R~
                  ::xehostsのパスワードは修正しておく                 ||~v124R~
                  現在の3270画面はxe3270.exeDOS窓から"snap"コマンドで見ることが出来ます。||~v124R~
          .重複ログオン                                               ||~v124R~
              "IKJ56425I LOGON REJECTED, USERID xxxx INUSE"           ||~v124R~
              --->Native TSO READY モードの場合は内部的にLOGOFFを発行する。||~v124R~
                  SPF モードの場合はLOGON 手順定義の中にLOGOFF発行を組み込んでください。||~v124R~
                  もし複数ユーザーＩＤを持っていれば別のユーザーＩＤでLOGONし||~v124R~
                  "C U=xxxx"と打てば早く開放できる。                  ||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
               "C U=xxxx"はMVS コンソールから入力します。             ||~v124R~
                                                                      ||~v124R~
          .ファイルエラー                                             ||~v124R~
              Datasetなし、メンバーなしともに                         ||~v124R~
                TRANS17   Missing or incorrect TSO data set name: file transfer canceled||~v124R~
              が返されます。                                          ||~v124R~
              x37のABENDが起こっても次のような応答が帰り、            ||~v124R~
                TRANS19   Error reading or writing to host disk: file transfer canceled||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
              ファイルが見つからないとき                              ||~v124R~
              IND$FILEのv106は FILE00のエラーを返すが、v111では無限Waitします。||~v124R~
              xeはLISTDSコマンドで事前に存在確認をしますがWaitした場合||~v124R~
              MVSコンソールでS013ABENDなどが起こってないかチェックしてください。||~v124R~
                                                                      ||~v124R~
          .タイムアウト。                                             ||~v124R~
              LANケーブル抜けなど                                     ||~v124R~
              接続時は１０秒TimeOutを設定していますが、FTP時はTimeout無しです。||~v124R~
              xe3270.exe のDOS窓からCancelしてください。              ||~v124R~
              Timeout しても s3270から応答が帰るまではスレッドはふさがっているので||~v124R~
              "now busy"のエラーになります。                          ||~v124R~
              xe3270が反応しない場合はTSOユーザーをキャンセルして見て下さい||~v124R~
                C U=userid                                            ||~v124R~
              だめならs3270プロセスをキャンセルしてください           ||~v124R~
              #ifdef LNX                                              ||~v124R~
                  killコマンドを使用。                                ||~v124R~
              #else                                                   ||~v124R~
                  Windowsの場合は同梱のツール xkp を使用してください  ||~v124R~
                  xkp -l で xe3270 の 子プロセスのs3270を特定し       ||~v124R~
                  xkp pid で kill します。                            ||~v124R~
              #endif                                                  ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
          障害で保存できない時は Save コマンドで一旦ローカルに保存し  ||~v124R~
          CANcel で編集を終え、回復したら保存先を開いて元のファイルに戻してください。||~v124R~
                                                                      ||~v124R~
      (4) その他。                                                    ||~v124R~
                                                                      ||~v124R~
         .TSOファイルを開く時省略値はCAPS ONで開きます。              ||~v124R~
          そうしたくない場合はCAPコマンドで省略値を変更するか         ||~v124R~
          Edit/Browseコマンドで[CAP|NOCAP]オプションを指定してください。||~v124R~
          CAPオプションが有効な時英小文字入力ははShiftキーを使用します。||~v124R~
                                                                      ||~v124R~
         .RECFM=Fx,LRECL=80のTSO ファイルでは E/B コマンドはデフォルトでEN/BNの||~v124R~
          扱いになります。(COBOLファイルの場合 col73-80:行番号を自動メンテするには||~v124R~
          依然としてECNのようにNの指定が必要です)                     ||~v124R~
          col.73-80が行番号でなく通常データのファイルの場合 F80のオプション指定が||~v124R~
          便利ですがこれも E8 コマンドを使用してください。            ||~v124R~
          別名コマンド機能を使うと/p1(col73-80を保護)などのオプションパラメータを||~v124R~
          毎回指定するわずらわしさを避けることができます。            ||~v124R~
          バイナリーオープン(EB,EHコマンド)するとEBCDICのままDownload/Upload||~v124R~
          されます。(Copy/Move/App コマンドでは /B オプションで無変換転送になります)||~v124R~
                                                                      ||~v124R~
         .ファイル名の他ファイル参照形式は次の形式も使用できます。    ||~v124R~
            *\ --> *.  **\ --> **.   ^*\ --> ^*.                      ||~v124R~
          例えば h01:'a.b.c(m1)' を開いている画面で "e *(m2)"と入力すると||~v124R~
          h01:'a.b.c(m2)'を開きます。 **.d(m3) で h01:'a.b.d(m3)'。   ||~v124R~
          分割画面では "^*"で他方の画面のファイル名を参照します。     ||~v124R~
          例えば h01:'a.b.c(m1)' を開いているとき分割画面のもう一方から||~v124R~
          "e ^*(m2)"で h01:'a.b.c(m2)'を開きます。 ^*.**(m4)で h01:'a.b(m4)'。||~v124R~
                                                                      ||~v124R~
         .JCLのSUBMITは TSO SUBMIT コマンドを使用します               ||~v124R~
          DataSet のメンバーを開き画面上で更新ありの場合は、          ||~v124R~
          規定のDataset:'XE3270.TEMP.SUBMIT'に更新内容をUploadしSUBMITします。||~v124R~
            規定のSUBMIT用のワークは xe3270.cfg で変更できます。      ||~v124R~
            SUBMITWORK.xxx="'DSNAME(MEMBNAME)'" の形式で指定してください||~v124R~
            PDSでなくSEQUENCIAL D/S よい。1重引用符(')なしのばあい UserIDが前に着く。||~v124R~
          それ以外の場合(DataSet ディレクトリーリストの "#" 行コマンド,||~v124R~
          ファイル名指定の SUBmit コマンド、JCL メンバーを開いた画面で更新無しの場合)は||~v124R~
          そのまま、そのDSN(MEMBER)をSUBMIT します。                  ||~v124R~
          ローカルファイルを直接TSO SUBMITはできません。Uploadしてください。||~v124R~
                                                                      ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
              Download の オーバーヘッドを避けるため TSOEの場合と同じにしたい場合は||~v124R~
              ::xehost での指定が必要です                             ||~v124R~
                TSO=3270S                                             ||~v124R~
              のように "S" をつけてください。                         ||~v124R~
              ローカルのファイルを直接SUBMITしたい場合は以下のようにしてください。||~v124R~
                                                                      ||~v124R~
              JCLをSUBMITするにはTurnkey-MVSで提供されているsub.batを使用します。||~v124R~
              xe の SUBコマンドでこのsub.batを呼び出します。          ||~v124R~
              PATHを通して置いてください。                            ||~v124R~
              Turnkey-MVSのファイルを開いている画面では単に"SUB"とすればSubmitされます。||~v124R~
              Localのファイルを開いている画面では "SUB sub *"と入力します。||~v124R~
              これが面倒な場合、別名コマンド機能を使用すれば入力を簡略化できます。||~v124R~
              =0.1の画面で 例えば"Alis:JCL SUB sub.bat *"としておけば ||~v124R~
              Localのファイルを開いている画面で JCL とだけ入力すればよい。||~v124R~
              さらにはSUBをTSOサブミットとしたければiniファイルのサブミットコマンドの||~v124R~
              コマンドIDをSUB以外に換えてAliasでSUBを定義すれば可能です。||~v124R~
              ディレクトリーリストからSUBする場合は "#" 行コマンドを使用します。||~v124R~
              改名欄のオペランドは指定しても無視されます。            ||~v124R~
              "%" 行コマンドを使用する場合は改名欄に sub(Turnkey-MVSの提供するツール名)を||~v124R~
              入力します。                                            ||~v124R~
                                                                      ||~v124R~
         .SPF情報について。                                           ||~v124R~
          xe3270.cfgでXE4S001Z使用を指定した場合、RECFM=Fx,LRECL=80のPDSのメンバーについては||~v124R~
          ディレクトリーのSPF情報(バージョン、更新日、行数など)をもしあれば||~v124R~
          それをディレクトリーリスト画面で表示します。                ||~v124R~
          F6キーで行数とファイルサイズ表示を切り替えられますが、TSOファイルの初期値は行数表示です。||~v124R~
          USERIDを表示するにはShift+F6を使用します。                  ||~v124R~
          PDSのディレクトリーのユーザーデータ(SPF情報)はIND$FILEでUploadすると失われますがxeで更新情報を||~v124R~
          復元します。                                                ||~v124R~
          MM(更新番号)の更新は以下のようになります。                  ||~v124R~
            カラム73-80が全て数字の場合カラム79-80が更新番号として使用されます||~v124R~
            読み込み時に全行の最大番号がそのメンバーのMMとなり編集終了時に||~v124R~
            そのセッションでの更新行に+1が設定されます。              ||~v124R~
            Save/Replaceコマンドで既存メンバーを置換する時もその値が設定されます。||~v124R~
            PCファイルなど元ファイルがSPF情報がないファイルをTSOファイルに||~v124R~
            Save/Replaceする場合とAppendコマンドの場合は宛先のMM+1を設定します。||~v124R~
            XCOpyコマンドでは複写元の値が複写され、XAPpendコマンドでは+1になります||~v124R~
          バージョン番号の変更はディレクトリーリストの"a"行コマンドでも可能です。||~v124R~
          xeのTSOコマンド-SPFサブコマンドでPDS全体(ワイルドカード指定も可能)の||~v124R~
          SPF情報を一括して設定することも出来ます。                   ||~v124R~
          例えば、SPF情報のないPDSの全メンバーに現在行数をカウントしてSPF情報を設定したい場合など。||~v124R~
          （RPFでSPF情報が表示されるには作成日、更新日、ユーザー名が必要なようです）||~v124R~
          XE4S001Zをバッチで実行する場合、パラメータの指定はXE4S001Zのソースのヘッダー部を参照してください||~v124R~
            "NOW"を作成日、更新日時、初期行数、現在行数で指定できます。||~v124R~
            今日の日付,時間,メンバー現在行数が設定されます。          ||~v124R~
            ユーザーID以外では先頭が数字でなければ無指定とみなします。||~v124R~
                                                                      ||~v124R~
            *(2)* UPDATE  SPF INFORMATION ON PDS DIRECTORY *********************    00330030||~v124R~
            * PARM FORMAT                                                           00340030||~v124R~
            *  '1,DSN(MEMB),VV,MM,CDATE,UDATE,UTIME,CURLINE,INITLINE,USER'          00350035||~v124R~
            *                                                                       00360034||~v124R~
            *  (START BY NOT NUMERIC MEANS MISSING OPERAND EXCEPT FOR USERID)       00370034||~v124R~
            *  (!!! RPF(V153) NEED CRE-DATE/UP-DATE/USERID TO DISPLY ON DIRLIST)    00380039||~v124R~
            *                                                                       00390034||~v124R~
            *  1:FUNCTION ID:UPDATE SPF INFO                                        00400030||~v124R~
            *  MEMB:REQUIRE. WILDCARD('*' or '?') IS AVAILABLE.                     00410030||~v124R~
            *  VV:VERSION                                                           00410030||~v124R~
            *     IF MISSING,KEEP CURRENT VALUE OR SET 0 IF NO PREVIOUS INFO        00420034||~v124R~
            *     +N FORMAT IS USED TO INCREMENT                                    00430030||~v124R~
            *  MM:MODIFICATION LEVEL                                                00440030||~v124R~
            *     IF MISSING,KEEP CURRENT VALUE OR SET 0 IF NO PREVIOUS INFO        00450034||~v124R~
            *     +N FORMAT IS USED TO INCREMENT                                    00460030||~v124R~
            *     'NOW' IS USED TO SET TO MAX VALUE OF COLUMN 79-80                 00470038||~v124R~
            *  CDATE:CREATED DATE                                                   00480030||~v124R~
            *     IF MISSING,KEEP CURRENT VALUE OR SET 0     IF NO PREVIOUS INFO    00490039||~v124R~
            *     'NOW' IS USED TO SET TO TODAY                                     00500034||~v124R~
            *     '000000' IS USED TO SET TO 0                                      00510039||~v124R~
            *  UDATE:LAST UPDATED DATE                                              00520030||~v124R~
            *     IF MISSING,KEEP CURRENT VALUE OR SET 0     IF NO PREVIOUS INFO    00530039||~v124R~
            *     'NOW' IS USED TO SET TO TODAY                                     00540030||~v124R~
            *     '000000' IS USED TO SET TO 0                                      00550039||~v124R~
            *  UTIME:LAST UPDATED TIME                                              00560030||~v124R~
            *     IF MISSING,KEEP CURRENT VALUE OR SET 0       IF NO PREVIOUS INFO  00570039||~v124R~
            *     'NOW' IS USED TO SET TO CURRENT TIME                              00580031||~v124R~
            *  CURLINE:CURRENT LINE COUNT                                           00590031||~v124R~
            *     IF MISSING,KEEP CURRENT VALUE OR SET 0 IF NO PREVIOUS INFO        00600033||~v124R~
            *     'NOW' IS USED TO SET CURRENT LINE COUNT BY READING MEMBER         00610034||~v124R~
            *  INITLINE:INITIAL LINE COUNT                                          00620035||~v124R~
            *     IF MISSING,KEEP CURRENT VALUE OR SET 0 IF NO PREVIOUS INFO.       00630035||~v124R~
            *     'NOW' IS USED TO SET CURRENT LINE COUNT BY READING MEMBER         00640035||~v124R~
            *  USER   :LAST UPDATED USER                                            00650031||~v124R~
            *     IF MISSING,KEEP CURRENT VALUE OR SET BLANK IF NO PREVIOUS INFO    00660031||~v124R~
            *SAMPLE JCL TO EXECUTE BATCH *                                          00670031||~v124R~
            *//GO EXEC PGM=XE4S001Z,PARM=('1','HERC01.SOURCE.ASM(MEMB),',           00680033||~v124R~
            *//        '01,21,061105,061125,2210,99,101,HERC01')                    00690031||~v124R~
            *//GO EXEC PGM=XE4S001Z,PARM=('1','HERC01.SOURCE.ASM(MEMB),',           00700033||~v124R~
            *//        'VV,+1,CDT,NOW,NOW,CLC,NOW,HERC01')                          00710035||~v124R~
            *//GO EXEC PGM=XE4S001Z,PARM='1,HERC01.SOURCE.ASM(MEMB),DEL'            00720035||~v124R~
            *//STEPLIB DD DISP=SHR,DSN=HERC01.LOAD.ASM                              00730031||~v124R~
                                                                      ||~v124R~
      (5) 使用上の制限                                                ||~v124R~
                                                                      ||~v124R~
      !! .SPF情報の更新はPDSディレクトリを排他使用する必要があるためDISP=OLDのアロケーションで||~v124R~
          失敗することがあります。(RESERVEは使用していません)         ||~v124R~
          SPFを閉じて再度保存を実行してください。                     ||~v124R~
         .UploadはデフォルトではPDSのメンバーに限ります。             ||~v124R~
         .RECFM=F(B)へUploadすると短文は拡張され,長文は分割されるようです。||~v124R~
          Downloadでは後ろのブランクはトリムされます。                ||~v124R~
          バイナリーモードでDown/Upすると固定長の整数倍にNullが補填される様です。||~v124R~
      !! .TurnkeyMVSとのS3270+IND$FILEでは原因は不明ですがUp/Downとも転送で１画面量(24*76=1844?)程度の重複出力が||~v124R~
          発生することがありました。                                  ||~v124R~
          以下の対応をしていますが現在のメインフレーム相手で必要かどうかはわかっていません。||~v124R~
          ::xe3270ftp.errlogにappendモードで記録しているので様子を見てください。||~v124R~
          cfgファイルで NOPUTCONFIRM,NOGETCONFIRM オプションを指定することにより以下の処理は省略出来ます||~v124R~
                                                                      ||~v124R~
          xe3270ではGet時Downloadを２回行い２回の内容が同じ時にGet成功としています。||~v124R~
          ２回の内容が異なる時リトライします。リトライ回数はxe3270.cfgで指定します。||~v124R~
          (タイムアウトの場合はリトライしません)                      ||~v124R~
          リトライ回数を超えて失敗した場合一時Dir(Windowsでは TEMP環境変数のDir,Linuxでは/tmp)に||~v124R~
          検証用のファイル残されています。                            ||~v124R~
          ネーミングはxe32270pc.xxxxxxxx.GETn.yy。xxxxxxxxはメンバー名。||~v124R~
          エラーが発生したら通常は再度Getをすればよいでしょう。       ||~v124R~
          PDS全体ののコピーが中断した場合などには"/y-"(同じ名前がある場合は飛ばして処理続行)||~v124R~
          オプションを指定すると良いでしょう。                        ||~v124R~
                                                                      ||~v124R~
          Put時は再Downloadし送信元と同じか確認します。               ||~v124R~
          SPF_LEVELを指定した場合はタイムスタンプが変わっていなければOKと判断しますが||~v124R~
          そうでない場合サイドDownloadして中身を比較します。          ||~v124R~
            (--TurnkeyMVSの場合--)                                    ||~v124R~
              RPF V1M5R3ではディレクトリーには時分しか保存されていません||~v124R~
              分単位の誤差が出ます。                                  ||~v124R~
                                                                      ||~v124R~
          バイナリーモードのPutではRECFM=Fを維持するためNullが補填され||~v124R~
          長さが変わることがあります。Nullが追加されただけの場合はxe3270の窓に||~v124R~
          出力されます(Logオプションを指定していればLogにも残ります)が||~v124R~
          xe上は正常保存とみなされます。                              ||~v124R~
          READ-CHKが失敗したらPut/Getをリトライします。リトライ回数はxe3270.cfgで指定します。||~v124R~
          リトライ回数を超えて失敗した場合一時Dirに検証用のファイル残されています。||~v124R~
          ファイルのネーミングはxe32270pc.xxxxxxxx.PUTGETn.yyです。xxxxxxxxはメンバー名。||~v124R~
          編集の保存によるPutでこれが発生した場合は更新を破棄しても編集後の内容が||~v124R~
          ワークDir\xeftpwdに残されています。ファイルのネーミングは xxxxxxxx.timestampです。||~v124R~
          エラーが発生したら通常は再度保存すればよいでしょう。        ||~v124R~
          但し、IND$FILEはRECFM=Fxで行長がLRECLを超える場合行を分割します。||~v124R~
          READ-CHKはこれを考慮し行分割を検知したらxe3270窓に警告を出しBeepを二回||~v124R~
          鳴らしますがUploadは成功とします。                          ||~v124R~
          EBCDIC<-->ASCIIの変換が可逆的でない文字が含まれる場合にも発生します。||~v124R~
          ファイル比較ツールなどで確認してください。(xeパッケージにも ||~v124R~
          比較ツールxfcがついています)                                ||~v124R~
                                                                      ||~v124R~
      !! .保存時に再度DownloadしてUpload時と内容が同じか確認しますが  ||~v124R~
          (前項のタイムスタンプチェック)ファイルのロックはかかっていません。||~v124R~
          SPFはDownload中であることを知らないので上書きされる可能性もあります。||~v124R~
          必要に応じて xe の TSO コマンド Alloc/Free を利用してください。||~v124R~
          保存時に内容がUpload時と異なる場合ワークDir\xeftpwdに       ||~v124R~
          最初にDawnloadした時のと保存時にDownloadしたのと両方のファイルが||~v124R~
          残されていますが現在の状態は自分で保存する必要があります。  ||~v124R~
          保存を強行するか他ファイルに保存してください。              ||~v124R~
          保存ファイル名はxxxxxxxx.timestampとxxxxxxxx.timestamp.UPDATECHKです。||~v124R~
                                                                      ||~v124R~
         .xe3270はLogon Procedure,LISTDS コマンドなどの応答メッセージの様式に||~v124R~
          依存しています。cfgで対応できない場合xe3270?.cを修正してください。||~v124R~
                                                                      ||~v124R~
      (6) DBCS 環境                                                   ||~v124R~
         .Uploadでスペース(ASCII-0x20)がブランク(EBCDIC-0x40)以外に変換される障害について。||~v124R~
          s3270 で -charset を指定した場合 charset によってはこの障害が起こります。||~v124R~
          s3270のソースパッケージ中の X3270.xadで定義されているEBC->ASCII 変換テーブル(#table)で||~v124R~
          ASCIIコードが >0x40 のコードポイントが 0 となっているもので発生すると思われます。||~v124R~
          バージョン３．３では                                        ||~v124R~
            hebrew, bracket437, simplified-chinese, chinese-gb18030,  ||~v124R~
            japanese, japanese-290, japanese-930, japanese-939, japanese-1390, japanese-1399||~v124R~
          がそうでした。                                              ||~v124R~
          charset.c の以下の修正を試して見て下さい。(全体はsample　Dirに入れておきます)||~v124R~
          この1行の追加です ==> if (iso!=0x20)  //a#20080802 for the case apace->unprintable||~v124R~
                                                                      ||~v124R~
            /* Process a single character definition. */              ||~v124R~
            static void                                               ||~v124R~
            remap_one(unsigned char ebc, KeySym iso, remap_scope scope, Boolean one_way)||~v124R~
            {                                                         ||~v124R~
                unsigned char cg;                                     ||~v124R~
                                                                      ||~v124R~
                /* Ignore mappings of EBCDIC control codes and the space character. */||~v124R~
                if (ebc <= 0x40)                                      ||~v124R~
                    return;                                           ||~v124R~
                                                                      ||~v124R~
                /* If they want to map to a NULL or a blank, make it a one-way blank. */||~v124R~
                if (iso == 0x0)                                       ||~v124R~
                    iso = 0x20;                                       ||~v124R~
                if (iso == 0x20)                                      ||~v124R~
                    one_way = True;                                   ||~v124R~
                                                                      ||~v124R~
                if (!auto_keymap || iso <= 0xff) {                    ||~v124R~
            #if defined(X3270_FT) /*[*/                               ||~v124R~
                    unsigned char aa;                                 ||~v124R~
            #endif /*]*/                                              ||~v124R~
                                                                      ||~v124R~
                    if (scope == BOTH || scope == CS_ONLY) {          ||~v124R~
                        if (iso <= 0xff) {                            ||~v124R~
                            cg = asc2cg[iso];                         ||~v124R~
                                                                      ||~v124R~
                            if (cg2asc[cg] == iso || iso == 0) {      ||~v124R~
                                /* well-defined */                    ||~v124R~
                                ebc2cg[ebc] = cg;                     ||~v124R~
                                if (!one_way)                         ||~v124R~
                                    cg2ebc[cg] = ebc;                 ||~v124R~
                            } else {                                  ||~v124R~
                                /* into a hole */                     ||~v124R~
                                ebc2cg[ebc] = CG_boxsolid;            ||~v124R~
                            }                                         ||~v124R~
                        }                                             ||~v124R~
                        if (ebc > 0x40) {                             ||~v124R~
                            ebc2asc[ebc] = iso;                       ||~v124R~
                            if (!one_way)                             ||~v124R~
                                asc2ebc[iso] = ebc;                   ||~v124R~
                        }                                             ||~v124R~
                    }                                                 ||~v124R~
            #if defined(X3270_FT) /*[*/                               ||~v124R~
                    if (iso <= 0xff && ebc > 0x40) {                  ||~v124R~
                        /* Change the file transfer translation table. */||~v124R~
                        if (scope == BOTH) {                          ||~v124R~
                            /*                                        ||~v124R~
                             * We have an alternate mapping of an EBCDIC||~v124R~
                             * code to an ASCII code.  Modify the existing||~v124R~
                             * ASCII(ft)-to-ASCII(desired) maps.      ||~v124R~
                             *                                        ||~v124R~
                             * This is done by figuring out which ASCII||~v124R~
                             * code the host usually translates the given||~v124R~
                             * EBCDIC code to (asc2ft0[ebc2asc0[ebc]]).||~v124R~
                             * Now we want to translate that code to the||~v124R~
                             * given ISO code, and vice-versa.        ||~v124R~
                             */                                       ||~v124R~
                            aa = asc2ft0[ebc2asc0[ebc]];              ||~v124R~
                            if (aa != ' ') {                          ||~v124R~
                                ft2asc[aa] = iso;                     ||~v124R~
                                if (iso!=0x20)  //a#20080802 for the case apace->unprintable||~v124R~
                                asc2ft[iso] = aa;                     ||~v124R~
                            }                                         ||~v124R~
                        } else if (scope == FT_ONLY) {                ||~v124R~
                            /*                                        ||~v124R~
                             * We have a map of how the host translates||~v124R~
                             * the given EBCDIC code to an ASCII code.||~v124R~
                             * Generate the translation between that code||~v124R~
                             * and the ISO code that we would normally||~v124R~
                             * use to display that EBCDIC code.       ||~v124R~
                             */                                       ||~v124R~
                            ft2asc[iso] = ebc2asc[ebc];               ||~v124R~
                            asc2ft[ebc2asc[ebc]] = iso;               ||~v124R~
                        }                                             ||~v124R~
                    }                                                 ||~v124R~
            #endif /*]*/                                              ||~v124R~
                } else {                                              ||~v124R~
                    /* Auto-keymap. */                                ||~v124R~
                    add_xk(iso, (KeySym)ebc2asc[ebc]);                ||~v124R~
                }                                                     ||~v124R~
            }                                                         ||~v124R~
                                                                      ||~v124R~
         .IND$FILEはDBCSをサポートしません。                          ||~v124R~
          (APVUFILEが対応,日本語についてはxeで対応(次項))             ||~v124R~
          s3270の -charset での指定は画面出力、キーボード入力にのみ有効です。||~v124R~
          FTPの部分は1バイトごとのASCII<-->EBCDIC 変換です(X3270.xadの変換テーブル使用)||~v124R~
          また、ホストがDBCS環境の場合 適切な -charset オプションを指定しないと||~v124R~
          LOGON手順がISPF パネルなしで失敗します。                    ||~v124R~
          (クライアントがDBCSである通知をあげないと、//ISPPALT DD を探さず、DBCS用パネルが見つからない)||~v124R~
          幸いパネル無しのダイアログエラーにEnterを入力しREADYになった場面でISPFを入力すると||~v124R~
          英語モードでISPFがあがるのでxeはファイルをDownload/Uploadできます。||~v124R~
          サンプルのLOGON 手順はこの例を手順化しています。            ||~v124R~
                                                                      ||~v124R~
          画面をDBCSとしたい場合は日本語の例ですが以下のようにします  ||~v124R~
            a. s3270 を -DX3270_DBCS でコンパイルする。(cygwin bash上で configure, make )||~v124R~
               (私の環境でコンパイルしたものを同梱しています、 s3270-cygwin-dbcs.exe)||~v124I~
               s3270 を                                               ||~v124R~
                 ./configure --enable-dbcs                            ||~v124R~
               s3270の.configure が                                   ||~v124R~
                 Warning disabling DBCS                               ||~v124R~
               を発するかもしれません                                 ||~v124R~
               ICUの導入が必要です、但しcygwinの場合特殊事情があります。||~v124R~
               ICUのライブラリー名がcygwinのときlinuxの時とは変わります||~v124R~
               s3270 の configure 4803 行あたりの1行に以下の修正を加えた後||~v124R~
                   #LIBS="-licui18n  $LIBS"                           ||~v124R~
                   LIBS="-lsicuuc  $LIBS"                             ||~v124R~
               次のようにconfigure && make してください               ||~v124R~
                   export LIBS="-lsicudt -enable-auto-import"         ||~v124R~
                   ./configure --enable-dbcs                          ||~v124R~
                                                                      ||~v124R~
            b. ICUの導入                                              ||~v124R~
               通常の導入以外に次の場合は追加の操作が必要です。       ||~v124R~
               s3270 の -charset に japanese を指定すると             ||~v124R~
                   Cannot find ICU converter for ibm-1027             ||~v124R~||~v125R~
               が出るかもしれません。                                 ||~v124R~
                    japanese    :1027(SBCS)+300(DBCS)   1027は英小文字の空いたところにカタカナを埋めたもの||~v124R~
                    japanese-290: 290(SBCS)+300(DBCS)    290はカタカナに英小文字を埋めたもの||~v124R~
               がX3270.xadに定義されています。                        ||~v124R~
               930=290(SBCS)+300(DBCS),939=1027(SBCS)+300(DBCS)のはずですが||~v124R~
               X3270.xadではDBCSのみ定義してあるので jpanese-939もcp1027なしで通るようです。||~v124R~
               cp1027を使用する場合は以下のようにします               ||~v124R~
               ibm-1027....ucm ファイルは s3270のパッケージに含まれて居ます。||~v124R~
               s3270を --enable-dbcs で configure すると makeconv により対応する.cnvファイルが||~v124R~
               作成されるのですが、ICU_DATA 環境変数の設定がうまく効いてくれず japaneseが使えませんでした。||~v124R~
               そこでICUのmakeに組み込みました。以下のようにします    ||~v124R~
                 s3270 パッケージの ucm ファイルを icu\source\data\mappings にcopy||~v124R~
                 icu\source\data\mappings\ucmlocal.mk を作成する      ||~v124R~
                                                                      ||~v124R~
                    ###                                               ||~v124R~
                    UCM_SOURCE_LOCAL =  ibm-1027_P100-1995.ucm\       ||~v124R~
                    ibm-1385_P100-1997.ucm\                           ||~v124R~
                    ibm-300_P110-1997.ucm\                            ||~v124R~
                    ibm-837_P100-2000.ucm                             ||~v124R~
                 ./configure --enable-static && make する             ||~v124R~
                                                                      ||~v124R~
         .xeの日本語対応は以下の通りです。                            ||~v124R~
            HOST のコードページは CP1027(英小文字拡張)とCP290(カタカナ拡張)を||~v124R~
            サポート。xehosts で DBCS= オプションの指定が必要です。   ||~v124R~
              DBCS={cp930|cp939}                                      ||~v124R~
                cp930のSBCSはcp290、cp939のSBCSが CP1027です          ||~v124R~
            DBCSは新ＪＩＳ(JIS83)+IBMです。(CV コマンド参照)          ||~v124R~
                                                                      ||~v124R~
            固定長レコードDatasetのみの対応です。                     ||~v124R~
            バイナリーモードでDownloadしLRECLで行分割し               ||~v124R~
            EBCDIC->SJIS変換。SO(0x0e)/SI(0x0f)はスペース(0x20)に置換します。||~v124R~
            Upload時は行ごとにSJIS->EBCDICS変換。                     ||~v124R~
            DBCSの前後にSO/SIを設定する方法は、スペースがあれば置換、 ||~v124R~
            なければ挿入しますが延長した分は後続のスペースを潰して補います。||~v124R~
            但し、１桁のスペースは潰しません。                        ||~v124R~
            変換後がLRECLより長い場合、変換前がLRECL以下の場合は切り捨て、||~v124R~
            元々長文の場合はLRECLで行分割します(SO/SOの途中の考慮はしていません)。||~v124R~
            変換後がLRECLより短い意場合はLRECL迄スペースパディングします。||~v124R~
            従って73-80の行番号の位置がずれる可能性があります。       ||~v124R~
  #ifdef LNX                                                          ||~v124R~
            LANGがEUC の場合に EBCDIC<=>euc.jp 変換します。           ||~v124R~
            EUC.JPでは半角カタカナが2バイト(0x8e+xx)になります        ||~v124R~
            半角カタカナが含まれているとDownloadで行長がLRECLを超えます。||~v124R~
            xeが行長エラーの警告を出します。                          ||~v124R~
            Uploadで行長が短くなるとスペースパディングされます。      ||~v124R~
            従って73-80の行番号の位置がずれる可能性があります。       ||~v124R~
            SPF ファイルとして開いたファイルはできるだけ73-80の行番号位置を保持しようとします||~v124R~
            Save/Rep/CreコマンドではプロファイルでNUMSTDが設定されていれば考慮されます。||~v124R~
            XCOpy/XMOvコマンド、行コマンドCopy/Moveでは考慮されません。||~v124R~
  #endif                                                              ||~v124R~

#endif
   .ターミナルエミュレータ                                            ||~127ER~
                                                                      ||~127EI~
     PuTTY, TeraTerm などを通しても xe(コンソール版)でリモートのファイルを||~127EI~
     ファイル転送をせずに編集することが出来ます                       ||~127EI~
     エミュレータはFunctionキーなどは ^[11~ などの Esc文字列をリモートに送りますが||~127ER~
     Shift/Control+Fnの全ての組み合わせをサポートしているわけではありません。||~127EI~
     VT100, Linux など Terminal タイプによっても Esc 文字列は変わります。||~127ER~
     PuTTYで SCO を選択すると Shift/Control+Fnは全て利用できますが    ||~127EI~
     (                                                                ||~127EI~
        この設定を無効にするには--NOSCO オプションを指定              ||~127EI~
        またSCOでは ^[Z が S+F2 に割り当てられていて従来のS+Tabへの割り当てと重複します||~127EI~
        --Z2 オプション指定で S+F2 割り当てとします                   ||~127EI~
     )                                                                ||~127EI~
     "The Backspace key"オプションは "Control-H(0x08)"を選択しないとDelキー(0x7f)と||~127EI~
     重複して判別できなくなります。又 0x7f をDelキーとみなす為には    ||~127EI~
     xeでも "xe  --7d" と指定する必要があります。                     ||~127EI~
     xekbchkも --7 オプションがあります。xekbchkで確認してください。  ||~127EI~
     xekbchk のヘルプは "xekbchk --h" です。                          ||~127EI~
                                                                      ||~127EI~
     xe は xelnxj.txt (9)-(b)"X-モードのときDefaultで解釈するEsc文字列"||~127ER~
     受け付ける設定にしてあります                                     ||~127EI~
     ("xekbchk --smapfilename"で mapfilenameに書き出されます)         ||~127EI~
     これ以外のキーを使用したい場合は追加のキーマップを与えてください ||~127EI~
     "サンプル キーマップファイル"を参考にしてください。              ||~127EI~
     コマンドラインパラメータで "xe --k::addfuncmapfile" のように指定するか||~127EI~
	 ini ファイルの LNX_Keymap パラメータで指定してください           ||~127EI~
 	 ( LNX_Keymap = ::addfucmapfile)                                  ||~127EI~
     作成したファイルが正しいかどうかは                               ||~127EI~
     "xekbchk --stmpf --kaddfuncmapfile" などとし tmpf を確認してください||~127EI~
                                                                      ||~127EI~
     *****                                                            ||~127EI~
     "サンプル キーマップファイル"                                    ||~127EI~
                                                                      ||~127EI~
        #start of file                                                ||~127EI~
        [common]                                                      ||~127EI~
          KeyString:F1       =^[[1Z~                                  ||~127EI~
          KeyString:S+f1     =^[aa                                    ||~127EI~
          KeyString:C+f1     =^[bbb                                   ||~127EI~
        # KeyString:A+f3     =^[^[[13~                                ||~127EI~
        # KeyString:A+f3     =^[[13~                                 ||~127EI~
        #end of file                                                  ||~127EI~
                                                                      ||~127EI~
        Note. "^[" は 0x1b の表記です                                 ||~127EI~
              PuTTY は 例えば Alt+F3 は  0x1b.1b.5b.31.33.7e を生成しますが||~127EI~
              これは 0x1b(Alt)+F3の形式になっているので登録は不要です ||~127EI~
              また xe は C+A+ のように複数Modifierには対応していません||~127EI~

   .バイナリーファイル。
      EB/BB/SB コマンドでファイルを開いた場合、あるいは通常のE/Bコマンド
      の場合ファイルの先頭の1024文字以内に30%以上のx20 以下の(x0d,0aは
      除く)文字がある時バイナリーファイルとみなします。
      バイナリーファイルでは行区切り文字(0x0d0a,0x0a)はデータとして
      取扱い,行は初期表示幅パラメータ(/Mnn,省略値nn=72)で区切られます。
      行番号欄は省略値HEXオフセット表示で行番号表示にも設定出来ます
      (NUMコマンド).
      "XIN"コマンド(Ctrl+F11)でモードをHEX入力モードに切り換えれば文字部に
      HEXコードで入力することもできます。
      バイナリーファイルの場合、HEX入力モードのとき入力禁止文字のチェック,||~v125R~
      DBCSのチェックは行われません。                                  ||~v125R~
      またタブ文字(0x09)もデータとなり桁位置合わせによる行の拡張表示は行いません。||~v125R~
      EH/BH/SHコマンドで開けば文字とHEX数字の両方をダンプ形式で表示します。
      /Mxオプションで開くか開いた後HEXコマンド(Ctrl+F10)を使うとHEX２段表示
      (文字とHEX数字を同じ桁位置で表示)で表示します。
      ディレクトリーリスト、最近ファイル名リストでは 行コマンド
      "1":表示(=BB),"2":編集(=EB),h/H:Hexモード(=BH/EH)が使えます。
      小文字は画面の表示/編集に従い、大文字はその反対のモードで開きます。
                                                                      ||~v124I~
      Hex表示のとき Alt+g で 文字部--横HEX部--縦HEX部の対応する位置へカーソルを||~v124I~
      移動することが出来ます。                                        ||~v124I~

      HEX 2段表示の例。
        ****|********** TOP OF FILE *****************************************************
        0001|G:\src\xe>h:\tool\lha.exe v k:\xe117\xegcc117
            |43577657636357666566626762726357633357666633322222222
            |7ac323c85e8ac4ffccc81e585060bac85117c8573311700000000
        0002|Listing of archive : k:/xe117/xegcc117.LZH
            |467766626626766676232632763332766663332454
            |c9349e70f6012389650a0baf85117f85733117eca8
        0003|  Name          Original    Packed  Ratio   Date     Time   Attr Type  CRC
            |22466622222222224766666622225666662256766222467622222566622247772577622454
            |00e1d50000000000f2979e1c0000013b54002149f00041450000049d500014420490500323

      ダンプ形式HEX 表示例。
        ****|********** TOP OF FILE *********************************************
        0000|G:\src\xe>h:\tool\lh|  473a5c73 72635c78 653e683a 5c746f6f 6c5c6c68
        0014|a.exe v k:\xe117\xeg|  612e6578 65207620 6b3a5c78 65313137 5c786567
        0028|cc117        Listi|  63633131 37202020 20202020 200d0a4c 69737469
        003c|ng of archive : k:/x|  6e67206f 66206172 63686976 65203a20 6b3a2f78
        0050|e117/xegcc117.LZH |  65313137 2f786567 63633131 372e4c5a 480d0a20
        0064| Name          Origi|  204e616d 65202020 20202020 2020204f 72696769
        0078|nal    Packed  Ratio|  6e616c20 20202050 61636b65 64202052 6174696f
        008c|   Date     Time   A|  20202044 61746520 20202020 54696d65 20202041
        00a0|ttr Type  CRC-----|  74747220 54797065 20204352 430d0a2d 2d2d2d2d

   .大きなファイル.
      DOS版では 640K の制限で大きなファイルは表示出来ません.
      DPMI サーバーがある場合は GCC版を使って下さい.
      DOSではQEMM386などがDPMIサーバーですが,ない場合はGCC版同梱の
      CSDPMI4B.ZIPを解凍してEXEにパスを通してください.
      CWSDPMIは Nifty の FEXT forumからDownLoadしました。
      DPMI ホストが動作しない場合,あるいはDOS版以外でも読み込みに時間が
      かかる、MemoryShortageが発生するときは EDIt/BROwse コマンドで入力行範囲を
      指定してください. 例えば e file1 100-500.                      (3)章
   .2 ファイル間で行の複写.
      カット&ペースト機能( (1)章-#3 )もありますが 編集行コマンドが
      画面分割した 2 画面間の行の複写をサポートします        (4)章-(A)
   .2 ファイル間の比較/照合.
      "=" 行コマンドで行を比較できます。
      画面分割して２つのファイルを開き比較したいそれぞれの箇所を
      "==" で囲みます。
      Find/eXclude コマンドで *=Mnオプションを指定して２つのファイルの
      キー照合ができます。
      例 "F *=M30 10 20"。現画面のカラム10-20と同じものが第二画面の
      ファイルのカラム30にあるか調べる。
   .1 行置きに削除
      行コマンドで Bandle/Skip パラメータを指定する
      例えば d5,3.2 は 3 行削除 2 行飛びを 5 回繰り返します。
      Bandle(,b)/Skip(.s) は すべての行コマンドでサポート。
      データファイルの編集に便利です.                          (4)章-(A)

            ===>
            *******|********** TOP OF FILE *********************
            d3,6.2 *
            0000200*
            0001000|<AF[177]: Allocation Failure. need 104 bytes
            0002000|<AF[177]: managing allocation failure, actio
            0003000|<GC(177): GC cycle started Sun Feb  1 00:43:
            0004000|<GC(177): freed 1006748624 bytes, 94% free (
            0005000|  <GC(177): mark: 49 ms, sweep: 14 ms, compa
            0006000|  <GC(177): refs: soft 0 (age >= 32), weak 0
            0007000|<AF[177]: completed in 65 ms>
            0008000|
            0009000|<AF[178]: Allocation Failure. need 192 bytes
            0010000|<AF[178]: managing allocation failure, actio
            0011000|<GC(178): GC cycle started Sun Feb  1 01:31:
            0012000|<GC(178): freed 1006747392 bytes, 94% free (
            0013000|  <GC(178): mark: 53 ms, sweep: 16 ms, compa
            0014000|  <GC(178): refs: soft 0 (age >= 32), weak 0
            0015000|<AF[178]: completed in 70 ms>
            0016000|
            0017000|<AF[179]: Allocation Failure. need 176 bytes
            0018000|<AF[179]: managing allocation failure, actio
            0019000|<GC(179): GC cycle started Sun Feb  1 02:19:
            0020000|<GC(179): freed 1006729200 bytes, 94% free (
            0021000|  <GC(179): mark: 52 ms, sweep: 13 ms, compa
            0022000|  <GC(179): refs: soft 0 (age >= 32), weak 0
            0023000|<AF[179]: completed in 67 ms>
            0024000|
            0025000|<AF[180]: Allocation Failure. need 24 bytes,
            0026000|<AF[180]: managing allocation failure, actio
            0027000|<GC(180): GC cycle started Sun Feb  1 03:07:
            0028000|<GC(180): freed 1006536064 bytes, 94% free (
            0029000|  <GC(180): mark: 55 ms, sweep: 15 ms, compa
            0030000|  <GC(180): refs: soft 0 (age >= 32), weak 0
            0031000|<AF[180]: completed in 70 ms>

   .ファイルの前の方と後ろの方を同時に見たい.
      PF2 で画面分割し同じファイルを表示する(編集は1方のみ,他方は表示).
      あるいは X 行コマンドで中間の行を非表示にする.
      元に戻すには 部分的に戻すにはY 行コマンドを使用。               ||~v124R~
      全て表示に戻すには "RESet X" コマンドを使用。                   ||~v124R~
      表示行、非表示行の切り替えはFLIp(別名XX)コマンドを使用します。  ||~v124I~
                                                                      ||~v124R~
   .ある文字列を含む行を削除する
      EXClude コマンドで文字列を含む行を非表示にした後 DEL X ALL または DROp X ALL||~v124R~
      コマンドで非表示行を一括削除する.
      反対に表示行を削除するには DEL/DROP で NX オペランドを指定する. ||~v124R~
      文字列を含む行のみを表示するには全行を "X all"コマンドで非表示にして
      FINd ALL が使えます
      文字列を含む行の前後何行かを選択するには FINd,EXCludeコマンドで
      -a,-b オプションが使えます。
      表示行、非表示行の切り替えはFLIp(別名XX)コマンドを使用します。  ||~v124R~
                                                                      ||~v124R~
      文字列探索では正規表現形式、P'pic-str'形式も指定でき、          ||~v124R~
      この形式はCHAngeコマンドの非置換文字列としても指定できます。    ||~v124R~
                                                                      ||~v124R~
   .更新タグ.
      ファイル名の拡張子によっては更新行に変更タグが自動的に付与されます
      例えば .c ファイルには //~yymdd~ (yy:年,m:月,dd:日)形式の変更タグが
      付きます.
      拡張子と変更タグの関係は .INI ファイル の Change_ID_Type_xxで
      指定します.                                              (6)章
      yymdd 以外でバージョン番号などを変更タグとする場合,あるいは拡張子
      とは無関係に変更タグを付けたい場合は変更タグの形式をファイルの
      1 行目で指定します.
      例えば  //CID://+v010R~: で変更行に //~v010~R のタグが付きます
      CID ヘッダー行は "CID TOP" あるいは "CID TOPA"コマンドで
      サンプル行を1行目に挿入することができます。
      また一時的に設定を解除するにも CID コマンドを使用         (3)章
   .SPFファイル(行番号付きファイル).
      ファイルの 1 行目 の CID ヘッダー行で option=(m72,n) を指定.
      例えば  //CID://+DATE~R:#63 option=(m72,n) を 1 行目にいれます.
      これはタグの形式が //~yymdd~ で 63 桁目にセットする,そして
      マージンが72(1-72桁にのみ入力可能),n が行番号付きファイルを示します
      この指定がある時全行80桁固定長で73-78桁が行番号,79-80桁が
      バージョン番号のSPFファイルとして扱います.SPFファイルは
      固定長/行番号の保持,バージョン番号の自動更新を行います。
      CID挿入位置がデフォルトでよければ Fn[-m]オプションを指定した    
      EDIt/BROwse/SELectコマンドを使えばヘッダー行は不用になります。
      またEN/BN/SNコマンドはそれぞれ "F80-72 p0"つきの                
      Edit/Browse/Selectと同等。                                      
      Col73-80をデータ扱いするには CID ヘッダー行でoption=(F80)指定するか
      e8コマンドを使用してください。                                  
                                                                      ||~v124R~
   .COBOLファイル。
      CID Header行で option=(..,cob,..) を指定するか或いは EC,BC,SC
      コマンドでファイルを開くことでCOBOLファイルとみなす。
      COBOLファイルはカラム1-6が行番号欄(4桁行番号+2桁枝番)とする。
      挿入行には保存時に行番号が設定され,RENumコマンドもこの欄を設定。
      カラム1-6をコメント扱いとしたい場合はCID Header行で
      option=(..,cobk,..) を指定するか或いは EK,BK,SK コマンドで
      ファイルを開く。
      カラム73-80は option=(..,n,..)か ECN,BCN,SCN,EKN,BKN,SKNコマンド
      の時,COBOL以外のSPFファイルと同様に行番号(4+2)＋2桁更新番号とする。
      カラム73-80を行番号としない場合はそこに8桁CIDを設定可能。
      表示左端、行挿入時のインデンテーションはカラム 7。
      (タブ停止位置はCOLコマンドで設定可能)
      cobファイルは同時にSPFファイルだがcobkファイル(私の勝手なnaming)は
      option=(n)の指定が無い限りは単にマージン付きファイルで行長=80固定の
      制約も無いが "num clear k"コマンドでcol1-6がスペースクリアーされる。
      cobkファイルの省略時のCID位置はカラム73。
  Summary
 +-----------+------------+----------+-----------+--------------------+
 |CIDヘッダー|編集コマンド|行コマンド|Col.1-6    |Col.73-80 |行長     |
 +-----------+------------+----------+-----------+--------------------+
 |cob,n      |BCN/ECN/SCN/|i/I       |COBOL行番号|SPF行番号 |80桁固定 |
 |           |Bi/Ei/Si    |          |           |          |         |
 |cobk,n     |BKN/EKN/SKN/|j/J       |any        |SPF行番号 |80桁固定 |
 |           |BJ/EJ/SJ    |          |           |          |         |
 |cobk       |BK/EK/SK    |k/K       |any        |any       |any      |
 |cob        |BC/EC/SC/   |l/L       |COBOL行番号|any       |80桁固定 |
 |           |BL/EL/SL    |          |           |          |         |
 |n          |BN/EN/SN    |n/N       |any        |SPF行番号 |80桁固定 |
 |f80        |B8/E8/S8    |8         |any        |any       |80桁固定 |
 +--------------------------------------------------------------------+
      行コマンドはファイル名指定画面とディレクトリー画面とで同じ。

      入力を大文字固定するには CAP コマンド、EDIt コマンドCAPオプションがある。
      また"U" 英大文字変換 編集行コマンドも参照。
                                                                      ||~v124R~
   .固定長レコードファイル。                                          ||~v125R~
                                                                      ||~v125R~
     -メインフレームのファイルは通常改行コードを使用しません。        ||~v125R~
      行長はファイルの属性として定義します。                          ||~v125R~
      行長が固定長のファイルを PC に ダウンロードして編集する場合に使用します||~v125R~
     -E filename /M[m|p|u|t|R][m|p|u|e|R] /Fn[-m]                       ||~v125R~||~v125R~
         R:レコードモード（前はReadオプション、後はWriteオプション)   ||~126FR~
            p:改行文字が 0x0d0a, u:改行文字が 0x0a m:改行文字が 0x0d  ||~v125R~
            e:EBCDIC-NL(0x15)が改行文字                               ||~v125R~
         Fn[-m]:レコード長、マージン                                  ||~v125R~
           F80-72 で レコード長:80, 右マージンが col.73-80            ||~v125R~
           右マージンを非保護域とするには P0 を指定してくださ         ||~v125R~
        例） "e file1 /Mr /F80-72 P0"                                 ||~v125R~
     -レコードモードReadは改行文字を無視し /Fn 指定の レコード長で読み込み||~v125R~
      レコードモードWriteは改行文字を出力しません。                   ||~v125R~
        レコードモード、レコード長はプロファイルに保存されます。      ||~v125R~
        レコードモードファイルに改行文字を挿入するには /Mrp などとします。||~v125R~
        非レコードモードファイルから改行文字を取り去るには /Mpr などとし、保存後||~v125R~
        /mr Fxx で開き直します。                                      ||~v125R~
        プロファイルのレコードモードをリセットしたい時は R 以外の/Mオプションを指定します||~v125R~
        /F0 指定の時もプロファイルのレコードモードをリセットします。  ||~v125R~
     -レコードサイズの変更。                                          ||~v125R~
      EDIt コマンドで新たに /F オプションを指定することでプロファイルは上書きされますが||~v125R~
      REPlace/CREate/SAVe/END コマンドで出力時に変更できます。        ||~v125R~
        REPlace/CREate/SAVe/END  [filename]  [/M[p|u|m|e|r]]  [/Fn[-m]]       ||~v125R~||~v125R~
      行長は出力前に SPLit コマンドでレコード長以内に収まるように調整してください||~127BR~
      /M で レコードモード(改行コード無し)<-->通常の改行モード の変更が出来ます。||~v125R~
      /F で レコードモードの行長を指定あるいは変更出来ます。          ||~v125R~
      (SAVe コマンドではファイル名したときのみ /M, /F が有効です、単に保存する場合は||~v125R~
       EDItコマンドの /M でレコードモード<-->改行モードのみ変更できますが、||~v125R~
       レコード長の変更は出来ません。)                                ||~v125R~
                                                                      ||~v125R~
        例1)  rep file1 cpeb /mr /f80                                 ||~v125R~
               改行モードで開いたファイルから EBCDIC 80 桁レコードモードファイルを作成||~v125R~
        例2)  s   file2 cplc /mp                                      ||~v125R~
               例1の逆の操作になります。                              ||~v125R~
     -REPlace/CREate コマンドで /M /F を指定しなかった場合            ||~v125R~
      開く時の出力モードオプション指定が適用されます。                ||~v125R~
        例えば "e file1 cbep /mr f80" で ファイルを開き               ||~v125R~
               "rep file2 cplc" とすると短い行はレコード長まで拡張され||~v125R~
               file2 のプロファイルに CPLC, LRECL=80, レコードモードが記録されます||~v125R~
               " e file1 cpeb /mrp f80" で開き                        ||~v125R~
               "rep file2 cplc" とすると各行には改行コードが追加されます。||~v125R~
               UTF8 ファイルの場合 LRECL/レコードモードはプロファイルに記録されません。||~v125R~
     -EBC ファイルを E8 コマンドで開くとレコードモードとみなします。  ||~v125R~
     -レコード長を超えた挿入は出来ません、短い行は保存時にレコード長まで拡張されます。||~v125R~
     -TABカウンターはオープン時は 1 に設定します。                    ||~v125R~
      /Mr なしの /Fxx のみ指定の固定長ファイル(改行文字あり)と異なり  ||~127BR~
      /Mr /Fxx 指定のの固定長ファイル(改行文字なし)では保存時にTAB(0x09)は||~127BR~
      SPACE(0x20)に置換されません                                     ||~127BR~
      置換は TC|NOTC オプションで変更できます                         ||~127BR~
      例えば "E mrfile TC" で開くと保存時に TAB は SPACE に置換されます||~127BR~
     -UTF8 固定長レコードファイルの表示幅はUTF8コードの性格上固定ではありません||~127BR~
      レコード長はUTF8コードでの長さです。画面の行長はASCII以外の文字が含まれていると||~127BR~
      短く表示され、桁数==レコード長まで拡張できますが保存時にUTF8コード長==レコード長で||~127BR~
      分割されます。(固定長テキストファイル(改行文字あり)では分割されません)||~127BR~
                                                                      ||~127BR~
   .可変長レコードファイル。                                          ||~127BR~
                                                                      ||~127BR~
     -レコードへッダー形式                                            ||~127BR~
        RDW:LLZZ 形式(２バイトヘッダー長を含むレコード長+0x0000),省略値||~127BR~
        H  :2バイトLL(ヘッダー長を含む長さ)                           ||~127BR~
        HD :2バイトLL(ヘッダー長を含まない長さ)                       ||~127BR~
        F  :4バイトLL(ヘッダー長を含む長さ)                           ||~127BR~
        FD :4バイトLL(ヘッダー長を含まない長さ)                       ||~127BR~
        MF :Microfocus 仕様                                           ||~127BR~
            ファイルのトップのシステムレコードがレコードヘッダー形式を指示する||~127BR~
            (システムレコードについては詳細には関知してないのでxeで更新した||~127BR~
             ファイルをそのままアップロードすることは避けてください)  ||~127BR~
                                                                      ||~127BR~
        レコード形式エラーが出た場合は EB または EH コマンドで開いて確認してください||~127BR~
        LOCate コマンドで 指定の Hex offset にカーソルを位置付けできます||~127BR~
                                                                      ||~127BR~
        "TOP OF FILE"/END OF FILE" には カラム４ に "v" が表示されます||~127BR~
                                                                      ||~127BR~
        /Mv, /Fvfmt指定はプロファイルに保存されます                   ||~127BR~
        一度Browse/Editで指定すれば次回からは指定不要です             ||~127BR~
        SAVe/CREate/REPlace/END コマンドでの指定も書き込んだふぁいるの||~127BR~
        プロファイルとして保存されます                                ||~127BR~
                                                                      ||~127BR~
     -各コマンドでのオプション指定は以下のようになります              ||~127BR~
                                                                      ||~127BR~
        Browse /Mv  /Fvfmt                                            ||~127BR~
            vfmt:レコードヘッダー形式を指定                           ||~127BR~
              例)  B vfile /Mv /Frdw                                  ||~127BR~
        Edit   /Mrv /Fvfmt                                            ||~127BR~
            r=v:read as vfmt                                          ||~127BR~
            w=v:save as vfmt                                          ||~127BR~
              例)  E vfile /Mv /Fh                                    ||~127BR~
            保存時にレコード形式を変更するときに "r" と "w" を指定します||~127BR~
              例)  E vfile /Mvr /F130 /Ff (vfmt=F で読み, RECFM=F+LRECL=130 で保存)||~127BR~
            END コマンドでもレコード形式を変更できます                ||~127BR~
        END  /Mv /Fvfmt                                               ||~127BR~
            開いた時と異なるレコード形式で保存するときに /M, /F を指定する||~127BR~
            但し vfmt=MF は使用できません                             ||~127BR~
              例)  END /Mv /Ff                                        ||~127BR~
        SAVe filename /Mv /Fvfmt                                      ||~127BR~
             ファイル名を指定した時のみ /Mv, /F オプションが指定できます||~127BR~
             例) S vfile CPEB=CP930 /Mv /Fh (非EBCDICファイルからvfmt=FのEBCDICファイルを作成)||~127BR~
        CRE/REP/APP filename /Mv /Fvfmt                               ||~127BR~
             APP コマンドでは 複写元とアペンド先のレコード形式が異なる場合 /M と /F の両方を指定してください||~127BR~
             CRE/REP コマンドでは /M, /F の指定がなければ複写元のプロファイルの属性が複写先に適用されます||~127BR~
             例) REP ebcvf cpeb=CP930 /Mv /Ff nx                      ||~127BR~
        COPy filename /Mv /Fvfmt                                      ||~127BR~
             /M や /F で複写もとのファイルの属性を指定、プロファイルに登録済みの場合は不要です||~127BR~
             例) COPy ebcvf cpeb=CP930 /Mv /Ff                        ||~127BR~
        XPR  filename /Vvfmt /Rlrecl                                  ||~127BR~
             /V:RECFM=Vのとき指定, /R:RECFM=F のとき指定              ||~127BR~
             プロファイルに登録済みの場合は不要です                   ||~127BR~
             また画面ファイル印刷("XPRint *"/"XPRint **")の場合も指定不要です||~127BR~
                                                                      ||~v125R~
   .ファイルプロファイルの保存。                                      ||~v124R~
                                                                      ||~127BR~
      以下のファイルプロフィール(属性)が保存され同じファイルの次回オープン時に適用されます||~v124R~
        BNDS, CAPS, TABCLEAR, SPF/COBOL行番号欄の有無と書き込み保護, 固定長ファイル(行長,マージン)||~v124R~
        固定長ファイルモード(/Mr, /Flrecl),可変長ファイル形式(/Mv, /Fvfmt),||~127BR~
        シンタックスハイライト関連(言語タイプ, オープン時ON/OFF, ENTERキー処理)||~v124R~
      プロファイルはワークディレクトリーのprofile サブディレクトリーに保存されます。||~v124R~
        各ファイルのフルパス名を "\"("/"), ":"-->"_", " "-->"=",  "."-->"~" に変えた||~v124R~
        ファイル名がそのファイルのプロファイル・ファイルです。        ||~v124R~
#ifdef GCC                                                            ||~v124I~
        GCC版では、DOSは8.3ファイル名形式なのでprofile.Gという1つのファイルの中に||~v124I~
        その名前のレコードを保存します。                              ||~v124I~
#endif                                                                ||~v124I~
#ifdef OS2                                                            ||~v124I~
        OS2版では、ワークディレクトリーがHPFS出ない場合はGCC版と同じになります。||~v124I~
#endif                                                                ||~v124I~
        デイレクトリー名対応、拡張子対応のプロファイル・ファイルも作成可能で、||~v124R~
        ファイル対応の属性指定がない場合に省略値属性とされます。      ||~v124R~
        適用優先順位は拡張子プロフィールが後になります。              ||~v124R~
      プロフィールは以下のコマンドで出力されます。                    ||~v124R~
        BNDS:                                                         ||~v124R~
             BND [ [* | 0 | col1] [* | 0 | col2] | RESET ] [EXT]      ||~v124R~
             	RESET:BNDS を 解除した上で、プロファイルをクリアー。  ||~v124R~
                      次回から親デレクトリー、拡張子プロファイルがあればそちらの指定が適用されます。||~v124R~
                      そうしたくない場合は 0を指定してください        ||~v124R~
                EXT  :そのファイルのBNDSプロファイルをそのファイルの拡張子の省略値プロファイルとします。||~v124R~
             ディレクトリーリスト画面で入力するとディレクトリー内のファイルの省略値となります。||~v124R~
             INI コマンドで BNDS属性を .ini ファイルに書き込むことはなくなりましたが||~v124R~
             ini ファイルでの Bounds指定は有効ですがプロファイルに指定がない場合に適用されます||~v124R~
        CAPS:                                                         ||~v124R~
             CAP [on|off|RESET] [default|tso|cmd|EXT]                 ||~v124R~
             	RESET:CAPS OFF とした上でプロファイルをクリアー。     ||~v124R~
                      次回から親デレクトリー、拡張子プロファイルがあればそちらの指定が適用されます。||~v124R~
                      そちらの指定が適用されます。そうしたくない場合は off を指定してください||~v124R~
                EXT  :そのファイルのCAPSプロファイルをそのファイルの拡張子の省略値プロファイルとします。||~v124R~
             ディレクトリーリスト画面で入力するとディレクトリー内のファイルの省略値となります。||~v124R~
        シンタックスハイライト関連:                                   ||~v124R~
             SYN [all|reset|enter|entera|on [lang-type]|off]          ||~v124R~
                                                                      ||~v124R~
             ENTERキーで再評価する範囲(ENTER:変更行のみ,ENTERA:全行), ||~v124R~
             ファイルを開く時にシンタックス評価をするか否か(on/off)とlang-typeが||~v124R~
             プロファイルとして保存されます。                         ||~v124R~
             ディレクトリーリスト画面では入力できません。             ||~v124R~
             デレクトリー、拡張子のの省略値は xesyn_.cfgの            ||~126DR~
             OPEN,OPEN_EXT,_EXTオプション指定も有効です。             ||~v124R~
                                                                      ||~v125R~
#ifdef UTF8SUPP                                                       ||~v125R~
        ファイルのエンコーディング                                    ||~v125R~
             Edit/Browse/Select [CPU8|CPLC|CPAS|CPEB]                      ||~v125R~||~v125R~
                                                                      ||~v125R~
             ディレクトリーリストに指定するととディレクトリー内のファイルの省略値となります。||~v125R~
#endif                                                                ||~v125R~
                                                                      ||~v125R~
      プロフィールの表示、保存用には PROfile コマンドを使用します。   ||~v124R~
           例えば                                                     ||~v124I~
             ディレクトリー dir1 内のファイルの省略値をSPFファイル(80桁固定長行番号付ファイル)としたい場合||~v124I~
             そのディレクトリー内のファイルを1つ開き("EN dir1\samp1") "PRO path save"と入力します。||~v124I~
             そのディレクトリー内のファイルはそのファイル固有のプロファイルレコードがなければ||~v124I~
             "E dir1\samp2"で"EN dir1\samp2"と同じになります。        ||~v124I~
             これはデレクトリーリストからSelectした場合にも適用されます。||~v124I~
             拡張子 cob のファイルをCOBOLファイル(80桁固定長col.1-6はCOBOL行番号)としたい場合は||~v124I~
             cobを拡張子にもつファイルを開き("EC samp3.cob") "PRO ext save"と入力します。||~v124I~
             プロファイルを確認するには ファイルを開いた画面で "PROfile"||~127BR~
             プロファイルレコードの内容を確認するには "PROfile {*|path|ext}" を使用。||~127BR~
                                                                      ||~127BR~
      ディレクトリーのプロファイルをクリアーするときはそのディレクトリーリスト画面で||~127BR~
         "PROfile RESET" コマンドを使用                               ||~127BR~
                                                                      ||~v124R~
      プロファイル設定の無視。                                        ||~v124R~
             Et,En,Ec などのExコマンドではprofileのNUMSTD,COB,Fxx オプションは無視されます。||~v124R~
             その他個別には次のようなオプションを指定してください。   ||~v124R~
               NONUM : E コマンドでprofile の NUMSTD,COB,Fxx オプションを無視する。||~v124R~
               Fxx-mm: 固定長ファイルの行長とマージン幅               ||~v124R~
               NOCAP : CAPS off                                       ||~v124R~
               NOTC  : TABCLEAR off                                   ||~v124R~
               P{0|1}: 右マージン保護                                 ||~v124R~
                                                                      ||~v125R~
#ifdef UTF8SUPP                                                       ||~v125R~
             デレクトリーリストで行コマンドコードページを明示する行コマンドを追加しました。||~v124I~
             "[" (CPLC) と "]" (CPU8) です。                          ||~v124I~
#endif                                                                ||~v124I~
                                                                      ||~v124R~
      1行目のCIDヘッダー行でのオプション n,cob,cobkの指定は           ||~v124R~
      プロファイルへの追加の場合のみ効果を持ちます。                  ||~v124R~
      例えばプロファイルがNUMSTDの時CIDヘッダーの cob は有効ですが    ||~v124R~
      プロファイルがNUBSTD,COBの時 n のみ指定ははCOBをリセットしません。||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
   .デレクトリー内のファイルの一斉文字列置換。                        ||~v124R~
                                                                      ||~v124R~
      デレクトリーリスト上でEXEコマンドでワイルドカー選択のファイルにCHAnge||~v124R~
      コマンドを適用します。                                          ||~v126R~
      例えば  execmdfに以下の３行を記述し                             ||~v126R~
                       s "%3"                                         ||~v126R~
                       c %1 %2  all                                   ||~v126R~
                       end                                            ||~v126R~
      DirListを開いた画面で "exe ! execmdf FROM TO <s *.c"と入力すれば||~v126R~
      全ての *.c ファイルに Select/Change/End を実行する。            ||~v126R~
      (EXEコマンドの項を参照してください。)                           ||~v126R~
      少しややこしいですが%行コマンドを使用する方法もあります。       ||~v124R~
      (DirListの%行コマンドの項を参照してください。)                  ||~v126R~
                                                                      ||~v124R~

   .ディレクトリー間,複数ファイルの移動
                                                                      ||~v124R~
      ディレクトリー表示画面でそれぞれの行にMove 行コマンドと移動先を
      入力するのは面倒です.コマンド複写キーを使用します.
      Move行コマンド入力行でPF10でコマンドを取り込み複写先の行でPF11で
      コマンド複写します.                                      (1)章-#9
                                                                      ||~v124R~
   .ファイルの行数表示

#ifdef UNX
      最初はディレクトリーリストの右端の欄は User名/Group名です。
      Shift+F6でUserID/GroupID表示に切り替わり、F6でバイト表示に
      切り替わります。
      ファイルの行数を表示するにはバイト表示のときカーソルを移動して
      再度 F6 を使用します。
#else
      ディレクトリーリストで PF6 キーで バイト<-->行数表示を切り換える
#endif
      リモートファイルのときはUser名かUserIDかはサーバー固定でどちらかです。

   .ファイルの誤削除
      ディレクトリー表示画面で削除した場合は Undo 行コマンドで戻せます.
      DOS コマンド(コマンド入力行でDELコマンドを使用)で削除した場合は戻せません.||~v124R~
      Undo は Move/Rename の行コマンドでもサポートされます.
      Delete 行コマンドには,Undo 不要(z),読取専用のファイルも削除(/),
      その両方(0)のバリーエーションがあります.                        ||~v124R~
                                                                      ||~v124I~
     +---+-------+---------------+                                    ||~v124I~
     |cmd|undo   | ReadOnly      |                                    ||~v124I~
     +---+-------+---------------+                                    ||~v124I~
     | d |Avail  | Error         |                                    ||~v124I~
     | / |Avail  | Deleted       |                                    ||~v124I~
     | z |N/A    | Error         |                                    ||~v124I~
     | 0 |N/A    | Deleted       |                                    ||~v124I~
     +---+-------+---------------+                                    ||~v124I~

   .OS のコマンドを使用する
      メニュー画面で 6 を入力しコマンド出力画面でコマンド入力. (2)章
      又は,DOS コマンドプレフィクス(>)を入力,子シェルを呼出す. (5)章
                                                                      ||~v128R~
      PATHなど環境変数の設定が必要な場合 SET/EXPortコマンドを
      使用してください。::xe.envを用意すれば起動時にそこから
      設定します。ワークDirをShareしていて各版ごとに設定が
      異なる場合は xe___.env(___:OSタイプ、例、xewin.env)で
      設定してください
                                                                      ||~v128I~
	  wxe の場合 xesyscmd コンソールアプリが別プロセスとしてコマンドを処理します||~v128I~
      そのコマンドがユーザーの応答を要求する場合 wxe は応答待ちの状態になります||~v128I~
      それを解消するには DOS窓:xesyscmd 上で Ctrl+C を押してください。||~v128I~
      grep コマンドは AUX,COMn などの予約ファイル名があるとWaitしてしまいます||~v128I~
      そのような場合もCtrl+Cを使用してください                        ||~v128I~

   .Excel/OpenOfficeなど他のアプリケーションの使用

      ディレクトリーリスト画面では % 行コマンドで実行ファイル名を
      指定してその行のファイル名をパラメータとして実行させる
      ことができます。
      ファイルの特定の文字を置換する例は % 行コマンドの項を参照してください。||~v124R~
                                                                      ||~v124R~
      # 行コマンドはその行のファイルを実行するのに使用します。

#if defined(WIN) || defined(XXE)

      ファイル名拡張子に関連付けられたアプリケーションでファイルを
      開くことができます。例えば xxx.xlsをexcelで開くなど。
      ディレクトリーはExplorerに関連付けされています。
      ファイル名入力指定画面、ディレクトリーリスト画面で行コマンド"!"を
      入力します。
      wxe/gxeならマウス右ボタンポップアップメニューでOpenWithを選択します。
      左ボタンダブルクリックの場合は画面の左端をダブルクリックする。
      ディレクトリーリストでは1-5桁、ファイル名リストでは1-3桁の範囲。
      また、全ての画面でASSociateコマンドが使用できます。

#ifdef WXE
      WXE版ではWindowのメニューのアイコンメニューでexplorerやDOS窓を
      起動することもできます。
#endif
#ifdef XXE
      gxeではメニューボタンでNortilusやTerminal Windowを起動することもできます。
#endif

#endif

   .VisualC++との連携。

      コマンドラインパラメータで ファイル名とともに/Lnnを指定すると
      ファイルを開いた後、LOC nn コマンドを発行し nn 行目を表示する。

#ifdef WIN
      VC++デバッガーで次のような設定すると、設定したキーを押すとVC++の
      カーソルのある行をxeで開いて表示できます。
      VC++ v6 では Tool-->Customize-->Toolタブで xeを登録し
      引数に "$(FilePath) /L$(CurLine)"を指定します。
      実行時Dirは$(CurDir)にするとよいでしょう。
      呼び出しキーは同じDialogでKeyboardタブを開きCategory:Toolの
      UserToolxに新しいショートカットを与えます。
#endif

#ifdef WIN

   .他のプログラムの進行を定期的にチェックする。

      AT コマンドが指定の間隔で一連のコマンドの実行をサポートします。
      たとえば、5秒間隔で他のプログラムの出力ファイルの後ろから20行を
      表示するには次のように入力します。
      "b outfile;AT 5 ;end;b outfile 20t-"
      SLEep コマンドを間に入れることもできます。
      たとえば次のようにしても上と同じことができます。
      "AT 1 ;b outfile 20t-; sle 4;end"

#endif

   .ユーザーコマンド                                                  ||~127ER~
                                                                      ||~127EI~
      メニュー画面 =0.1 で設定します.         --->(2)章-(A-3)         ||~127ER~
                                                                      ||~127EI~
      先頭部分は未割り当てのファンクションキーが表示されています      ||~127EI~||~v29tR~
      コマンド文字列を設定してそのファンクションキーに割り当てます(ユーザーコマンドキー)||~127EI~
      ショートカットキー割り当てがそれに続きます                      ||~127EI~
      ショートカットキーは設定された文字列をカーソル位置に出力します  ||~127EI~
      設定した文字列は２キー操作で呼び出します                        ||~127EI~
      例えば sc,0 は "Alt+a" の後 "0" キーを押します                  ||~127EI~
      ユーザーコマンド定義がそれに続きます                            ||~127EI~
                                                                      ||~127EI~
      コマンドの連結は";".コマンド入力行を越える長さも可能(最大240).  ||~127EI~

      ユーザーコマンドキー                                            ||~127EI~
        最後に";"があれば全コマンドを連続実行し,なければ文字列が      ||~127EI~
        単にコマンド行に表示されるだけ.                               ||~127EI~
        行末コメントは "#" に続けて記述する                           ||~v29tR~
        WindowsでもLinuxでもショートカットキーとしてシステムが割り当てているがあります、||~v29tR~
		それらをxeは受け取れません                                    ||~v29tR~
        wxe/gxe の場合ルーラー用(カーソル位置に細い線を表示)の割り当て、省略値はS+C+F1/F2/F3があります||~v29tR~
      ショートカットキー                                              ||~127EI~
        Alt+qのあとは文字列が1行目に表示されるので内容確認の後、      ||~127EI~
        同じ1文字キーを再度押した時にカーソル位置に入力される。(例えば "A+q","0","0")||~v29tR~
        カーソルがコマンド入力行にあるとき、Alt+aの直後に1文字入力すると||~127EI~
        対応する文字列がカーソル位置に入力され,次のEnterで実行される。||~127EI~
        %1 %2 ... を使用してコマンド入力行からパラメータを受け取ることも可能||~v29tR~
        行末コメントは "#" に続けて記述する                           ||~v29tR~
                                                                      ||~127EI~
      別名コマンド                                                    ||~127ER~
        3桁コマンドと実行されるコマンド文字列を定義します             ||~127EI~
        例えば ac1 e %1;c word1 word2 all;end                         ||~127EI~
        で "ac1 fnm1" の入力でl 定義された３コマンドが実行されます    ||~127EI~
        尚、１桁目を"*"にすることでコメント化できます。               ||~v29tR~
        行末コメントは "#" に続けて記述する                           ||~v29tR~

      コマンド文字列には %n, %*, %^, %@ のパラメータ置換ができます    ||~127EI~
        %1-%9:パラメータはコマンド入力行に入力しておきます。          ||~127EI~
              別名コマンドではコマンドのパラメータで指定します        ||~127EI~
        %*   :現在開いているファイルのフルパス名                      ||~127EI~
        %^   :画面分割で他方の画面で開いているファイルのフルパス名    ||~127EI~
        %@   :その位置までで未使用（%nで使用されなかった）のパラメータ||~127EI~
        %* and %^ は 該当画面がファイル/デレクトリーリストでない場合はスペースになります||~127EI~
        例) grep %1 %^>::tmp; e ::tmp;                                ||~127EI~
                                                                      ||~v129R~
        grep コマンドはWindows用のものもネットを探せばあると思います  ||~v29tR~
                                                                      ||~127EI~
      カーソルの移動には POS/HOM コマンドを使用して下さい.            ||~127EI~
      最初の位置はコマンド入力欄の先頭です                            ||~127EI~
      文字列入力には KEY コマンドを使用して下さい.                    ||~127EI~
      行番号欄へ文字入力した行コマンドを実行するにはKEY コマンドに続け||~127EI~
      ENT コマンドを設定して下さい.                                   ||~127EI~
        例  pos 3,1;key d3;ent;                                       ||~127EI~
            pos 10,hsp;=6;grep %1 *.c;                                ||~127EI~
                                                                      ||~127EI~
      EXEコマンドも同様の用途で利用できます。
      合計240桁の制限がありません                                     ||~127EI~
      一連のコマンドをファイルに記述してEXE コマンドで実行します。
      EXEコマンド用のファイルの編集には::clを利用することもできます。
      コマンドはオプション(OPT CMDLOG [ON|OFF])で::clにロギングされます。||~127ER~
      (GCC,OS/2では一旦"OPT CMDLOG OFF"にしてから開いてください）
                                                                      ||~127EI~
      開いたファイルの内容から行のコマンドの実行には"#"/"##"編集行コマンドが使えます。||~127ER~
                                                                      ||~127ER~

   .HEX計算/時間計算/タイムスタンプ変換/小数点計算をする。
      XBC コマンドで10進、16進、8進の変換、四則演算ができます。
      AND/OR/EX-OR/シフト、累乗などもできます。時刻データもサポート。
      ダブルワード(8バイト)、小数点計算もサポート。
      タイムスタンプ(1970からの経過秒)の日時表示もサポート。
      メーンフレームのダブルワードTODもサポート。

   .C言語括弧/#if/"/*"コメント/XMLタグ ペアサーチ。                   ||~v129R~
     C言語では3種の括弧 (,[,{ が使用されますが ネストが深くなると
     対応する括弧を探すのに苦労します。
     Alt+"."がサポートします。Alt+","は非表示行を飛ばして探すので     ||~v129R~
     行コメントを非表示にすればコメントを無視した探索ができます
     括弧のほかは <,> と /*,*/ のペアサーチもサポート。
     #if/#ifdef/#ifndef/#else/#endif/#elifも同じネストレベルの相手を
     探索します。
     カーソルを括弧、# 等にあわせてキーを押してください。
                                                                      ||~v129R~
     XMLタグ ペア探索                                                 ||~v129R~
       .デフォルトで Alt+"/" を割り当て                               ||~v129R~
       .カーソルを "<" または ">" の位置において "Alt+/" を使用       ||~v129R~
       .コメントない("<!--" から "-->")は無視、ネストも処理、         ||~v129R~
         html 自動生成ツールの不具合を修正するのに便利です            ||~v129R~

   . カット & ペースト について.
        -マウス操作についてはxewxej.txt を参照。                      ||~v124R~
         以下はキーボード使用の場合です。
        -領域モード、ブロックモード、行モードの ３種類の削除/複写元範囲指定があり,
         領域モードはWindows標準の範囲指定で開始点の行の後半から終了点の行の前半までで間の行は行全体||~v124R~
         が範囲になります。Alt+F6で始点、終点を指定します。
         Alt+F6は領域モードで複写元/複写先の両方で範囲指定で使用するので
         複写元の指定がすんだら明示的にA+F9で明示的にクリップボードに
         複写する必要があります。Alt+F7の場合はA+F9をしなくても、A+f8,A+Insなどで||~v126R~
         ペーストできます。
         ブロックモードは始点,終点を対角とする,箱形ブロックを範囲とし
         Alt+F7,Alt+bを使用します。
         行モードは範囲内の各行の行頭から行末を範囲とします.
         始点、終点が行番号欄かファイル行の1桁目にのときに行モードとなります。
         行マーク開始/終了キー(Alt+h)ではカーソル位置に関係なく行モードとなります.
         ブロックモードの一つでAlt+wでカーソル位置のワード(両端のスペース
         で区切られる）がコピーされます。Ctl+w はコマンド行への複写まで行います。||~v124R~
        -複写方法は 4 種類あります.
         Ctl+vはWindowsと同じで領域指定がしてなければ、カーソル位置に挿入、
         領域指定があればその領域を置換します。
         (注)領域指定がない場合で複写元がブロックモード(Alt+F7)で指定された場合,||~127MR~
　　　　　　 複写元は行毎に行末に改行文字があるとみなすので複写先の行が分割されます。||~127MR~
　　　　　　 Ctl+vを使用する場合は複写元は領域モード(Alt+F6)で指定してください.||~127MR~
         ブロック挿入貼付(Alt+Ins,Alt+c)は箱型ブロックを挿入,
         ブロック上書貼付(Alt+F8,Alt+p)は上書,
         ブロック空白上書(Alt+o)はスペースのみを上書きします.
         ブロック削除移動(Alt+m),ブロック空化移動(Alt+n)の場合挿入に
         なります.
        -ブロック挿入方法には右ずらしと行の挿入とがあります.
         行の挿入になるのは以下の場合でカーソルのある行の次に挿入され,
         それ以外は右ずらしになります.
         (ブロックモードで行挿入も出来ます)
         .行挿入複写(Alt+i),行挿入削除移動(Alt+j),行挿入空白移動(Alt+k)
         .ブロック挿入貼付(Alt+Ins,Alt+c),ブロック削除移動(Alt+m),
          ブロック空化移動(Alt+n)の場合でカーソルが行番号欄にある時.
        -削除方法には切り詰め,スペースクリアー,行削除の 3種類があります.
         ブロッククリアー(Alt+End),ブロック空化移動(Alt+n)は
         スペースを後に残します.
         ブロック切抜(Alt+Del,Alt+d),ブロック削除移動(Alt+m)は,
         行モードの時は行削除,ブロックモードの時は切り詰めになります.
         Windowsと異なり領域指定後のDel/BackSpceでは領域削除できません
         Alt+Delを使用してください。
        -複写/削除されたブロック/行はクリップボードに保存され,
         何度でも複写につかえます.
         またエディターの終了/開始をまたがっても連続複写が可能です.
         クリップボードへは複写/削除(移動)する時点の状態がに保存されます。
         クリップボードへ保存した後編集/表示画面を終了し,ほかのファイルに
         複写する場合は BLK保存(Alt+F9)を使用してクリップボードを
         更新した後に複写/削除(移動)してください。
         BLK保存は複写/削除(移動)するまでは連続して実行できます。
        -行挿入複写(Alt+i)は 行番号欄非表示の時ファイルを行挿入複写する
         時にも使います.COPy/MOVe コマンドを入力し実行キーにより
         宛先指定を要求するメッセージを表示する.この状態で挿入宛先行に
         カーソルを移動し行挿入複写(Alt+i)により宛先行の後に行挿入複写
         されます.
        -行マーク開始/終了(Alt+h)は行番号欄非表示の時
         編集行の一部の複写からファイルを作成/更新する時にも使います.
         CREate/REPlace コマンドを入力し実行キーにより複写元指定を要求
         するメッセージを表示する.この状態で行マーク開始/終了を使って
         範囲を指定すると行マーク終了となったときに指定の範囲の行から
         ファイルに出力されます.
        -参照.[表３] カット & ペーストの機能による代替のオペレーション.
                                                                      ||~v124R~
        -マウスによるCut&Pasteはシステムのクリップボードを使用するので複写内容はすぐ有効になるが||~v124R~
         Function keyによるCut&Pasteはセッション終了までクリップボードを外部ファイルに出力しないので||~v124R~
         コンソール版xeの２セッション間ではその都度入出力する第二クリップボードを利用する||~v124R~
         CUT/PASteコマンドを使用してください。                        ||~v124R~

#ifdef WXEXXE
   . ドラッグ & ドロップ について.

        マウスを使用してxeへのドラッグイン,xeからのドラッグアウトができます。
        ドラッグアウトはディレクトリーリスト画面から、                ||~v128R~
        ドラッグイン操作は"複写"（ディレクトリーリスト画面の場合）か  ||~v128I~
      　"編集"で開く（ディレクトリーリスト画面以外の場合)ことになります。||~v128I~
        画面分割してxe内でドラッグイン/アウトもできます。
        リモートファイルもサポート

        カット＆ペーストを使用したドラッグ＆ドロップもできます。
        カット＆ペーストの場合ペースト時にPasteRepで同じファイル名が
        あるとき確認なしで上書きをするを選択することができます。
        複写元をＣｕｔで選んだ場合でも元ファイルの削除は行いません。

        マウス操作についてはxewxej.txt を参照。                       ||~v124R~
#endif

   .簡易表計算。
      TCコマンドで時刻データから差分を計算して経過時間の合計、平均などを
      計算することができます。
      差分、合計のほかに2つの表の四則演算をサポートします。
      合計ではキーブレークか行数による小計を取ることもできます。
      桁整列機能によりvmstat(UNIXコマンド)の出力のように桁ずれした
      データも処理可能。
      使用例は次の項のデータ編集の例を参照

   .Log解析のための編集の例。

    以下はJobLogからJOBの平均経過時間を求める例です。
      この他にもデータ編集用に有力な次のようなコマンド/オプションがあります
      Find -j :見つかった行の前後の行を連結。
               "&"(２つの文字列をAND探索)との組み合わせで探索行の間を連結。
      Find -L :見つかった行に行コマンドを設定。
               カーソル移動が不要なのでexeコマンドファイル内での使用に
               有用。
      F *=Mn all:２つのファイルをキーマッチング。
      REP/CRE/APP x/nx:非表示あるいは表示行のみからファイルを(追加)作成。
      SPLit strdelm:行を指定の文字列の箇所で切断。
      JOIn x/nx:非表示あるいは表示行１行に連結する。
      TC FMT  :フィールドの桁位置を整列してCut&Pasteを可能にする。
               大きすぎるファイルには xfmt ユーティリティーを
               使用してください。
      TC ~    :存続カウント計算。EVENT開始/終了時間から各レコードの発生時刻の
               EVENTの存在件数をカウントする。例えばTCP/IPトレースのSYN/FIN
               レコードを整形して一行にし、並行セッション数を調査するなど。
               大きすぎるファイルには xfmt/xmj ユーティリティーを
               使用してください。(例えばxfmtで必要な行、フィールドを抜き出し
               ファイルサイズを小さくする。xmjで関連行を１行に連結する)
      EXE     :コマンドをファイルから実行。
               同じ作業を複数のファイルに実行するときに有用です。
               EXEコマンド用のファイルの編集には::clを利用することもできます。
               (コマンドはオプションで::clにロギングすることができます。)

(1) "d" 行コマンドでヘッダー行等不用行を削除

dd  |  5722SS1 V5R2M0 020719                                 Activity Log
dd  | MSGID    SEV MSG TYPE
0003| CPF1124 Info       JOB 956017 18:25:14 started 
0004|                  956017                   03/08/28 18:25:14.265840
0005| CPF1164 Comp       18:25:14 03/08/28 JOB 956017 Ended. rc=0. 
0006|                  956017                   03/08/28 18:25:14.555056
0007| CPF1124 Info       JOB 956018 18:25:24 started 
0008|                  956018                   03/08/28 18:25:24.576336
0009| CPF1124 Info       JOB 956019 18:25:34 started 
0010|                  956019                   03/08/28 18:25:34.886520
0011| CPF1164 Comp       18:25:24 03/08/28 JOB 956018 Ended. rc=0. 
0012|                  956018                   03/08/28 18:25:24.865520
0013| CPF1164 Comp       18:25:35 03/08/28 JOB 956019 Ended. rc=0. 
0014|                  956019                   03/08/28 18:25:35.195192
0015| CPF1124 Info       JOB 956020 18:25:40 started 
0016|                  956020                   03/08/28 18:25:40.826792
0017| CPI9803 Info       JOB 956020 assigned.
0018|                  956020                   03/08/28 18:25:41.225128
0019| CPF1164 Comp       18:25:41 03/08/28 JOB 956020 Ended. rc=0. 
0020|                  956020                   03/08/28 18:25:41.794896
0021| CPF1124 Info       JOB 956021 18:25:41 started 
0022|                  956021                   03/08/28 18:25:41.836736
0023| CPI9803 Info       JOB 956021 assigned.
0024|                  956021                   03/08/28 18:25:42.236168
0025| CPF1164 Comp       18:25:43 03/08/28 JOB 956021 Ended. rc=0. 
0026|                  956021                   03/08/28 18:25:43.195912
0027| CPF1124 Info       JOB 956022 18:25:43 started 
0028|                  956022                   03/08/28 18:25:43.245872
0029| CPI9803 Info       JOB 956022 assigned.
0030|                  956022                   03/08/28 18:25:43.677712

  |
  |
  v

0003| CPF1124 Info       JOB 956017 18:25:14 started 
0004|                  956017                   03/08/28 18:25:14.265840
0005| CPF1164 Comp       18:25:14 03/08/28 JOB 956017 Ended. rc=0. 
0006|                  956017                   03/08/28 18:25:14.555056
0007| CPF1124 Info       JOB 956018 18:25:24 started 
0008|                  956018                   03/08/28 18:25:24.576336
0009| CPF1124 Info       JOB 956019 18:25:34 started 
0010|                  956019                   03/08/28 18:25:34.886520
0011| CPF1164 Comp       18:25:24 03/08/28 JOB 956018 Ended. rc=0. 
0012|                  956018                   03/08/28 18:25:24.865520
0013| CPF1164 Comp       18:25:35 03/08/28 JOB 956019 Ended. rc=0. 
0014|                  956019                   03/08/28 18:25:35.195192
0015| CPF1124 Info       JOB 956020 18:25:40 started 
0016|                  956020                   03/08/28 18:25:40.826792
0017| CPI9803 Info       JOB 956020 assigned.
0018|                  956020                   03/08/28 18:25:41.225128
0019| CPF1164 Comp       18:25:41 03/08/28 JOB 956020 Ended. rc=0. 
0020|                  956020                   03/08/28 18:25:41.794896
0021| CPF1124 Info       JOB 956021 18:25:41 started 
0022|                  956021                   03/08/28 18:25:41.836736
0023| CPI9803 Info       JOB 956021 assigned.
0024|                  956021                   03/08/28 18:25:42.236168
0025| CPF1164 Comp       18:25:43 03/08/28 JOB 956021 Ended. rc=0. 
0026|                  956021                   03/08/28 18:25:43.195912
0027| CPF1124 Info       JOB 956022 18:25:43 started 
0028|                  956022                   03/08/28 18:25:43.245872
0029| CPI9803 Info       JOB 956022 assigned.
0030|                  956022                   03/08/28 18:25:43.677712

(2) "j"行コマンドで複数行にまたがるレコードを一行に連結。
     3行１レコードの時は jj3--jj とする。  

     (レコードタイプによって行数が異なるときはレコードタイプごとに抜き出して
     連結する。レコードの抜き出しは "x all" で 全行非表示にした後,
     例えば５行１レコードなら "i CP1164 -a4" とする。この意味はレコードID
     をもつ行の後4行を表示するである。この後 "del x all" で該当レコードのみを
     残し "jj4--jj"で一行にする。これを１つのファイル"app"コマンドで累積する。
     それを各レコードタイプで繰り返す。)

jj  | CPF1124 Info       JOB 956017 18:25:14 started 
0004|                  956017                   03/08/28 18:25:14.265840
0005| CPF1164 Comp       18:25:14 03/08/28 JOB 956017 Ended. rc=0. 
0006|                  956017                   03/08/28 18:25:14.555056
0007| CPF1124 Info       JOB 956018 18:25:24 started 
0008|                  956018                   03/08/28 18:25:24.576336
0009| CPF1124 Info       JOB 956019 18:25:34 started 
0010|                  956019                   03/08/28 18:25:34.886520
0011| CPF1164 Comp       18:25:24 03/08/28 JOB 956018 Ended. rc=0. 
0012|                  956018                   03/08/28 18:25:24.865520
0013| CPF1164 Comp       18:25:35 03/08/28 JOB 956019 Ended. rc=0. 
0014|                  956019                   03/08/28 18:25:35.195192
0015| CPF1124 Info       JOB 956020 18:25:40 started 
0016|                  956020                   03/08/28 18:25:40.826792
0017| CPI9803 Info       JOB 956020 assigned.
0018|                  956020                   03/08/28 18:25:41.225128
0019| CPF1164 Comp       18:25:41 03/08/28 JOB 956020 Ended. rc=0. 
0020|                  956020                   03/08/28 18:25:41.794896
0021| CPF1124 Info       JOB 956021 18:25:41 started 
0022|                  956021                   03/08/28 18:25:41.836736
0023| CPI9803 Info       JOB 956021 assigned.
0024|                  956021                   03/08/28 18:25:42.236168
0025| CPF1164 Comp       18:25:43 03/08/28 JOB 956021 Ended. rc=0. 
0026|                  956021                   03/08/28 18:25:43.195912
0027| CPF1124 Info       JOB 956022 18:25:43 started 
0028|                  956022                   03/08/28 18:25:43.245872
0029| CPI9803 Info       JOB 956022 assigned.
jj  |                  956022                   03/08/28 18:25:43.677712

  |
  |  (頁幅の関係で間のカラムは省略）
  v

0003| CPF1124 Info       JOB 956017 18:25:14 started        ... 18:25:14.265840
0005| CPF1164 Comp       18:25:14 03/08/28 JOB 956017 Ended....      03/08/28 18:25:14.555056
0007| CPF1124 Info       JOB 956018 18:25:24 started        ... 18:25:24.576336
0009| CPF1124 Info       JOB 956019 18:25:34 started        ... 18:25:34.886520
0011| CPF1164 Comp       18:25:24 03/08/28 JOB 956018 Ended....      03/08/28 18:25:24.865520
0013| CPF1164 Comp       18:25:35 03/08/28 JOB 956019 Ended....      03/08/28 18:25:35.195192
0015| CPF1124 Info       JOB 956020 18:25:40 started        ... 18:25:40.826792
0017| CPI9803 Info       JOB 956020 assigned.               ...1.225128
0019| CPF1164 Comp       18:25:41 03/08/28 JOB 956020 Ended....      03/08/28 18:25:41.794896
0021| CPF1124 Info       JOB 956021 18:25:41 started        ... 18:25:41.836736
0023| CPI9803 Info       JOB 956021 assigned.               ...2.236168
0025| CPF1164 Comp       18:25:43 03/08/28 JOB 956021 Ended....      03/08/28 18:25:43.195912
0027| CPF1124 Info       JOB 956022 18:25:43 started        ... 18:25:43.245872
0029| CPI9803 Info       JOB 956022 assigned.               ...3.677712

(3) TCコマンド、SORTコマンドでカラム指定パラメータがあるので Shift F11 で
    桁ゲージを表示しておく。

  |
  |  (頁幅の関係で間のカラムは省略）
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| CPF1124 Info       JOB 956017 18:25:14 started        ... 18:25:14.265840
0005| CPF1164 Comp       18:25:14 03/08/28 JOB 956017 Ended....      03/08/28 18:25:14.555056
0007| CPF1124 Info       JOB 956018 18:25:24 started        ... 18:25:24.576336
0009| CPF1124 Info       JOB 956019 18:25:34 started        ... 18:25:34.886520
0011| CPF1164 Comp       18:25:24 03/08/28 JOB 956018 Ended....      03/08/28 18:25:24.865520
0013| CPF1164 Comp       18:25:35 03/08/28 JOB 956019 Ended....      03/08/28 18:25:35.195192
0015| CPF1124 Info       JOB 956020 18:25:40 started        ... 18:25:40.826792
0017| CPI9803 Info       JOB 956020 assigned.               ...1.225128
0019| CPF1164 Comp       18:25:41 03/08/28 JOB 956020 Ended....      03/08/28 18:25:41.794896
0021| CPF1124 Info       JOB 956021 18:25:41 started        ... 18:25:41.836736
0023| CPI9803 Info       JOB 956021 assigned.               ...2.236168
0025| CPF1164 Comp       18:25:43 03/08/28 JOB 956021 Ended....      03/08/28 18:25:43.195912
0027| CPF1124 Info       JOB 956022 18:25:43 started        ... 18:25:43.245872
0029| CPI9803 Info       JOB 956022 assigned.               ...3.677712

(4) 不用行を削除する為に不用行を非表示にする

    コマンド入力行===>x COI9803 all

  |
  |  (頁幅の関係で間のカラムは省略）
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| CPF1124 Info       JOB 956017 18:25:14 started        ... 18:25:14.265840
0005| CPF1164 Comp       18:25:14 03/08/28 JOB 956017 Ended....      03/08/28 18:25:14.555056
0007| CPF1124 Info       JOB 956018 18:25:24 started        ... 18:25:24.576336
0009| CPF1124 Info       JOB 956019 18:25:34 started        ... 18:25:34.886520
0011| CPF1164 Comp       18:25:24 03/08/28 JOB 956018 Ended....      03/08/28 18:25:24.865520
0013| CPF1164 Comp       18:25:35 03/08/28 JOB 956019 Ended....      03/08/28 18:25:35.195192
0015| CPF1124 Info       JOB 956020 18:25:40 started        ... 18:25:40.826792
-      1 line excluded ----------------------------------------------------------------------
0019| CPF1164 Comp       18:25:41 03/08/28 JOB 956020 Ended....      03/08/28 18:25:41.794896
0021| CPF1124 Info       JOB 956021 18:25:41 started        ... 18:25:41.836736
-      1 line excluded ----------------------------------------------------------------------
0025| CPF1164 Comp       18:25:43 03/08/28 JOB 956021 Ended....      03/08/28 18:25:43.195912
0027| CPF1124 Info       JOB 956022 18:25:43 started        ... 18:25:43.245872
-      1 line excluded ----------------------------------------------------------------------

(5) 不用行を削除する。

    コマンド入力行===>del x all

  |
  |  (頁幅の関係で間のカラムは省略）
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| CPF1124 Info       JOB 956017 18:25:14 started        ... 18:25:14.265840
0005| CPF1164 Comp       18:25:14 03/08/28 JOB 956017 Ended....      03/08/28 18:25:14.555056
0007| CPF1124 Info       JOB 956018 18:25:24 started        ... 18:25:24.576336
0009| CPF1124 Info       JOB 956019 18:25:34 started        ... 18:25:34.886520
0011| CPF1164 Comp       18:25:24 03/08/28 JOB 956018 Ended....      03/08/28 18:25:24.865520
0013| CPF1164 Comp       18:25:35 03/08/28 JOB 956019 Ended....      03/08/28 18:25:35.195192
0015| CPF1124 Info       JOB 956020 18:25:40 started        ... 18:25:40.826792
0019| CPF1164 Comp       18:25:41 03/08/28 JOB 956020 Ended....      03/08/28 18:25:41.794896
0021| CPF1124 Info       JOB 956021 18:25:41 started        ... 18:25:41.836736
0025| CPF1164 Comp       18:25:43 03/08/28 JOB 956021 Ended....      03/08/28 18:25:43.195912
0027| CPF1124 Info       JOB 956022 18:25:43 started        ... 18:25:43.245872

(6) レコードID、この場合はMsgIDでSORT。
    レコード毎にFormatが異なり、それぞれ毎に Cut & Paste で整形するためにSORTする

    コマンド入力行===>sort 2-8

  |
  |  (頁幅の関係で間のカラムは省略）
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| CPF1124 Info       JOB 956017 18:25:14 started        ... 18:25:14.265840
0005| CPF1124 Info       JOB 956018 18:25:24 started        ... 18:25:24.576336
0006| CPF1124 Info       JOB 956019 18:25:34 started        ... 18:25:34.886520
0009| CPF1124 Info       JOB 956020 18:25:40 started        ... 18:25:40.826792
0011| CPF1124 Info       JOB 956021 18:25:41 started        ... 18:25:41.836736
0013| CPF1124 Info       JOB 956022 18:25:43 started        ... 18:25:43.245872
0015| CPF1164 Comp       18:25:14 03/08/28 JOB 956017 Ended....      03/08/28 18:25:14.555056
0019| CPF1164 Comp       18:25:24 03/08/28 JOB 956018 Ended....      03/08/28 18:25:24.865520
0021| CPF1164 Comp       18:25:35 03/08/28 JOB 956019 Ended....      03/08/28 18:25:35.195192
0025| CPF1164 Comp       18:25:41 03/08/28 JOB 956020 Ended....      03/08/28 18:25:41.794896
0027| CPF1164 Comp       18:25:43 03/08/28 JOB 956021 Ended....      03/08/28 18:25:43.195912

(7) JOB番号でSORTする為に整形してJOB番号を同じカラムにする。

    整形には Cut & Pasteを使用。行数が多いときは間の行を "x" 行コマンドで
    非表示にし全体が見える形にすると操作がしやすい。
    あるいは "(" などのシフト行コマンドを使用。
    シフト行コマンドはカーソルをファイル内容欄に置けばそのカラムの
    左ないし右側にのみ作用させることが出来る。

  |
  |
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| CPF1124 Info       JOB 956017  started  18:25:14.265840
0005| CPF1124 Info       JOB 956018  started  18:25:24.576336
0007| CPF1124 Info       JOB 956019  started  18:25:34.886520
0009| CPF1124 Info       JOB 956020  started  18:25:40.826792
0011| CPF1124 Info       JOB 956021  started  18:25:41.836736
0013| CPF1124 Info       JOB 956022  started  18:25:43.245872
0015| CPF1164 Comp       JOB 956017 Ended.    18:25:14.555056
0019| CPF1164 Comp       JOB 956018 Ended.    18:25:24.865520
0021| CPF1164 Comp       JOB 956019 Ended.    18:25:35.195192
0025| CPF1164 Comp       JOB 956020 Ended.    18:25:41.794896
0027| CPF1164 Comp       JOB 956021 Ended.    18:25:43.195912

(8) JOBごとにレコードを集める為にJOB番号でSORT

    コマンド入力行===>sort 25-30

  |
  |
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| CPF1124 Info       JOB 956017  started  18:25:14.265840
0005| CPF1164 Comp       JOB 956017 Ended.    18:25:14.555056
0007| CPF1124 Info       JOB 956018  started  18:25:24.576336
0009| CPF1164 Comp       JOB 956018 Ended.    18:25:24.865520
0011| CPF1124 Info       JOB 956019  started  18:25:34.886520
0013| CPF1164 Comp       JOB 956019 Ended.    18:25:35.195192
0015| CPF1124 Info       JOB 956020  started  18:25:40.826792
0019| CPF1164 Comp       JOB 956020 Ended.    18:25:41.794896
0021| CPF1124 Info       JOB 956021  started  18:25:41.836736
0025| CPF1164 Comp       JOB 956021 Ended.    18:25:43.195912
0027| CPF1124 Info       JOB 956022  started  18:25:43.245872

(9) "j"行コマンドで同じJOBのレコードを一行に連結
    ペアになってないレコードは"d"行コマンドで削除。

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
jj  | CPF1124 Info       JOB 956017  started  18:25:14.265840
0005| CPF1164 Comp       JOB 956017 Ended.    18:25:14.555056
0007| CPF1124 Info       JOB 956018  started  18:25:24.576336
0009| CPF1164 Comp       JOB 956018 Ended.    18:25:24.865520
0011| CPF1124 Info       JOB 956019  started  18:25:34.886520
0013| CPF1164 Comp       JOB 956019 Ended.    18:25:35.195192
0015| CPF1124 Info       JOB 956020  started  18:25:40.826792
0019| CPF1164 Comp       JOB 956020 Ended.    18:25:41.794896
0021| CPF1124 Info       JOB 956021  started  18:25:41.836736
jj  | CPF1164 Comp       JOB 956021 Ended.    18:25:43.195912
d   | CPF1124 Info       JOB 956022  started  18:25:43.245872

  |
  |
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| CPF1124 Info       JOB 956017  started  18:25:14.265840 CPF1164 Comp  JOB 956017 Ended. 18:25:14.555056
0007| CPF1124 Info       JOB 956018  started  18:25:24.576336 CPF1164 Comp  JOB 956018 Ended. 18:25:24.865520
0011| CPF1124 Info       JOB 956019  started  18:25:34.886520 CPF1164 Comp  JOB 956019 Ended. 18:25:35.195192
0015| CPF1124 Info       JOB 956020  started  18:25:40.826792 CPF1164 Comp  JOB 956020 Ended. 18:25:41.794896
0021| CPF1124 Info       JOB 956021  started  18:25:41.836736 CPF1164 Comp  JOB 956021 Ended. 18:25:43.195912

(10) TC コマンドのための整形
    Cut & Paste で 必要なカラムのみを残す。

  |
  |
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| JOB 956017  started  18:25:14.265840 Ended.    18:25:14.555056
0007| JOB 956018  started  18:25:24.576336 Ended.    18:25:24.865520
0011| JOB 956019  started  18:25:34.886520 Ended.    18:25:35.195192
0015| JOB 956020  started  18:25:40.826792 Ended.    18:25:41.794896
0021| JOB 956021  started  18:25:41.836736 Ended.    18:25:43.195912

(11) TCコマンドでJOBの存続時間を計算。

    コマンド入力行===>tc 49-63-=23-30

  |
  |
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| JOB 956017  started  18:25:14.265840 Ended.    00:00:00.555056
0007| JOB 956018  started  18:25:24.576336 Ended.    00:00:00.865520
0011| JOB 956019  started  18:25:34.886520 Ended.    00:00:01.195192
0015| JOB 956020  started  18:25:40.826792 Ended.    00:00:01.794896
0021| JOB 956021  started  18:25:41.836736 Ended.    00:00:02.195912

(12) JOB存続時間の合計、件数、最大、最小、平均を計算

    コマンド入力行===>tc 49-63+ amm aft

  |
  |
  v

col |....+....1....+....2....+....3....+....4....+....5....+....6....+....7..  
0003| JOB 956017  started  18:25:14.265840 Ended.    00:00:00.555056
0007| JOB 956018  started  18:25:24.576336 Ended.    00:00:00.865520
0011| JOB 956019  started  18:25:34.886520 Ended.    00:00:01.195192
0015| JOB 956020  started  18:25:40.826792 Ended.    00:00:01.794896
0021| JOB 956021  started  18:25:41.836736 Ended.    00:00:02.195912
0022|=  =00:00:06.606576; /5=00:00:01.321315; (00:00:00.555056<<00:00:02.195912);

   .Android版                                                         ||~126BR~
     Fnキーなどの拡張キー入力が出来るように独自キーボードダイアログを備えていますが||~126BR~
     ハードウェアーキーを備えた端末の方がストレスが少ないでしょう     ||~126BR~
     詳細は xearmj.txt を参照                                         ||~126BR~
                                                                      ||~126FR~
   .Windows7 64ビット.                                                ||~126FR~
      xe は VC6でコンパイルした 32 bit アプリです.                    ||~126FR~
      Windows7(64ビット) は 32ビットアプリが64ビット用のフォルダーへのアクセスを32ビット用のフォルダーにリダイレクトします。||~126FR~
      例えば %windir%\system32 にアクセスしようとすると %windir%\SysWOW64 にリダイレクトされます||~126FR~
      そのため xe が表示する c:\windows\system32\drivers のディレクトリーリストは||~126FR~
      c:\windows\SysWOW64\drivers を表示していることになります。      ||~126FR~
                                                                      ||~126BR~
#if defined(W32)||defined(UNX)                                        ||~127AR~
                                                                      ||~127AR~
   .シンボリックリンク(ジャンクション)                                ||~127AR~
      xe のシンボリックリンク(Windowsではジャンクション、マウントポイントも)の扱いは以下のようになります||~127AR~
       -ディレクトリーリスト上で "@" 付で表示、S+F11 でリンク先を表示 ||~127AR~
         リンクエラーはリンク先名の前に '?' を表示                    ||~127AR~
         エラーとはリンク先が存在しない場合とLinuxでリンクがループしている場合です||~127AR~
         Windowsではリンクループは /LTオプション(リンク先複写)のときにのみチェックされます||~127AR~
       -Copy コマンドは省略値ではリンクのみを複写、                   ||~127AR~
          (Windows では リンクのタイムスタンプが維持されますが        ||~127AR~
           Linuxではlutimesが使用可能なカーネル2.6.22以降になります)  ||~127AI~
          /LT オプション指定の時リンク先を複写                        ||~127AR~
       -Move コマンドには /LT オプションはなくリンク先は移動いません  ||~127AR~
       -Delete コマンドは リンクのみを削除、リンク先には影響しません  ||~127AR~
                                                                      ||~127AR~
      参考：Nativeコマンドでは以下のようになります                    ||~127AR~
          Windows では NTFS 上で シンボリックリンク/ジャンクション/マウントポイントを設定できます.||~127AR~
            シンボリックリンクの作成は管理者権限が必要(コマンドプロンプトを管理者として実行する)||~127AR~
                                                                      ||~127AR~
          Windows:copy コマンド:リンク先を複写                        ||~127AR~
                  xcopy コマンド:/B を指定しないとリンクを複写        ||~127AR~
                  delete コマンド:                                    ||~127AR~
                    リンク先がフォルダーの時フォルダー内を削除        ||~127AR~
                    リンク先がファイルのときリンクを削除              ||~127AR~
                    ジャンクションに対してはエラー                    ||~127AR~
                  rmdir コマンド                                      ||~127AR~
                    リンク先がフォルダーの時リンクを削除              ||~127AR~
                    リンク先がファイルのときエラー                    ||~127AR~
                    ジャンクションに対してリンクを削除                ||~127AR~
                  explorer                                            ||~127AR~
                    リンクを削除                                      ||~127AR~
          Linux:cp コマンド:                                          ||~127AR~
                    cp -s:リンク先がファイルのときリンクを複写        ||~127AR~
                    cp -d:リンク先がディレクトリーのときリンクを複写  ||~127AR~
                rm コマンド:                                          ||~127AR~
                    リンクのみを削除                                  ||~127AR~
                                                                      ||~127AR~
#endif                                                                ||~127AR~
                                                                      ||~127AR~
********************
  (E) 用語         *
********************
   - ワークディレクトリー
     パラメータファイル(.INI)を入れておくディレクトリーですが
     ワークファイルもここに作成されます.
     編集コマンドで経路名に (::) を指定するとワークディレクトリーと
     みなします.(例) ::xyz   --->ワークディレクトリー内のファイル xyz
     特に ::cb は カット & ペースト用のワークファイルで編集画面で編集後に
     その内容でペーストできます.
     ::so には OS Native コマンドでの標準出力と標準エラ−出力が書き出されます.
     REPl ::tmp など一時的にファイルの一部をワークディレクトリーに
     書き込み COPy ::tmp と読み込めばカット & ペーストがわりにつかえます．
     またAPPendコマンドなら数個所の複写元からペースト行が作成できます.
#ifdef UNX
     ワークディレクトリー名は環境変数（export xe=xxx) かあるいは
     コマンドラインパラメータ(-wxxx) で指定します。
     環境変数、-w パラメータのどちらも指定されない場合、
     ~/ (HOME) に xe_wdnnnnn(nnnnn:ユーザーID)が自動作成されます。
#else
     ワークディレクトリー名は環境変数（set xe=xxx) かあるいは
     コマンドラインパラメータ(/w:xxx) で指定します
     どちらも指定がなければ c:\xe_wdが作成、使用されます。
#endif
    
   - CID (Change ID:変更タグ).                               
     ファイルの修正行に変更タグがセットされます.                      
     変更タグのタイプはファイル拡張子により決まります,省略値は        
             c   : .c/.h/.cpp/.hpp/.java  形式は //~ymddr~            ||~v124R~
             asm : .asm                   形式は ;;~ymddr~            ||~v124R~
             doc : .doc/.me/.txt          形式は ||~ymddr~            ||~v124R~
                                                                      
                y:西暦の下1桁, m:月(10,11,12月はA,B,C), dd:日         
                r:R(修正行), I(挿入行), M(移動行)                     
                また最新の変更行のタグの 3 文字目の (~) は (+) になる.
             (注) c タイプの場合 // をコメントとみなすためにコンパイル
                  オプションが必要な場合があります                    
     このタイプ以外のファイルは CID コマンドで上のいずれかのタイプを  
     指定するか、 INI ファイルで 変更タグIDと拡張子の組み合わせのリストを追加指定する.||~v29tR~
     CIDプレフィックスとしてユニコード1文字をしてすることも可能。     ||~v29tR~
     ただしその拡張子のファイルはUTF8ファイルとして開いてください。   ||~v29tR~
     日付以外を設定する場合は次の CID Header を使用してください       ||~v29tR~
     例) (ini ファイルの指定 )                                        ||~v29tR~
         Change_ID_Type_C  = 68 = "//" = C,H,CPP,HPP,JAVA             ||~v29tR~
         Change_ID_Type_ASM= 68 = ";;" = ASM                          ||~v29tR~
         Change_ID_Type_DOC= 71 = "||" = DOC,ME                       ||~v29tR~
         Change_ID_Type_4  = 60 = u-235d= APL                         ||~v29tR~
     CID コマンドの CID-type オプションは最初の拡張子も指定できます   ||~v29tR~
     "cid on //" でも "cid on C" でもOK。                             ||~v29TR~
     あるいは,ファイルの 1 行目に特殊な行(CID Header)を書き込むことにより
     そのファイルだけに適用される任意のCID形式を設定できます.
     CID Header 行は "CID TOP","CID TOPA" コマンドでサンプル行を挿入
     することもできます。その形式は
     "CID:xx+XXXXR~yy:#nnn option=(option1,option2,...) update#=nnnnn;"
     例)   //CID://+vbi3R~:#71            update#=  356;              ||~v29tR~

         CID: は CID 設定要求 ID の省略値,
              INI ファイルで指定変更できます.
              (Fixed_CID_prefix 指定,最大 15 バイト)
         xx   は //,;;,|| などファイル拡張子により決まる CID の最初の
              2 文字と同じものか 或は任意の2文字を指定する.DBCSは不可.
              UTF8 ファイルではユニコード1文字指定も可能              ||~v29tR~
              例えば APL 言語のコメントは u-235d(UTF8:e28d9d)なのでHeader行は次のようになる||~v29tR~
              "⍝  CID:⍝+DATER~:   update#=   1"                     ||~v29tR~
              表示上はスペースが挟まれていることもあるがレコード上はスーペースは挟まないこと。||~v29tR~
              １カラム表示のユニコードの場合は                        ||~v29tR~
			  "//*CID:À+v001R~:#71                          update#=   29;"||~v29tR~
              ユニコード使用の場合、言語環境によっては表示幅が異なるのでシェアーしている場合は注意が必要||~v29TI~
              例えばWindowsで2桁表示、Linuxで1桁表示の場合Windowsで更新行に付与されたCIDは||~v29TI~
              LinuxではCIDと認識されません。従ってLinuxでの"cid clear"コマンドは0行を返すことになります||~v29TI~
         XXXX は任意の 4 文字の CID. 例えば V1.5 などと指定する.
              ASCII文字のみ可. DATE と指定すると ymdd(年月日)を設定します.||~v29tR~
              NONE と指定するとCIDは設定されません,CIDは設定しないが
              option=を設定したい時に使用します.
         yy   は 0 から 2 バイトまでの任意の後置文字. ASCII文字のみ可。||~v29tR~
              省略可能です。
         nnn  は 1 から 256 までのCID設定桁位置を指定する
              このオプションを指定しない時は事前定義のCIDタイプでは
              INIファイル指定の桁位置を採用それ以外の時は 1 となる.
         その他(+,R,~,:,#)はこの位置にこのように指定する。
         但し(~)は省略できます.この場合 8桁 CID が付与されます.
         COBOLでCOL73-80にCIDを設定する場合8桁CIDを使用します。

         option=(...)の指定は任意です.指定できるパラメータは次の通り.
           Fnn     :レコード長（固定）の指定.                         
           Mnn     :マージン指定.
                    nn:左右のマージン境界(左マージンの右端の桁位置).
           N       :行番号付きファイルの指定.マージン指定が必要
           COB     :COBOL ファイル指定.マージン指定が必要
           COBK    :カラム1−6をコメントとするCOBOL ファイル指定.
                    N指定が無ければ、行長=80の制約も無い。
           Px      :右マージンの入力保護オプション.
                    x : 0:非保護,1:保護, 省略値は P1.
           tabclear:保存時にタブをスペースに置換する。
         update#=の指定は任意です.指定があるとこのワードの後に
         保存の度に１アップするファイルの更新回数を自動設定します。
   - マージン.
     .CIDヘッダー行でoption=(Mnn)を指定することによりマージン付き
      となります.
      (1-nn桁までを左マージン,(nn+1)桁以降を右マージンとします、
      左マージンをマージン内右マージンをマージン外ということもあります）
     .EditコマンドのFn[-m]オプション指定でもマージン付ファイルとして開きます
      Fで固定長ファイル、nはレコード長、mがマージン位置です。         
     .Boundsコマンドも特定のコマンド用のマージンを設定します。        
     .左マージンと右マージンとは別の表示属性で表示.
     .CID位置は左マージンにも右マージンにも指定可能.
      指定が左マージン内の場合CID位置にデータがある時CIDは付与しない.
      マージン内あるいはマージン無しファイルではデータがる場合はCIDは
      後ろにずらし付与される.
      CID CLEAR/SHIFTコマンドのCID探索も範囲が限定されます.
      即ちCID位置が左マージンなら左マージン内のCIDのみを変更します.
      CID位置を左マージンにする時左マージン内の右端にする必要は
      有りません.1桁右端を空けて継続行指定に使用することができます.
     .右マージン保護.
      保護オプションはCIDヘッダー行でoption=(Px)を指定します.
      ここで x:0=非保護,1=保護.
      (オプションは複数有る時はoption=(M72,P0)の様に指定します)
     .干渉.
      左マージンでの挿入/削除は右マージンへは波及しませんが桁伸長により
      左マージンからスペース/タブ以外があふれる時は操作は拒否されます.
     .Find/Changeコマンドで探索桁範囲指定をサポート.
      その特殊ケースとしてマージン指定をサポート.

   - SPF(行番号付き80桁固定長)ファイル.
     .マージン指定ファイルの特殊ケースとして行末(右マージン)に行番号を
      保持する全行同じ長さのファイルをサポート.
      CIDヘッダー行でoption=(N)を指定します.
      メインフレームの80桁ファイルをPCでメインテナンスするのに便利です.
      EN/BN/SN コマンドを使えばCIDヘッダーがないファイルを行番号付き
      ファイルとして取り扱えます。
     .8桁行番号はnnnnssuu形式.
      nnnn:行番号 ss:枝番号 uu:更新レベル番号
      全行中の最大更新レベル番号がファイルの更新レベル番号となり
      更新行にはファイルの更新レベル番号+1が保存時にセットされます
      画面左の行番号表示欄はファイルを開く時 7 に設定されnnnnsssで
      表示されます
     .ファイル読み込み時に行番号付きファイルとして正しくない行(行長,
      行番号欄の数字,番号の順序の誤り)がある時はRENumコマンドで
      正しい行番号付きファイルとすることができます.
      (全行一定の長さに切り捨て/スペース追加され連番を振り直します.
      枝番は0に設定)
     .COPY コマンド/行コマンドによるファイルの複写では正しくない行が
      あると右マージンの入力保護は解除されます.
     .VERコマンドでファイル更新レベル番号の表示/変更ができます.
      更新レベルが下げられると各行の更新レベル番号はコマンド入力の
      更新レベル番号を最大(最小は1)とした相対値がセットされます.
      更新レベルが上げた時は更新行のみに新しい更新レベル番号がセット
      されます.
      VERコマンドはUNDO対象となります.
     .タブは保存時にはすべてスペースに置換されます.
     .行番号欄とは別にCIDも左マージンに付与することもできます.
     .COBOLファイルは特殊な行番号付きファイルです。
      COL1-6が行番号でCOL73-80を行番号とするか(option=(n)),
      CID設定にするかはオプションです。
      COL1-6をすべてスペースとするオプションもあります。
      COBOLの時RENUM,NUM CLEAR,インデンテーション、表示開始桁で考慮
      されます。

   -長文.
     .32760 桁(DOS版は999桁)を越える長い行は1行 32760 で複数行分割表示||~v127R~
      されます
     .長文の分割表示行内への行挿入/行複写は長文の一部となります.
     .長文の部分分割表示行複写は複写先でも長文の分割行です.
     .長文を分割するには任意の分割表示行行末で行分割キーを使用する.
     .分割表示行は行番号欄区切り文字で判別できます.
     .CIDは最後の行にのみ付与されます.
     .行連結行コマンド(j)では長文は全体が1行として取り扱われます。
     .分割表示行は SPLit コマンドで複数行に分割できます。
      SPLit コマンドは分離文字を指定してワード境界での行分割もできます。

   -ADS(Alternative DAta Stream)
     .ADSとは、Windows NTFSファイルシステムでサポートされている、
      ファイルに付随する隠しデータで、いくつでも作成できます。
      名前の形式はfile-name:stream で、作成はecho コマンドでもきます。
      ex) echo "text" > abc.ext:stream1  (1桁の元ファイル名は許されない)
      しかしdirなどのDOS窓のコマンドやexplorerでは見えません。
      catコマンドなどlinuxからの移植版では見ることができます。
      ADSを削除するには一旦NTFS以外のボリュームにCopyし
      削除後にCopyBackします。
     .ADSがあるとディレクトリーリスト画面でS+F10で先頭から47バイト表示します。
      Edit/Browseコマンドの/Mdオプションでも表示できます。
      ADSがない場合はファイルの先頭部が表示されます。
     .ツール xads.exe は ADS チェック、読み書きをサポートします。

************************************************************************
(1).キー割り当ての省略値

[表１- R] 編集機能キー割当の省略値/キー順
  xe 上でも "=C" コマンドでみることができます                         ||~v129R~
 .---------.--------------.--------------.--------------.------------.
 |  キー   |     基本     |    シフト    |     前面     |コントロール|
 .---------.--------------.--------------.--------------.------------.
 |Esc      |取消          |              |              |            |
 |Tab      |タブ(前進)    |タブ(後退)    |              |            |
 |Backspace|後退          |行頭削除      |横書/縦書     |            |
 |Enter    |実行+改行     |行分割        |改行          |            |
 |Ins      |挿入/置換     |行挿入        |BLK挿入貼付   | 同左   (*4)|
 |Del      |文字削除      |行削除        |BLK切抜       | 同左   (*4)|
 |Home     |カーソルホーム|              |              | (*4)　     |
 |End      |行末削除      |行頭クリアー  |BLKクリアー   | (*4)       |
 |PgUp     |前ページ      |ファイル先頭行|              | (*4)       |
 |PgDn     |次ページ      |ファイル終端行|              | (*4)       |
 |Up       |上            |1行上表示     |              | (*1) (*4)  |
 |         |              |次の値        |              | (*1)       |
 |         |              |              |F名転送-上    |            | (*6)
 |Down     |下            |1行下表示     |              | (*2) (*4)  |
 |         |              |前の値        |              | (*2)       |
 |         |              |              |F名転送-下    |            | (*6)
 |Left     |左            |行頭          |経路昇        | (*4)       |
 |Right    |右            |行末          |経路降        | (*4)       |
 |F1       |破棄          |修正戻し      |              | (*3)       |
 |         |破棄          |リフレッシュ  |              | (*3)       |
 |F2       |水平画面分割  |垂直画面分割  |　　　　      |            |
 |F3       |戻る          |保存          |              |            |
 |F4       |保存終了      |破棄終了      |              |            |
 |F5       |再探索 (*5)   |反転再探索    |              |            |
 |                            (Shift+)-->|反転-ファイル |反転分割画面|||~v129R~
 |F6       |再探索置換    |反転再探索置換|領域始点/終点 | (*3)       |
 |         |サイズ表示切換|              |              | (*3)       |
 |F7       |前ページ      |前画面        |BLK始点/終点  | 同左       |
 |F8       |次ページ      |次画面        |BLK上書貼付   | 同左       |
 |F9       |分割画面交換  |区画保存終了  |BLK保存       | 同左       |
 |F10      |左ページ      |行繰返し      |              |HEX２段表示 | (*3)
 |         |行コマンド切抜|ファイル説明  |              |            | (*3)
 |F11      |右ページ      |桁定規        |              |HEX入力Mode | (*3)
 |         |行コマンド複写|長いファイル名|              |            | (*3)
 |F12      |前コマンド    |次コマンド    |画面前コマンド|コマンド反復|
 |                            (Shift+)-->|画面次コマンド|コマンド履歴|||~v129R~
 |a        |              |              |短縮キー入力  |            |
 |b        |              |              |BLK始点/終点  |            |
 |c        |              |              |BLK挿入貼付   |            |
 |d        |              |              |BLK切抜       |            |
 |         |              |              |Ｆ名転送-削除 |            | (*6)
 |e        |              |              |BLKクリアー   |            |
 |f        |              |              |先頭1行再表示 |            |
 |g        |              |              |Hex部へ移動   |            |||~v124I~
 |h        |              |              |行マーク始/終 |            |
 |i        |              |              |行挿入複写    |            |
 |         |              |              |Ｆ名転送-挿入 |            | (*6)
 |j        |              |              |行挿入削除移動|            |
 |k        |              |              |行挿入空化移動|            |
 |l        |              |              |末尾1行再表示 |            |
 |m        |              |              |BLK削除移動   |            |
 |n        |              |              |BLK空化移動   |            |
 |o        |              |              |BLK空白上書   |            |
 |p        |              |              |BLK上書貼付   |            |
 |q        |              |              |短縮キー表示  |            |
 |r        |              |              |行繰返し      |            |
 |         |              |              |Ｆ名転送-置換 |            | (*6)
 |s        |              |              |行分割        |            |
 |t        |              |              |行末削除      |            |
 |u        |              |              |UTF SWKBD     |            |||~v124R~
 |v        |              |              |標準貼り付け  |            |
 |w        |              |              |ワードをCB複写|cmd行へ貼付 |||~v124R~
 |x        |              |              |行非表示      |            |
 |y        |              |              |行再表示      |            |
 |z        |              |              |3270ホットキー|            |||~v124R~
 |.        |              |              |括弧探索      |            |
 |,        |              |              |括弧探索-NX   |            |
 |/        |              |              |XMLタグ探索   |            |||~v129R~
 |[        |              |              |前探索-大小無 |前探索大小有|||~v124R~
 |]        |              |              |次探索-大小無 |次探索大小有|||~v124R~
 |:        |              |              |結合文字表示  |　　　　　　|||~v125R~
 |;        |              |              |リガチャー許諾|　　　　　　|||~v125R~
 |1        |              |              |罫線文字 BL   |            |||~v29tR~
 |2        |              |              |罫線文字 BT   |ヌル文字,x00|||~v29tR~
 |3        |              |              |罫線文字 BR   |            |||~v29tR~
 |4        |              |              |罫線文字 LT   |            |||~v29tR~
 |5        |              |              |罫線文字 CX   |            |||~v29tR~
 |6        |              |              |罫線文字 RT   |            |||~v29tR~
 |7        |              |              |罫線文字 TL   |            |||~v29tR~
 |8        |              |              |罫線文字 TT   |            |||~v29tR~
 |9        |              |              |罫線文字 TR   |            |||~v29tR~
 |-        |              |              |罫線文字 HL   |            |||~v29tR~
 |^        |              |              |罫線文字 VL   |            |||~v29tR~
 .---------.--------------.--------------.--------------.------------.
 |10キー   |              |              |              |            |
 |  1      | (End  ) (*4) |              |              |罫線文字 BL |||~v29tR~
 |  2      | (Down ) (*4) |              |              |罫線文字 BT |||~v29tR~
 |  3      | (PgDn ) (*4) |              |              |罫線文字 BR |||~v29tR~
 |  4      | (Left ) (*4) |              |              |罫線文字 LT |||~v29tR~
 |  5      |              |              |              |罫線文字 CX |||~v29tR~
 |  6      | (Right) (*4) |              |              |罫線文字 RT |||~v29tR~
 |  7      | (Home ) (*4) |              |              |罫線文字 TL |||~v29tR~
 |  8      | (Up   ) (*4) |              |              |罫線文字 TT |||~v29tR~
 |  9      | (PgUp ) (*4) |              |              |罫線文字 TR |||~v29tR~
 |  -      |              |              |              |罫線文字 HL |||~v29tR~
 |  +      |              |              |              |罫線文字 VL |||~v29tR~
 |  Enter  |実行+改行     |行分割        |              |            |
 .---------+--------------+--------------+--------------+------------.

    BL:BottomLeftCorner  BT:BottomTee    BR:BottomRightCorner         
    LT:LeftTee           CX:CenterCross  RT:RightTee                  
    TL:TopLeftCorner     TT:TopTee       TR:TopRightCorner            
    HL:HorizontalLine    VL:VirticalLine                              
    日本語環境では Shift-JIS((Windows)/EUC-JP(Linux) の罫線文字をセットします（"=C"の opt0.3 画面で表示)||~v29tR~
    	┗ ┻ ┛┣ ╋ ┫┏  ┳ ┓━ ┃                                ||~v29tR~
    日本語環境以外では CP437に従い以下を出力します                    ||~v29tR~
		0x- C0, C1, D9, C3, C5, B4, DA, C2 BF, C4, B3                 ||~v29tR~
    Linux Console版では　OPTコマンドで "OPT LINECH ON" とすると       ||~v29tR~
    ACSを使用して罫線が表示されます、gxe では "OPT LINECH"は無効です  ||~v29tR~
(*1)Up-arrow
    色設定画面では下段,表示/編集/ディレクトリーリスト画面では上段の機能
(*2)Down-arrow
    色設定画面では下段,表示/編集/ディレクトリーリスト画面では上段の機能
(*3)F1,F6,F10,F11
    ディレクトリーリスト画面では下段,表示/編集画面では上段の機能
(*4)10キーは NumLock してないときは ( )内と同じコードを生成します。
    Ctrl+の時はNumLockと関係なく Ctrl+( )内と同じコードを生成します。
    したがって例えば "Ctrk+Ins" は "Ctrl+10キー0" と同じく 水平罫線と
    なります。
    AIXでは10キーはサポートしてませんがCtrl+( )内のキーが使えます。
(*5)ユーティリティー画面3.12/3.14では画面分割してその行に入力された   
    ワイルドカード/経路のディレクトリー画面を開きます。               
(*6)ユーティリティー画面3.12/3.14にディレクトリー画面からファイル名を 
    転送するのにこれらのキーを使用します。                            

[表１] 編集機能キー割当の省略値
  xe 上でも "=B" コマンドでみることができます                         ||~v129R~
 .-----------------.--------.---------------------------------------.
 |機能             |コマンド|キーの割り当て( * 印は 固定 )          |
 .-----------------.--------.---------------------------------------.
 |実行+改行        |ENT     |10キーEnter(*), Enter  #1(Right Ctrl)  |
 |改行             |        |Alt+Enter              #1(Enter)       |
 |取消             |RES     |Esc(*)                 #7              |
 |挿入/置換        |INS     |Ins(*)                                 |
 |横書/縦書        |CSD     |Alt+Backspace                          |
 |HEX2段表示モード |HEX     |Ctrl+F10                               |
 |HEX入力モード    |XIN     |Ctrl+F11                               |
 |上               |        |Up-arrow(*)            #13             |
 |下               |        |Down-arrow(*)          #13             |
 |左               |        |Left-arrow(*)          #13             |
 |右               |        |Right-arrow(*)         #13             |
 |タブ(前進)       |        |Tab(*)                 #11             |
 |タブ(後退)       |        |Shift+Tab(*)                           |
 |行頭             |        |Shift+Left-arrow                       |
 |行末             |        |Shift+Right-arrow                      |
 |1行上表示        |        |Shift+Up-arrow         #8              |
 |1行下表示        |        |Shift+Down-arrow       #8              |
 |次の値           |        |Shift+Up-arrow         #8              |
 |前の値           |        |Shift+Down-arrow       #8              |
 |カーソル-ホーム  |HOM     |Home                                   |
 |前ページ         |UP      |PgUp(*),F7                             |
 |次ページ         |DOW     |PgDn(*),F8                             |
 |左ページ         |LEF     |F10                                    |
 |右ページ         |RIG     |F11                                    |
 |スクロール量設定 |SCR     |                                       |
 |ファイル先頭行   |TOP     |Shift+PgUp                             |
 |ファイル終端行   |BOT     |Shift+PgDn                             |
 |後退             |        |Backspace(*)                           |
 |文字削除         |        |Del(*)                                 |
 |行削除           |        |Shift+Del                              |
 |行末削除         |        |End,Alt+t                              |
 |行頭削除         |        |Shift+Backspace                        |
 |行頭クリアー     |        |Shift+End                              |
 |行分割           |        |Shift+Enter,Shift+10キーEnter,Alt+s #2 |
 |行挿入           |        |Shift+Ins                              |
 |行繰返し         |        |Shift+F10,Alt+r                        |
 |ブロック始点/終点|        |Alt+F7,Alt+b,Ctrl+F7           #3      |
 |ブロック保存     |        |Alt+F9,Ctrl+F9                 #3      |
 |ワード保存       |        |Alt+w                          #3      |
 |ワードcmd行貼付  |        |Ctl+w                          #3      | ||~v124R~
 |ブロック挿入貼付 |        |Alt+Ins,Alt+c,Ctrl+Ins         #3      | ||~v124R~
 |ブロック上書貼付 |        |Alt+F8,Alt+p,Ctrl+F8           #3      |
 |ブロック空白上書 |        |Alt+o                          #3      |
 |ブロック切抜     |        |Alt+Del,Alt+d,Ctrl+Del         #3      |
 |ブロッククリアー |        |Alt+End,Alt+e                  #3      |
 |ブロック削除移動 |        |Alt+m                          #3      |
 |ブロック空化移動 |        |Alt+n                          #3      |
 |行マーク開始/終了|        |Alt+h                          #3      |
 |行挿入複写       |        |Alt+i                          #3      |
 |行挿入削除移動   |        |Alt+j                          #3      |
 |行挿入空化移動   |        |Alt+k                          #3      |
 |行非表示         |        |Alt+x                                  |
 |行再表示         |        |Alt+y                                  |
 |先頭1行再表示    |        |Alt+f                                  |
 |末尾1行再表示    |        |Alt+l                                  |
 |短縮キー入力     |        |Alt+a                          #12     |
 |短縮キー表示     |        |Alt+q                          #12     |
 |DIRサイズ表示切換|        |F6                                     |
 |DIR長いファイル名|LFN     |Shift+F11                              |
 |DIRファイル説明  |        |Shift+F10                      #14     |
 |DIR行コマンド切抜|        |F10                            #9      |
 |DIR行コマンド複写|        |F11                            #9      |
 |水平画面分割     |HSP     |F2                                     |
 |垂直画面分割     |VSP     |Shift+F2                               |
 |分割画面交換     |SWA (W) |F9                                     |
 |次画面           |NEX (+) |Shift+F8                               |
 |前画面           |PRE (-) |Shift+F7                               |
 |メニュー画面呼出 |=       |                                       |
 |区画保存終了     |EXI     |Shift+F9                               |
 |保存終了         |RET     |F4                                     |
 |破棄終了         |QUI     |Shift+F4                               |
 |戻る             |END     |F3                                     |
 |保存             |SAV (S) |Shift+F3                               |
 |破棄             |CAN     |F1                                     |
 |編集             |EDI (E) |                                       |
 |表示             |BRO (B) |                                       |
 |経路昇           |DPU     |Alt+Left-arrow                 #15     | ||~v124R~
 |経路降           |DPD     |Alt+Right-arrow                #15     | ||~v124R~
 |作成             |CRE     |                                       |
 |置換             |REP     |                                       |
 |ファイル複写     |COP     |                                       |
 |ファイル移動     |MOV     |                                       |
 |行一括削除       |DRO     |                                       |
 |修正戻し         |UND (U) |Shift+F1                               |
 |Undo戻し         |RED     |Ctrl+F2                                | ||~v126R~
 |行位置付け       |LOC (L) |                                       |
 |リガチャーモード |LIG     |A+;                                    | ||~v129R~
 |結合文字表示     |CMB     |A+:                                    | ||~v129R~
 |カーソル移動     |POS     |                                       |
 |文字入力         |KEY     |                                       |
 |探索(大小区別有) |FIN (F) |                       #4              |
 |探索(大小区別無) |IFI (I) |                       #4              |
 |探索&非表示化    |EXC (X) |                       #4              |
 |同(大小区別無)   |IX      |                       #4              |
 |再探索           |        |F5                     #4              |
 |反転再探索       |        |Shift+F5               #4  #5          |
 |探索-分割画面    |        |Ctrl+F5                                | ||~v129R~
 |反転探索-分割画面|        |Shift+Ctrl+F5                          | ||~v129R~
 |探索-このファイル|        |Alt+F5                                 | ||~v129R~
 |反転探索-ファイル|        |Shift+Alt+F5                           | ||~v129R~
 |ワード次探-大小有|FWF     |Ctl+] , Alt+Shift+]                    | ||~v124R~
 |ワード前探-大小有|FWB     |Ctl+[ , Alt+Shift+[                    | ||~v124R~
 |ワード次探-大小無|IWF     |Alt+]                                  | ||~v124R~
 |ワード前探-大小無|IWB     |Alt+[                                  | ||~v124R~
 |置換             |CHA (C) |                       #4              |
 |再探索置換       |        |F6                     #4              |
 |反転再探索置換   |        |Shift+F6               #4  #5          |
 |前コマンド       |        |F12                    #6              |
 |次コマンド       |        |Shift+F12              #6              |
 |コマンド反復     |        |Ctl+F12                                |
 |画面-前コマンド  |        |Alt+F12                                |
 |画面-次コマンド  |        |Shift+Alt+F12                          | ||~v129R~
 |コマンド履歴表示 |CHL     |Shift+Ctrl+F12                         | ||~v129R~
 |表示行交換       |FLI (XX)|                                       | ||~v124R~
 |行番号表示       |NUM     |                                       |
 |英大文字固定     |CAP     |                                       |
 |行番号振直し     |REN     |                                       |
 |整列             |SOR     |                                       |
 |行分離           |SPL     |                                       |
 |パラグラフ整形   |TFL     |                                       | 
 |リフレッシュ     |REF     |Shift+F1                               |
 |簡易計算         |XBC     |                                       |
 |簡易表計算       |TC      |                                       |
 |バージョン       |VER     |                                       |
 |タブ 表示/間隔   |TAB     |                                       |
 |桁定規           |COL     |Shift+F11                              |
 |行変更タグ       |CID     |                                       |
 |INI出力          |INI     |                                       |
 |オプション設定   |OPT     |                                       |
 |ファイル外部実行 |SUB     |                                       |
 |非同期外部実行   |SPA (&) |                                       |
 |CMDファイル実行  |EXE     |                                       |
 |関連付け実行     |ASS (!) |                                       |
 |タイマー実行     |AT      |                                       |
 |休眠             |SLE     |                                       |
 |DOSコマンド      |DOS (>) |(CMD,COMmandでもよい)                  |
 |ヘルプ           |HEL (?) |                                       |
 |                 |        |                                       |
 |ヌル文字  0x00   |        |Ctrl+"2"               #10             |
 |                 |        |                                       |
 |罫線文字        |        |Alt+"1",Ctrl+10キー"1"                 |
 |罫線文字  .      |        |Alt+"2",Ctrl+10キー"2"                 |
 |罫線文字        |        |Alt+"3",Ctrl+10キー"3"                 |
 |罫線文字  .      |        |Alt+"4",Ctrl+10キー"4"                 |
 |罫線文字  .      |        |Alt+"5",Ctrl+10キー"5"                 |
 |罫線文字  .      |        |Alt+"6",Ctrl+10キー"6"                 |
 |罫線文字  .      |        |Alt+"7",Ctrl+10キー"7"                 |
 |罫線文字  .      |        |Alt+"8",Ctrl+10キー"8"                 |
 |罫線文字  .      |        |Alt+"9",Ctrl+10キー"9"                 |
 |罫線文字  -      |        |Alt+"-",Ctrl+10キー"0",Ctrl+10キー"-"  |
 |罫線文字  |      |        |Alt+"^",Ctrl+10キー".",Ctrl+10キー"+", |
 |                 |        |Alt+"="                                |
 .-----------------.--------.---------------------------------------.

#ifdef UNX
 .-----------------.--------.---------------------------------------.
 |ユーザー名/Id表示|        |Shift+F6                               |
 .-----------------.--------.---------------------------------------.
#endif
   - キーの割当てはカスタマイズする事ができます,XE.INIファイルを
     修正して下さい(間違えたら INI コマンドを使用して再作成)
   - コマンド欄の括弧内は省略形

#ifdef UNX
#else
   - #1:exe パラメータ /Yr の指定すると 右Ctrl キーを"実行+改行" に,
        Enter キーは "改行" に割当てます.
#endif

   - #2:行を連結するには 行末の改行マークを "削除" 又は "後退" キーで  
        削除すればよい．
        次の行が分割行の時はその全体を連結することになる。
   - #3:カット & ペースト について.         (0)-(D)カット＆ペースト参照
   - #4:探索情報はファイルに保存されます．エディター開始直後でも
        再探索/再置換キーで前回に続けての再探索/再置換が出来ます．
   - #5:探索方向を変更するには"反転再探索"/"反転再探索置換"を 1 回 入力
        すればよく,以降の"再探索"/"再探索置換"は設定された方向に
        探索を続けます
   - #6:コマンドリトリーブ,最近の入力コマンド 20 個(INI ファイルで変更
        可能)迄がスタックされる.(以前と同じコマンド文字列の時はそれを
        スタックの一番上に移動し重複してスタックはしない)
        エディターセッションを跨がってもリトリーブ可能
   - #7:次のような時に使用します.
        .確認要求メッセージに対する取り消し応答.
        .カット&ペーストの範囲指定の中断.
        2 回連続して取消キーを押せば(RESetコマンド入力も同等)以下の処理を
        します.
        .探索文字列,カット&ペースト複写済領域の反転表示の解消
        .行ラベル以外のエラー/未処理行コマンドのクリアー
        行ラベルをクリアーするには３回連続で取り消しキーを押すか
        RESetコマンドで "L" オプションを追加してしてください。
   - #8:1行上表示/1行下表示 は ファイル表示/編集,ディレクトリー表示,
        コマンド結果編集の各画面で有効です.
        次の値/前の値 はそれ以外の画面で有効で特定の入力欄に限って使用
        可能です.例えばオプション-色設定画面のRGB値入力欄ではRGB値を
        +1(次の値)あるいは-1(前の値)する時に使用できます.

   - #9:DIR行コマンド切抜/複写機能はディレクトリーリストの行コマンド
        a(属性変更)/c(複写)/m(移動)/r(改名)/o(Open)/%(applycmd) にのみ
        有効です.
        コマンドを入力した状態か,複写/移動の場合は実行後の宛先ファイル
        が表示された状態で F10(DIR行コマンド切抜)を使って入力を保存し
        F11(DIR行コマンド複写)で他の行に入力を複写します.
   - #10:x00 以外の文字入力は (6). INI ファイルのValid_Ctrl_charの項を
         参照
   - #11:タブ(前進)は置換モードのときはカーソルのタブ位置への移動ですが
         挿入モードのときは タブ(x09) の入力となります。
         挿入モードのときの移動はテキストファイルでは置換モードと同じ
         ですがバイナリーファイルでは1桁です。
   - #12:文字列入力短縮キー。
         説明は(0)はじめに-(E)用語の"文字列入力短縮キー"を参照。
   - #13:方向キー。
         ScrollLock オンの時ファイル内容画面では上下左右に1桁スクロルします。
         ディレクトリー画面では時上下に1桁スクロルします。
         (尚、Linux コンソール版では機能しません)
        .GUI版(wxe,gxe)ではさらに横スクロール機能付マウスをサポート。
         ScrollLock Offの状態で横スクロールホイールの回転をすると
         Setupダイアログで設定した桁数づつスクロールします。
   - #14:ディレクトリーリスト画面で各ファイルの説明表示をオン・オフする。
        .改名欄以降に"ファイルの説明"を最大48バイト表示します
        ."ファイルの説明"は次のようにして得ます
         Windowsの場合でstream名が"xe-desc"のADS(Alternative Data Stream,
         (0)-E:用語を参照)があればその先頭から前に":"をつけて47バイト表示。
         ADSがないかWindows以外の場合はファイルの先頭から1024バイトの範囲に、
         "DID:"の文字があれば"DID:"の文字以降を行末まで。
         "DID:"の文字がなければ最初の長さが0でない行の先頭スペースを飛ばして
         行末までを表示。
         尚バイナリーファイルはx'20'以下を'.'に置換して表示します。
   - #15:経路昇では現在表示中のファイル経路の1つ上のディレクトリーを表示します。||~v124R~
         逆に経路降は経路昇を実施する前の経路に戻ります。             ||~v124R~

************************************************************************
(2).画面
************************************************************************
********************                                                  
*(A)メニュー画面   *
********************                                                  
                                                                      
     1行  -------------- MENU ----------------------------------------
     2行  ===>                                                        
#ifdef UNX
     3行                                              hostname = myhost
#else
     3行                                                              
#endif
     4行  0  PARM         - Parameter Change
     5行     0.0 (0) COLOR   - Palette and Color
     6行     0.1 (A) Fn-CMD  - Assing cmd-string to PFkey
     7行     0.2 (B) FUNC-KEY- Change Key Assignment
     8行     0.3 (C) KEY-FUNC- Browse Key List
     9行  1  BROWSE       - Display File
    10行  2  EDIT         - Edit/Create File
    11行  6  COMMAND      - Edit Command Result
    12行  X  EXIT         - Save and Split End
    13行  R  RETURN       - Save and Exit
    14行  Q  QUIT         - Quit and Exit
                                                                      
       1 行目    :ヘッダー行,メッセージ表示行                         
       2 行目    :コマンド入力行                                      
                  0,1,2...のオプションを入力する．                    
                  EDItなどのコマンドを入力してもよい．                
       4-14行目  :オプションの説明
                  0  PARM     :パラメータ設定
                     0.0 (0) COLOR   : 色の設定
                     0.1 (A) Fn-CMD  : コマンドキーの設定
                     0.2 (B) FUNC-KEY: キー割当の変更
                     0.3 (C) KEY-FUNC: キー順の機能割当を表示
                  1  BROWSE   :表示ファイル名入力画面を表示           
                  2  EDIT     :編集ファイル名入力画面を表示           
                  6  COMMAND  :DOSコマンド出力編集画面を表示
                  X  EXIT     :画面分割中なら分割の一方を保存終了     
                               分割中でなければ RETURN に同じ         
                  R  RETURN   :変更中の全ファイルを保存して           
                               コマンドプロンプトに戻る               
                  Q  QUIT     :変更中の全ファイルを保存せずに         
                               コマンドプロンプトに戻る               
                                                                      
  ****************
  * 0.0 色設定   *
  ****************

          0        1         2         3         4         5           8
          12345678901234567890123456789012345678901234567890....34567890
     1行  OPTION - 1 ---- COLOR ----------------------------....----=Rep
     2行  ===>                                                        
     3行                                                              
     4行  *Palette number assign (0 to 15) ****************....********
     5行     Part of screen  palette no.             sample
     6行                     FG / BG (curr.,default)                  
     7行     Title-Line      __ / __ (15/ 1, 15/ 1 ) ------- MENU -------
     8行     Panel-Frame     __ / __ ( 7/ 0,  7/ 0 ) ===>command line etc
     9行     Browse-Lineno   __ / __ ( 2/ 0,  2/ 0 ) 0001000| Browse  scr
    10行     Browse-File     __ / __ ( 7/ 0,  7/ 0 )                  
    11行     Edit-Lineno     __ / __ ( 2/ 0,  2/ 0 ) 0001000| Edit    scr
    12行     Edit-File       __ / __ (14/ 0, 14/ 0 )                  
    13行     DirList-Linecmd __ / __ (14/ 0, 14/ 0 ) 003|||. DIRLIST  EXE
    14行     DirList-Lineno  __ / __ ( 2/ 0,  2/ 0 )                  
    15行     DirList-File    __ / __ ( 7/ 0,  7/ 0 )                  
    16行     CmdOut-Lineno   __ / __ ( 2/ 0,  2/ 0 ) 19:55 ===>> dir  
    17行     CmdOut-Result   __ / __ (15/ 8, 15/ 8 )  Volume in drive G h
    18行                                                              
    19行  *Palette color (0 to 3 for R G B each). MAXCOLOR=16. *********
    20行     Palette  -->  0   1   2   3   4   5   6   7   8.... 14  15
    21行     color    -->                                             
    22行     RGB value-->000 ___ ___ ___ ___ ___ ___ ___ ___....___ ___
    23行     current  -->000 002 020 022 200 202 210 222 111....220 333
    24行     standard -->000 002 020 022 200 202 210 222 111....331 333
                                                                      
#ifdef AIX
        AIX ではモノカラーです。カラー設定はできません。
#endif
#ifdef LNX
        モノカラーモード(--m)の時は、カラー設定はできません。
#endif

       1    行目:ヘッダー行,メッセージ表示行
       2    行目:コマンド入力行
       4-17 行目:パレット番号割当て部.
       7-17 行目:パレット番号入力行.
                -各画面の各部分へ割当てるパレット番号を 0 から 15 まで
                 の数字で入力する.
                -パレット番号を重複割り当てしても構いません.
                -各パレット番号の発色はパレットカラー設定部で指定する
                 指定できる画面の部分は 7 行目から順に次のようになっている
                    .タイトル行(活動画面=カーソルのある画面 のヘッダー行)
                    .ファイル表示/編集,ディレクトリーリスト表示,コマンド
                     出力編集画面以外の画面
                    .ファイル表示画面の行番号欄
                    .ファイル表示画面のファイル内容表示欄
                    .ファイル編集画面の行番号欄
                    .ファイル編集画面のファイル内容表示欄
                    .ディレクトリーリスト画面の行コマンド入力欄
                     このパレット番号はパラメータ色設定画面の入力欄の
                     未入力表示にも使用されます
                    .ディレクトリーリスト画面の行番号欄
                    .ディレクトリーリスト画面のディレクトリー内容欄
                    .コマンド結果編集画面の行番号欄とコマンドエコー表示行
                    .コマンド結果編集画面の結果表示行
           20-21 桁目:前景色のパレット番号入力欄
           25-26 桁目:背景色のパレット番号入力欄
#ifdef LNX
                      背景色に高輝度(paletteNo>=8)は使用できません。
#endif
           29-33 桁目:『パラメータ  -  色設定』の画面を開いた時の
                      前景/背景色表示欄
           36-40 桁目:省略値.
           43桁目以降:画面の表示例
                      パレット番号を入力し実行キーをおすとまずこの部分
                      に変更が反映されます.
                      F3(戻る)で実際の画面に反映され,F1(破棄)で画面を
                      開く前の状態(29-33 桁目に表示)に戻ります
      19-24 行目:パレットカラー設定部
#ifdef UNX
	#ifdef LNX
      21    行目:パレット番号 0 から 7 に設定された色の値を背景色で表示
                 パレット番号 8 から 15 に設定された色の値を前景色で表示
	#endif
#else
      21    行目:パレット番号 0 から 15 に設定された色の値を背景色で表示
#endif

      22    行目:パレットカラー入力欄
                -3 桁の数字で左から R(赤),G(緑),B(青)の色のレベルを各色
                 0 から 3 までの 4 段階で指定します.各レベルのカラー
                 レジスターの値は 0:00H, 1:15H, 2:2aH, 3:3fH.
                -パレット番号 0 は RGB値=000(黒) に固定したので
                 パレット番号 0 への入力と パレット番号 1 から 15 への
                 RGB値 000(黒) の設定は出来ません.
                -RGB レベルを入力し実行キーをおすと21行目の色表示が
                 変わるだけではなく全ての画面が影響を受けます.
                -次の値キー(シフト+下矢印)/前の値キー(シフト+上矢印)を
                 使うとRGB値を +1/-1 して 実行キーを押したのと同じ
                 効果が得られます.
                -F3(戻る)では変更が反映されたままになり,F1(破棄)で
                 画面を開く前の状態(23行目に表示の値)に戻ります
      23    行目:『パラメータ  -  色設定』の画面開いた時の RGB値
      24    行目:省略値.
   (注).画面が見えなくなったらワークディレクトリーにあるオプションファイル
#ifdef UNX
        xe_save_ を削除して下さい.省略値の値に戻ります
        gxeでは xe_save_.xxeを使用しています。
#else
        XE!SAVE! を削除して下さい.省略値の値に戻ります
#endif
        省略時の値は次のとおりです．
        パレット  カラー   表示色  :  パレット  カラー  表示色
            0      0(000)  黒      :      8    56(111)  灰色
            1      1(002)  青      :      9    57(113)  薄い青
            2      2(020)  緑      :     10    58(131)  薄い緑
            3      3(022)  水色    :     11    59(133)  薄い水色
            4      4(200)  赤      :     12    60(311)  薄い赤
            5      5(202)  紫      :     13    61(313)  薄い紫
            6     20(210)  茶色    :     14    62(331)  薄い黄
            7      7(222)  白      :     15    63(333)  明るい白
       .PCDOSでは、水色は MKK が使用しているので MKK を使用している場合、
        ファイル編集エリアでは水色を使うと見えなくなります
       .OS/2のウィンドー表示の時はパレットカラーの変更は無効です,
        全画面モードで設定するとウィンドーモードと全画面モードで発色が
        異なることになるので注意．
        WIN版では全画面でもウィンドーモードでもパレットカラーの変更は
        できません.
       .RGBレベルと色の対応表
         カラー番号              RGB レベル
           00-03   :  000(黒)     002(青)     020(緑)     022(水色)
           04-07   :  200(赤)     202(紫)     220(黄)     222(白)
           08-11   :  001(暗青)   003(明青)   021         023(緑青)
           12-15   :  201         203         221         223
           16-19   :  010(暗緑)   012         030(明緑)   032(空色)
           20-23   :  210(茶色)   212         230         232
           24-27   :  011(暗水色) 013         031(青緑)   033(明水色)
           28-31   :  211         213         231         233
           32-35   :  100(暗赤)   102         120(黄緑)   122
           36-39   :  300(明赤)   302(濃桃色) 320(山吹)   322
           40-43   :  101(暗紫)   103(菫色)   121         123
           44-47   :  301(紫赤)   303(明紫)   321         323
           48-51   :  110(暗黄)   112         130         132
           52-55   :  310         312         330(明黄)   332
           56-59   :  111(灰色)   113(薄青)   131(薄緑)   133(薄水色)
           60-63   :  311(薄赤)   313(薄紫)   331(薄黄)   333(明白)

  *******************
  * 0.1 コマンドキー*
  *******************

          0        1         2         3           6         7         8
          12345678901234567890123456789012      789012345678901234567890
                                                                      
     1行  KEY----|XE OPT0.1                .... ------ 001-(001)-075=Rep
     2行  ===>                             ....                ===>PAGE
     3行  ****|*** Top of Fn-cmd List * .... ***************************
     4行  0001|A+F1 :=6;grep %1 *.c                                   
     5行  0002|C+F1 :                                                 
     :                                                                
    17行  0017|sc,0 :xx;i 'S ' 12 all;i 'R ' 12 all;i ru 12 & 861001 all;
    18行  0018|sc,1 :xx;i s 12 & ru 12 -d2 all;i r 12 & ru 12 -d2 all;
     :
    75行  0075|Alias:ch1 S %1;c Old New all;end;
    76行  0076|Alias:ex e %1 /mtx %2 %3 %4                            
     :
                                                                      
     基本的に編集画面と同じ操作です.
     14 桁目からこのキーに割り当てるコマンドを入力します
     コマンドの連結は";".コマンド入力行を越える長さも可能(最大240).
     最後に";"があれば全コマンドを連続実行し,なければ文字列が
     単にコマンド行に表示されるだけ.
     コマンド文字列に % 置換文字を指定することにより予めコマンド行に  ||~127ER~
     入力したパラメータでの置換もサポート.
     また、ショートカットキー(上の例では17行目以降)が使用できます.    ||~127ER~
     同じ目的で、上の例では75行目ですがショートカットキー(sc,x:)に続いて
     別名コマンドを定義できます。
     75行の例では DirListで "ch1 memb1" とコマンド入力することが想定されます。
     76行の例は ファイルをHex３段表示で開くコマンドを設定しています。 
     追加は行を反復して修正してください。
     尚コマンドの１桁目を"*"にすることでコメント化できます。
                                                                      ||~127EI~
     ユーザーコマンドも参照                                           ||~127EI~

  *******************
  * 0.2 キー割当変更*
  *******************
          0        1         2         3           6         7         8
          12345678901234567890123456789012      789012345678901234567890
                                                                      
     1行  KEY----|XE OPT0.2                .... ------ 001-(001)-075=Rep
     2行  ===>                             ....                ===>PAGE
     3行  ****|*** Top of Key Assign,ent List .... *********************
     4行  0001|Execute+Next-Line   *  10KEY-Enter//実行+改行          
     5行  0002|Execute+Next-Line   *  Enter      //実行+改行          
     6行  0003|Next-Line           :A+Enter      //次行               
                                                                      
     基本的に編集画面と同じ操作です.
     タブキーでキー名入力欄にカーソルを移動しそこでキー名を入力するか
     設定したいキーを押します
     次のキーは固定的に割り当てられており割り当て変更できません
       Enter,10キーEnter,Esc,Ins,Del,BackspaceUp/Down/Left/Right cursor,
       Tab,Backtab,Home,Page-Up,Page-Down
       (これらのキーはShift,Alt,Ctrlのシフトキーとの組み合わせたときは
        Backtab(S+Tab)以外は固定されていません)
     Alt+, Ctrl+, Shift+ALt+, Shift+Ctrl+ の組み合わせが使用できます  ||~v121R~
     Shift+ALt+, Shift+Ctrl+ は Fn, Ins, Del, 方向キーとのみ組み合わせが使用できます||~v121R~
     Linux の場合 ショートカット キーとして設定されている場合もあるので||~v121R~
     その場合 これらのキーを利用する場合は Linux の設定の変更が必要になります||~v121R~
     Shiftキー無し(A+Fn,C+Fn)がショートカットキー設定されている場合   ||~v121R~
     そちらもソートカットキーを無効にする必要があるかもしれません     ||~v121R~
     またコマンドオペランドを必要とする機能はコマンドのみで操作され
     キーを割り当てることは出来ません.
     終了時に変更が保存(::xe!save!)され次回から有効になります.        ||~v121R~
     INI ファイルを使用している場合(::xe.ini ファイルが存在する場合)  ||~v121R~
     INI ファイルの方が優先されます(INIファイルのその機能の割り当てキーの||~v121R~
     数だけxe!save!の保存を上書きします）                             ||~v121R~
     リスタート後の INI コマンドで INI ファイルを更新できます         ||~v121R~

  *******************
  * 0.3 キー割当表示*
  *******************
          0        1         2         3           6         7         8
          12345678901234567890123456789012      789012345678901234567890
                                                                      
     1行  KEY----|XE OPT0.3                .... ------ 001-(001)-075=Rep
     2行  ===>                             ....                ===>PAGE
     3行  ****|*** Top of Key and Function List ... ********************
     4行  0001|  Esc         *RES/___ ## Reset                   取消 
     5行  0002|S+Esc         ;___/___                                 
     6行  0003|A+Esc         :___/___                                 
                                                                      
     この画面は表示のみで入力は出来ません
     各行はキー名,コマンド/短縮コマンド,機能名,機能の日本語名を表示

*************************
*(B) ファイル名指定画面 *
*************************
                                                                      
#ifdef UNX
     1行  BROWSE------------------------------------------------------
     2行  ===>
     3行
     4行     FILE NAME ===>
     5行     DIRECTORY ===>
     6行     Current   ----/tmp/wkd
     7行
     8行   - /tmp/x1
#else
     1行  BROWSE------------------------------------------------------
     2行  ===>                                                        
     3行                                                              
     4行     FILE NAME ===>                                           
     5行     DRIVE     ===> : C D E
     6行     DIRECTORY ===>
     7行     Current   ----D:\ibmcpp\src
     8行
     9行   - c:\windows
#endif
                                                                      
       1 行目    :ヘッダー行,メッセージ表示行                         
                 BROWSE(MENUオプション 1) 又は EDIT(MENUオプション 2) 
       2 行目    :コマンド入力行                                      
       4 行目    :ファイル名入力行                                    

#ifdef UNX
       5 行目    :ディレクトリー名入力行
       6 行目    :現行ディレクトリー現行ディレクトリーを表示。
       8 行目以降:今まで開いたファイル名のFIFO順にリスト　　　　　　　
#else
       5 行目    :ドライブID入力行(A,B,C,...)
       6 行目    :ディレクトリー名入力行
                  6行目にドライブIDを入力するとそのドライブの         
                  現行ディレクトリーが表示されます.上書きできます     
       7 行目    :現行ドライブの現行ディレクトリーを表示。
       9 行目以降:今まで開いたファイル名のFIFO順にリスト　　　　　　　
#endif
                                                                      
     実行キーを押すと DIRECTORY と FILE NAME を連結したものが         
     BROwse または EDIt コマンドに渡されます.                         
     一方に経路とファイル名を入力してもかまいません.                  

     行コマンド入力欄には以前使用したeb,eh,ec 等の表示/編集コマンド
     バリエーションが表示されています。
     この行コマンドを上書きできるが、単純に Enterキーを押すと、
     コマンド入力行に表示あるいは編集コマンドを表示。
     Enterキー以外に次のキーが使用できます。
     大文字小文字がある場合は小文字はメニューでの選択に従い大文字は
     その反対になります。
     例えば メニューで１を入力した場合小文字は表示(Browse)になり大文字は
     編集(Edit)で開くことになります。
     PgUp,PgDn,Shift+PgUp(トップ頁),Shift+PgDn(最終頁)キーも使えます。
     スクロールサイズは省略値:Pageですがコマンド入力行に行数やH(ハーフ)を指定できます。
     Findコマンドはファイル名のみが対象でコマンドオペランドは探索対象外です

     "s" 以外は 追加のオプションは無視されます。                      ||~v125R~
     "e"/"b"では事前表示のコマンドは有効で、編集(=2)/表示(1)のモードを無視します。||~v125R~
                                                                      ||~v125R~
     b  :表示で開く
     c/C:行番付COBOLファイルとして開く
     e  :編集で開く
     h/H:Hex表示モード
     i/I:行番付SPF-COBOLファイルとして開く
     j/J:行番無SPF-COBOLファイルとして開く
     k/K:行番無COBOLファイルとして開く
     l/L:c/Cに同じ。
     n/N:SPFファイル(col.73-80が行番号)として開く。
     s  :メニューの選択に従い表示、編集のコマンドを実行。
         コマンドバリエーション、パラメータは再使用されます。
     t  :テキストモード強制の表示、編集のコマンドを実行。
     1  :バイナリーファイルとして表示。
     2  :バイナリーファイルとして編集。
     !  :ファイル拡張子の関連付けアプリケーションで開く。
     d  :この行を削除。
     " ":(スペース)コマンドバリエーション、パラメータを無視した
         表示/編集コマンドをコマンド入力行に再表示する。
                                                                      
********************                                                  
*(C) 編集/表示画面 *
********************                                                  
                                                                      
          0        1         2         3           6         7         8
          12345678901234567890123456789012      789012345678901234567890

     1行  EDIT---|G:\X1.C (95-05-13 10:44) .... ------ 001-(012)-072=Rep
     2行  ===>                             ....                ===>HALF 
     3行  *******|*e*rw*fd** TOP OF FILE * .... ************************||~v128R~
     4行  0001000*int main(int argc,char *p....   //main        //~5513R
     5行  0002000|{
     :

       1 行目    :ヘッダー行,メッセージ表示行
           1 桁目: (EDIT) 又は (BROWSE)
                   カーソルがファイルの行上にある時はその位置の文字を
                   次のようにヘキサで表示します.
                   E---31- (SBCSの場合)  ,  E-81A0-  (DBCSの場合)
                   HEX 入力モードの時は x_ そして1文字入力の後は
                   例えば xA_ と表示されます(DBCSのときは3文字まで)
           8 桁目: (|) 未更新, (*) 変更行あり
           9 桁目: ファイル名
          64 桁目: 画面左端のレコード桁位置(1から)
          69 桁目: カーソル位置のレコード桁位置
          74 桁目: 画面右端のレコード桁位置
          77 桁目: (=) 横書モード, (|) 縦書モード
          78 桁目: (Rep) 上書きモード, (Ins) 挿入モード
                   (DOS版ではそれぞれ REP,INSと表示,
                    GCC版ではそれぞれ rep,insと表示)

       2 行目    :コマンド行
           5 桁目: コマンド入力欄
          76 桁目: スクロール量表示/入力欄
                   P(age),C(sr),nn(行数)などを上書きしてスクロール量を
                   変更できます

       3 行目以降:ファイル表示行
           1 桁目: 行番号
                   1 桁目高輝度は UNDO コマンドによる UNDOの対象行を示す
                   行番号表示欄の桁数は NUM コマンドで変更可能です
           8 桁目: (|) 未更新, (*) 変更行
                   (-) 長文分割表示先頭行未更新行, (+) 同変更行
                   (.) 長文分割表示後続行未更新行, (:) 同変更行
                   (32760桁(DOS版は999桁)超の行を長文とし、1行32760桁で||~v127R~
                    複数行表示)
                   高輝度表示は 現変更レベルの行を示す,
                   (レベルは機能キー入力でアップする,文字キーだけの場合
                    実行キーでアップする)
           9 桁目: ファイル内容表示欄
                   タブ(0x09)の表示はTABコマンドを参照.またタブは
                   Findコマンドに対してはスペースの扱いと同じです.
                   タブ以外の,対応する表示文字のない文字にたいしては
                   行番号欄と同じ表示属性で特殊文字が表示されます.
                   対象文字は 日本語環境では0x00,0x08,0x0a,0x0c,0x0d,
                   0x11,0x13,0x18,0x7f,0x80,0xa0,0xfd,0xfe,0xff.
                   英語環境では0x00,0xffのみです.
                   非表示文字はINIファイルで設定変更可能です。
                                                                      ||~v128R~
            "TOP OF LINE" に表示される ファイル情報は以下のとおりです ||~v128R~
                                                                      ||~v128R~
                *******|*e*rw*fd** TOP OF FILE * .... ************************||~v128R~
                                                                      ||~v128R~
             e: encoding                                              ||~v128R~
                E:EBCDIC                                              ||~v128R~
                e:EBCDIC binary                                       ||~v128R~
                b:binary                                              ||~v128R~
                U:UTF8 コード, CPU8 オプション指定で開いた            ||~v128R~
                u:UTF8, 親ディレクトリーが CPU8 指定で開かれた        ||~v128R~
                L:Locale コード, CPLC 指定で開いた                    ||~v128R~
                l:上記以外                                            ||~v128R~
             r: /Mオプションの読み込みモード指定                      ||~v128R~
                v:/Mv, 可変長レコード                                 ||~v128R~
                r:/Mr, 固定長レコード                                 ||~v128R~
                p:/Mp, PCファイル, 改行コードが 0x0d0a                ||~v128R~
                t:/Mt指定か /Mp,/Muいずれの指定もない, 改行コードは 0x0a か 0x0d0a||~v128R~
                u:/Mu, Unixファイル, 改行コードが 0x0a                ||~v128R~
                m:/Mm, Macファイル, 改行コードが0x0d                  ||~v128R~
                e:/Me, EBCDIC, 改行コードが0x15                       ||~v128R~
                b:/Mb, binary                                         ||~v128R~
             w: 読み込みモードと異なる出力モード指定があるとき        ||~v128R~
                前記に準じて表示                                      ||~v128R~
             f: ファイル名encoding                                    ||~v128R~
              (Linux)                                                 ||~v128R~
                U:UTF8, FNU8 指定あり                                 ||~v128R~
                u:UTF8, FNU8 指定なし, デバイスのマウントオプションがUTF-8||~v128R~
                  あるいは、親ディレクトリがFNU8で開かれた            ||~v128R~
                L:FNLCl 指定あり                                      ||~v128R~
                l:上記以外                                            ||~v128R~
              (Windows)                                               ||~v128R~
                U:Localeコードで表示できない, FNU8 指定あり           ||~v128R~
                u:Localeコードで表示できない, FNU8 指定なし           ||~v128R~
                L:FNLCl 指定あり                                      ||~v128R~
                l:上記以外                                            ||~v128R~
                                                                      ||~v128R~
             d: dirmode(Linux のみ)                                   ||~v128R~
                u:デバイスのマウントオプション IOCHARSETがUTF-8       ||~v128R~
*************************
*(D) ディレクトリー画面 *
*************************
                                                                      
#ifdef UNX

   EDIT---|/tmp (95-09-17 16:54) ------....-----------------------=Rep
   ===>                                ....                  ===>HALF
   ****|********** TOP OF LIST ********....***************************
   _001|: /                       x400           649,728 /  1,457,664
   _002||: tmp                    777-t    00-03-25  22:07 root/toot
   _003|||. DISPCHAR C            644--    00-12-17  13:19 bin/bin
   _004|||. DOSFF    MAK          755--    00-12-16  09:49 akir/users
   _005|||- FC10                  644--    00-12-15  23:10 eiko/users
   _006||||- IIIII                755--    00-12-25  23:07 youi/users
   _007|||||+ IU                  755--    00-12-25  23:06 mich/users
   _008|||||+ LL                  755--    00-12-25  23:06 oosa/users
   _009|||||. UFILET   C          755--    00-12-25  22:12 izum/users
   _010||||+ IU                   755--    00-12-25  23:06 ohts/users
   _011||||.@JKKJ                 755--    00-12-29  11:49 ikeu/users

#else

   EDIT---|G:\src (95-09-17 16:54) ----....-----------------------=Rep
   ===>                                ....                  ===>HALF 
   ****|********** TOP OF LIST ********....***************************
   _001|: G:\                     x800           649,728 /  1,457,664
   _002||- src                    ----     94-11-17  22:07          0
   _003|||. DISPCHAR C            ----     94-12-17  13:19        300
   _004|||. DOSFF    MAK          ----     94-08-06  09:49        280
   _005|||- FC10                  ----     95-09-15  23:10          0
   _006||||- IIIII                ----     95-09-15  23:07          0
   _007|||||+ IU                  ----     95-09-15  23:06          0
   _008|||||+ LL                  ----     95-09-15  23:06          0
   _009|||||. UFILET   C          A---     95-09-15  22:12      5,066
   _010||||+ IU                   ----     95-09-15  23:06          0
   _011||||. JKKJ                 A---     95-09-09  11:49          8
   _012||||. JKKJ2                A---     95-08-29  21:51        219
   _013||||+ LL                   ----     95-09-15  23:06          0
   _014||||. UFILET   C           A---     95-09-15  22:12      5,066

#endif
                                                                      
(1 行目,2 行目は編集/表示画面と同じ,但しカーソル位置などは表示されません)
(表示幅は最小80桁、画面サイズを広げるとファイル名欄が拡張されます）

   1 桁目: 行コマンド入力欄                                           
   2 桁目: 行番号欄(入力不可)                                         
           削除/改名/移動すると それぞれ *D*/*R*/*M* と表示される
   5 桁目: (|) 未更新,  (*) 変更行("A"/"D"/"R"/"M"行コマンドあるいは
           編集から保存終了した)                                      
   6 桁目: ディレクトリー表示欄                                       
           ファイルタイプ,ファイル名,属性,改名,更新日,更新時刻,サイズ 
           の順に表示                                                 
#ifdef UNX
           サイズ欄はShift+F6 で User名/Group名 表示に切り替わります。
           シンボリックリンクファイルは"@"付きで示されます。
           リンク先はShift+F11で見ることができます。
#endif
           但しルートディレクトリーの行ではディスク空容量情報を表示.
           (属性欄にはクラスターサイズをヘキサで表示)
           空容量情報は同じ画面内の操作では自動更新されます.外部操作の
           結果を反映するには行コマンド入力欄にスペースを入力して下さい．
         - ファイルタイプ は階層レベルによりインデンテーション        
             (:) 経路上のディレクトリー                               
             (+) ディレクトリー,メンバーを展開表示してない状態        
             (-) ディレクトリー,メンバーを展開表示している状態        
                 (x コマンドによる非表示状態の時は反転)
             (.) 通常のファイル
         - ファイル名のインデンテーションは INI ファイルによる        
           オプション                                                 
           ファイル名の表示順はFAT(8.3)ファイル名のときは
           (拡張子を除く)BASE名,拡張子の順.
           長いファイル名(OS/2 のHPFSパーティション,WIN,GCC版で
           LFN オプションを設定した場合)の時はファイル名全体の
#ifdef UNX
           大文字小文字を区別した順.
           但しフロッピードライブ上のファイルは区別無しの順。
#else
           大文字小文字を区別しない順.
#endif
         - 属性欄は属性変更行コマンドを入力すると入力可能になる
         - 改名欄(属性欄と更新日欄の間の空白の欄)は次のコマンドを
           入力した時にクリアーされコマンドに必要な入力を行う.
           ディレクトリー展開(-,>)では必要ならワイルドカードマスク,
           改名(r)では新しいファイル名,複写(c)/移動(m)では宛先名を
           入力する.
           また削除した時 Undelete オプションによっては保存ファイル名
           が表示される．
           複写の結果の宛先ファイル名はスペース(' ')行コマンドで元の
           表示に戻されます.
           複写、移動コマンドで同じあて先を複数行に入力するときは
           F10(コピー),F11(貼り付け)キーが使えます。
           o/O(Open)でパラメータをコピーするときも使えます。
         - ファイル名が長すぎて見えないときは Shift+F11 で表示欄を拡張
           して表示できます。もとに戻すときも Shift+F11を使用します。
         - S+F10で改名欄以降にファイルの内容説明を表示することが出来ます。
			(1).キー割り当ての省略値,機能＆キーの#14を参照。
                                                                      
***********************
*(E) コマンド出力     *
***********************

          0        1         2         3           6         7         8
          12345678901234567890123456789012      789012345678901234567890
                                                                      
     1行  CMD----*::so1 (95-05-13 10:44)   .... ------ 001-(012)-072=Rep
     2行  ===>                             ....                ===>HALF
     3行  *******|********** TOP OF FILE * .... ************************
     4行  19:24 ===>> dir *.c                                         
     5行                                                              
     6行   ドライブ G のボリューム・ラベルはありません
     7行   ボリューム・シリアル番号は E5EA:8815                       
     8行   ディレクトリーは c:\xe                                     
                                                                      
     :                                                                
                                                                      
       1 行目    :ヘッダー行,メッセージ表示行                         
           編集/表示画面と同じ.
           但しファイル名はワークディレクトリー内のワークファイル名.
           (::soN,N=0-9)

       2 行目    :コマンド行
           編集/表示画面と同じ.
           但しこの画面では DOS コマンドプレフィクス "DOS" あるいは
           その省略形の ">" を省略することができます.

       3 行目以降:入力コマンドとその出力内容表示
           編集/表示画面と同じ.
           但しこの画面の行番号表示オプションは省略値ではoffであり
           行番号(1-8桁)は表示されません.行番号を表示するためには
           NUMコマンドを使用します

         - コマンドを入力するとそれまでの表示はスクロールアップされ
           最初の行に最近に入力したコマンドのエコーが表示されその後に
           コマンドの結果が表示されます.
         - ファイルの最後の行長 0 の行はコマンド入力にも使用できます.
           2 行目のコマンド入力行に収まらない長いコマンド文字列を
           入力する場合に使用して下さい.
           行挿入で長さ0の行を挿入しその上にコマンドをタイプするか
           入力コマンドエコー行を最後の行に挿入複写しその行を修正して
           実行キー入力して下さい.コマンド行は行番号欄とコマンドエコー
           行と同じく行番号欄と同じ色で表示されます.
                                                                      
******************************                                        
*(F-1) ユーティリティー:比較 *                                        
******************************                                        
                                                                      
          ------ File / Directory Compare ----------------------------------------------=Rep
          ===>                                                        
                                                                      
           Options  =>  [ -nolist:display rc only.  Enter ? or --help for Help]
                                                                      
           Curr Dir --g:\src\xe                                       
                                                                      
           FileSpec1=>  [ Try InsertLine key (default:F5) after partial path input. ]
                                                                      
           FileSpec2=>  [ Then use Send keys (defualt:A+i/r/d/Up/Down) or "^" lcmd. ]
                                                                      
                                                                      
       .実行キーで "比較ツール Options FileSpec1 FileSpec2" を実行し、
        結果を編集画面に表示する。                                    
        "比較ツール" の省略値はファイル比較は xfc,ディレクトリー比較はxdc。
        xfc/xdcはパッケージに同梱しています。                         
        diff などに変更したい場合はiniファイルで設定する。            
             CompareFile_Cmd   ="xfc"  #("xfc")# File compare cmd.    
             CompareDir_Cmd    ="xdc"  #("xdc")# Directory compare cmd.
                                                                      
       .Options    : 比較ツールのオプションを指定する。               
                     ?を指定すると オペランド指定無しで比較ツールを実行する
                     diffを使用している場合は --helpを指定するとHelpが表示される。
                     -nolist    :一行だけの結果表示                   ||~v129R~
                     -CPU8      :Windowsのみに適用、結果をUTF8ファイルとして表示||~v129R~
        Curr Dir   : 現行Dirを表示。                                  
#ifndef UNX                                                           
                     FileSpec1/2にドライブIDを入力するとそのドライブの現行Dirを表示
#endif                                                                
        FileSpec1/2: 比較する２つのファイル/ディレクトリーを入力する。
                     ワイルドカード、経路を入力したあと探索キー(省略値:F5)を使用すると
                     入力を元にdir-listを分割画面で開く。             
                     入力がない場合は現行Dirを開く。                  
                     画面分割してdir-list画面からファイル名を設定するキー操作は、
                     Alt+i(挿入)/r(置換)/d(削除)/Up(上の行に移動)/Down(下の行に移動)。
                     "^"行コマンドはキーの挿入/置換モードにしたがってファイル名を送る。
                     挿入は未入力の行に設定し、置換、削除は反転行を設定する。
                     テキストのCut&Pastも使用可能。                   
#ifndef WXE/XXE                                                       
                     マウスのDrag&Dropで設定することも可能。          
                     dir-list画面、Explorer/NautilusでDragし入力したい行にDropする。
                     ファイルのCut&Pasteも使用可能。                  
#endif                                                                
　　　　　　　　　　 全ての入力はRESetコマンドあるいはEscキー２回でクリアーされます。
                                                                      
******************************                                        
*(F-2) ユーティリティー:探索 *                                        
******************************                                        
                                                                      
          ------ Grep Search -----------------------------------------------------------=Rep
          ===>                                                        
                                                                      
           Options  =>  [ Enter ? or --help for Help]                 
                                                                      
           Curr Dir --G:\src\mfc\wxe\Release                          
                                                                      
           FileSpec1=>  [ Try InsertLine key (default:F5) after partial path input. ]
                   2=>  [ Then use Send keys (defualt:A+i/r/d/Up/Down) or "^" lcmd. ]
                   3=>  [ "-f" at end of "Options" allows 1st line as pattern file. ]
                   4=>  [ Drag & Drop is also available.                            ]
                   5=>  [ Use RESet cmd (or Esc twice) to clear.                    ]
                   6=>                                                
                   7=>                                                
                   8=>                                                
                   9=>                                                
                  10=>                                                
                  11=>                                                
                  12=>                                                
                  13=>                                                
                  14=>                                                
                  15=>                                                
                                                                      
       .実行キーで "探索ツール Options FileSpec1 FileSpec2 ..." を実行し、
        結果を編集画面に表示する。                                    
        "探索ツール" の省略値はgrep。変更したい場合はiniファイルで設定する。
             Search_Cmcd       ="grep" #("grep")# String search cmd.  
                                                                      
       .Options     : 探索ツールのオプションを指定する。              
                      ?を指定すると オペランド指定無しで探索ツールを実行する
                      --helpを指定すると詳細なHelpが表示される。      
                      grepの式をファイルで指定する場合は Optionsの最後に -fを
                      指定しFileSpec1に式を含むファイルを指定すると良い。
        Curr Dir    : 現行Dirを表示。                                 
#ifndef UNX                                                           
                      FileSpecにドライブIDを入力するとそのドライブの現行Dirを表示
#endif                                                                
        FileSpec1-15: 探索ツールのファイルパラメータを指定する。      
                      ワイルドカード、経路を入力したあと探索キー(省略値:F5)を使用すると
                      入力を元にdir-listを分割画面で開く。            
                      入力がない場合は現行Dirを開く。                 
                      画面分割してdir-list画面からファイル名を設定するキー操作は、
                      Alt+i(挿入)/r(置換)/d(削除)/Up(上の行に移動)/Down(下の行に移動)。
                      "^"行コマンドはキーの挿入/置換モードにしたがってファイル名を送る。
                      挿入は未入力の行に設定し、置換、削除は反転行を設定する。
                      テキストのCut&Pastも使用可能。                  
#ifndef WXE/XXE                                                       
                      マウスのDrag&Dropで設定することも可能。         
                      dir-list画面、Explorer/NautilusでDragし入力したい行にDropする。
                      ファイルのCut&Pasteも使用可能。                 
#endif                                                                
　　　　　 　　　　　 全ての入力はRESetコマンドあるいはEscキー２回でクリアーされます。
                                                                      
************************************************************************
(3).編集コマンド
************************************************************************

********************
 (A) コマンド一覧  *
********************
 機能キーが割り当てられているコマンドは機能キーを使用してください。
 機能キーが未割り当ての場合は対応するコマンドを使用してください。     ||~127ER~
 .------------------------.------------------------------------------.
 |  機能                  |    コマンド                              |
 .------------------------.------------------------------------------.
 |  ファイル表示          | BROwse, BB,BN,BC,BL,BCN,BI,BK,BKN,BJ,BH, |
 |                        |         BT                               |
 |  ファイル編集          | EDIt  , EB,EN,EC,EL,ECN,EI,EK,EKN,EJ,EH, |
 |                        |       , ET                               |
 |  経路昇降              | DPU, DPD                                 |
 |  終了                  | END, RETurn, QUIt, EXIt, CANcel          |
 |  保存                  | SAVe                                     |
 |  ファイル選択          | SELect, SB,SN,SC,SL,SCN,SI,SK,SKN,SJ,SH, |
 |                        |         ST                               |
 |  行選択                | SEL                                      |||~v129R~
 |  ファイル作成          | CREate, REPlace, APPend                  |
 |  ファイル複写          | COPy                                     |
 |  ファイル移動          | MOVe                                     |
 |  行のCB2への複写       | CUT                                      |||~v124R~
 |  行のCB2からの貼付     | PASte                                    |||~v124R~
 |  ページ スクロール     | UP, DOWn, LEFt, RIGht                    |
 |  ファイル先頭行/終端行 | TOP, BOTtom                              |
 |  文字列探索            | FINd, IFInd, EXClude, IX, FNX, INX       |
 |  カーソル上の文字列探索| FWF, FWB, IWF, IWB                       |||~v124R~
 |  文字列置換            | CHAnge, CNX                              |
 |  英大文字固定          | CAP                                      |
 |  ソート                | SORt                                     |
 |  コード変換            | CV                                       |||~v124R~
 |  UTF8モードSW          | UTF                                      |||~v124R~
 |  EBCDIC関連            | EBC                                      |||~v125R~
 |  行分離                | SPLit                                    |
 |  パラグラフ整形        | TFLow                                    |
 |  行位置付け            | LOCate                                   |
 |  リガチャーモード      | LIG                                      |||~v129R~
 |  結合文字表示モード    | CMB                                      |||~v129R~
 |  カーソル移動          | POSition                                 |
 |  文字入力              | KEY                                      |
 |  行一括削除            | DROp                                     |
 |  表示、非表示反転      | FLIp(XX)                                 |||~v124R~
 |  修正戻し              | UNDo                                     |
 |  Undo戻し              | REDo                                     |||~v126R~
 |  取消                  | RESet                                    |
 |  画面分割              | HSPlit, VSPlit                           |
 |  分割画面交換          | SWAp                                     |
 |  裏画面表示            | NEXt, PREvious                           |
 |  メニュー画面呼出      | =                                        |
 |  スクロール量設定      | SCRoll                                   |
 |  行番号表示            | NUM                                      |
 |  行番号振直し          | REN                                      |
 |  タブ表示              | TAB                                      |
 |  挿入/置換             | INS                                      |
 |  横書/縦書             | CSD                                      |
 |  HEX入力モード         | XIN                                      |
 |  HEX２段表示           | HEX                                      |
 |  桁定規                | COL                                      |
 |  行変更タグ            | CID                                      |
 |  簡易計算              | XBC                                      |
 |  簡易表計算            | TC                                       |
 |  プロファイル保存      | PROfile                                  |||~v124R~
 |  INIファイル出力       | INI                                      |
 |  オプション設定        | OPT                                      |
 |  バージョン            | VER                                      |
 |  ファイル外部実行      | SUB                                      |
 |  編集CMDファイル実行   | EXE                                      |
 |  関連付け実行          | ASS                                      |
 |  シンタックスハイライト| SYN                                      |||~v124R~
 |  タイマー実行          | AT                                       |
 |  休眠                  | SLEep                                    |
 |  DOS コマンド          | DOS, >                                   |
 .------------------------.------------------------------------------.

********************
 (B) 補足          *
********************

   - 各画面の2行目がコマンド入力行です， ===> のあとに入力します.
     キーワードに大文字/小文字の区別はありません.
   - ";"で区切れば複数のコマンドを一度に入力できます
       例.  end;e file2.c;vsp;e file1.c
   - 最初の語がコマンドで最初の 3 文字迄でコマンドを識別します,
     省略形式は 1 文字と区切り文字で指定します.
     ("=" (メニュー画面呼出) と ">" (DOS コマンド) は 例外で後に区切り
     文字を付けなくてよく, =X や >d: などとしてよい)                  
     幾つかのコマンドには 機能キーが割り当ててあります( (1)を参照 )
   - 語について。(オペランドの解析)
     半角スペース( )とコンマ(,)を語の区切文字とします,半角スペースや
     コンマを語に含めるには引用符 (') 又は (") で囲みます.
     終わりの引用符はつぎに語の区切りを必要とします.
     引用符内に引用符を含む時は引用符を2つ続けます.
            例         abc def            --->  (abc) と (def)
                       abc,def            --->  (abc) と (def)
                       "abc def"          --->  (abc def)
                       "abc"" f", ''''    --->  (abc" f) と (')
                       'abc"",f' ,"''"    --->  (abc"",f) と ('')
                       "abc def""g x      --->  ("abc def""g) と (x)
                       ab'c def"          --->  (ab'c) と (def")
                       "" '',,a           --->  () と () と () と (a)
     (ファイル名/ディレクトリー名にスペースが含まれる時は全体を引用符で
      囲んで下さい.dir\"a b" ではなく "dir\a b"とする)
   - 表記法
            キーワード は省略形のある場合は有効文字の範囲を大文字で表示
            [...]       [ ]内は省略可能
            {...|...}   { }内は択一選択

   - CANCEL/UNDO/SAVE など 確認メッセージが出た時は,続けて同じ
     オペレーションをすればコマンドが実行され,Esc で取り消されます.
                                                                      
   - つぎのコマンドの変更はオプション保存ファイルに保存され,
     次にエディターを立ち上げ直した時もその変更が有効です.
       .NUM    行番号表示桁数(各画面毎)
       .TAB    タブ表示モードとタブ間隔
       .CID    省略時のCID付加モード
       .OPT    削除戻しのモード
       .SCRoll スクロール量(各画面毎)
       .FINd/  探索/置換文字列,探索方向/範囲
        CHAnge

   - ファイルの経路名に *\ , **\ , ^*\ , *: が指定できます
     *\  : ファイル画面なら現表示ファイルのディレクトリー
           ディレクトリーリスト画面なら現表示ディレクトリー
     **\ : *\ の親ディレクトリー, **\**\ のような指定もできます
     ^*\ : 画面分割しているとき他方の画面で開いているディレクトリー、
           開いているのがファイルならその経路名。
     *:  : *\ と同じリモートホスト。

*********************
 (C) コマンド(ABC順)*
*********************

   = メニュー画面呼出

        =[コマンド]

            -メニュー画面を呼出しメニュー画面にオプションを入力する時に
             使います.例えば 画面分割している時に =x と入力すれば
             分割画面の一方を終了させることになります
#if defined(WIN) || defined(XXE)

   = 関連付け実行

        ASS  filename

            -ファイル名拡張子に関連付けられたアップリケーションを起動。
             例） ASS abcd.xls

#endif

#ifdef WIN

   = タイマー実行

        AT  [-i] interval [repeat-count];comand-1;command-2,...;command-n

            -間隔を置いてコマンドを繰り返し実行
             中断はEscキーを2回連続して押す。

            interval    :間隔、秒。
            repeat-count:繰り返し数。省略すると無限回。
            -i          :コマンドエラーがあっても無視して続ける。
                                                                      ||~v124I~
          標準出力がある場合は=6画面上で実行すると良いでしょう。      ||~v124I~

#endif

   = Bounds                                                           
                                                                      
        {BOUnds | BNDs}  [ ? | [ col1 [ col2 ] [ EXT ] ] ]            
                                                                      
            -境界値を設定。                                           
             境界値はFind/Change/Sort/Split/Tflowコマンド、           
             シフト系(<,>,(,),[,]),ペースト系(o,p,n),比較(=),変換(u,_)/Tflow(TF,:,;)行コマンドで作用する。
            -ディレクトリーリスト画面で使用するとそのディレクトリーメンバーの省略値の設定となる。
            -設定を次のセッションでも有効にするには INI コマンドを使用する(iniファイルに書き出します)。
                                                                      
            ?        :ヘルプメッセージ出力                            
            col1/col2:左右の境界のカラムを指定。                      
                      "0"は設定値のクリアー、"*" は現在値を変更しないの意味。
                      何もオペランドを指定しないと両方をリセットする。
            EXT      :現在開いているファイルの拡張子に対する省略値を設定する。
                                                                      
   = ファイル表示

        {BROwse | BT | BB | BH | BN | BC(=BL) | BCN(=Bi) | BK | BKN(=BJ) | B8}||~v124R~
           ファイル名 [オプション...]

            -更新不可のモードでファイルを開く.
             ディレクトリーをBrowseで開いた場合次の更新系行コマンドは
             使えません。 Attrib,Del,Move,Zero,0,/。
            -コマンド名は対象のファイルのタイプで使い分ける。(EDIt参照)
             オプションも EDIt コマンド参照。

   = 英大文字固定

        CAP [ON|OFF] [TSO|DEFAULT|CMD]

            TSO     :TSOファイルの省略値を設定する。
            DEFAULT :TSOファイル以外のファイルの省略値を設定する。
            CMD     :CAP ON の効果をコマンド入力行などファイル内容以外の
                     フィールドにも適用する。
                     但しファイルがCAP ON のときにのみコマンド行入力を大文字変換する。||~v124R~

            -ファイル画面入力を大文字固定する。
             英小文字入力するにはShiftキーを使用する。
             CapsLockキーの状況は無視されます。
             CapsLockキーはファイル内容以外の場所で効果を持ちます。
             (注)Linuxコンソール版ではシフトキーが判定できないので
                 大文字小文字の反転機能になります。
                 すなわちCAP ONの効果は、CapsLocksオフのときはその他のバージョンと
                 おなじですが、CapsLocksオンのときはシフトキーなしで小文字入力、
                 シフトキーを使うと大文字入力になります
            -TSO,DEFAULTどちらの指定もない場合は現在開いているファイルに対する一時的な設定。
             オペランド指定無しは現在開いているファイルの状態を反転させる。
            -省略値は TSO:ON, DEFAULT:OFF CMD:OFF です。

            EDItコマンドのCAPオプションも参照。


   = 文字列置換

        {CHAnge | CNX | IC | ICN}  {探索文字列 | * | \esc}  {置換文字列 | * | \esc | P'pics'}||~v124R~
                     [-g]                                             ||~v124R~
                     [all | next | + | prev | - | first | last]
                     [-nx] [.lab1 .lab2] [c1 | LM | RM [c2]]||~v124R~ ||~v129R~

            CHA     :非表示行を含む全行対象の置換。大文字小文字区別有り。
            CNX     :非表示行を除く置換.           大文字小文字区別有り。
            IC      :非表示行を含む全行対象の置換。大文字小文字区別無し。
            ICN     :非表示行を除く置換.           大文字小文字区別無し。

            探索文字列/置換文字列
                    :スペースを含む場合や以下に示す特殊用途の
                     文字列自身を探索する場合は引用府を使用して下さい
                     例えば "F '.exe'", "F 'set up'".
                     探索文字列を行末に限定する時は "F word\n"の様に\nを
                     付ける。
                     *= は カラム指定があればその範囲が同じ場合2行目以降を||~v125R~
                     置換文字列に置き換えます。例えば "C *= repstr 1 10 all"||~v125R~
                     探索文字列には正規表現形式も使用できます(-gオプションを指定する)||~v124R~
            *       :直前の探索/置換コマンドと同じ文字列を置換
                     探索した文字列を置換,探索方向を変えて再置換する時等
                     に使います.* は置換文字列にも使用できます.
                     例えば  c * new2 prev, c old2 * など.
                     但し、                                           ||~v125R~
                     探索文字列が *ec (UTF8変換エラー文字探索)の場合は||~v125R~
                     この文字の指定でCPU8 で開いた時の変換エラー文字を1文字づつ変更します||~v125R~
                     置換巻文字 "*" はもとの値のままエラー解除します。||~v125R~
                     解除されないままの文字はそのままファイルに書き戻されますが||~v125R~
                     解除すると書き戻しの時ロケールコード-->UTF8変換の対象になります。||~v125R~
                     例) "c *ec * all"                                ||~v125R~
                                                                      ||~v125R~
            \esc    :FINd コマンドの \esc に同じ
                     置換文字列としては .ini ファイルの Valid_Ctrl_char
                     パラメータで入力禁止とした制御文字は使用出来ません
                     タブを置換するとき後続の隙間をスペースでうめた後
                     タブが置換文字列で置換されます.
                     タブへ置換する時探索文字列がタブ1文字に置換され
                     タブ間隔にしたがって隙間が空けられます
                     従って c \t x の後 c x \t としても元には戻りません
            P'pics' :一文字ごとの文字クラス指定。".","@"などの意味はFINdコマンド参照。||~v124R~
                     置換文字列にこの形式を指定する場合は次の文字が特殊な扱いになります。||~v124I~
                     3つの特殊文字以外はそのまま使用されます。        ||~v124R~
                     長さも探索文字列と同じである必要はありません。   ||~v124R~
                                                                      ||~v124I~
                     "=" : 探索文字列の同じ位置の文字は置換しません   ||~v124I~
                     "<" : 英小文字変換。                             ||~v124I~
                     ">" : 英大文字変換。                             ||~v124I~
                     例   c AaBbCc P'<=>>=.Xy'                        ||~v124R~
                       は "AaBbCc" を "aaBBC.Xy" に置換               ||~v124R~
            -g      :探索文字列が正規表現形式であることを指示。       ||~v124R~
                     正規表現の記述方式はFINdコマンド参照。           ||~v124R~

            all     :ファイル全体を探索し全ての一致する文字列を置換
            allkx   :KeepX。ファイル全体を探索。
                     見つかった行が非表示行でも表示行にしない。
            next    :カ−ソル位置より下を探索し置換,これが省略値
            +       :nextと同じ
            prev    :カ−ソル位置より上を探索し置換
            -       :prevと同じ
            first   :ファイルの最初から探索,一致する最初の文字列を置換
            last    :ファイルの最後から探索,一致する最初の文字列を置換
            .lab1/2 :行番号欄に設定したラベルを対で指定して探索行範囲を
                     限定する.行番号を使用しての範囲指定も可.
            c1      :探索範囲の左端桁位置.                            ||~v129R~
            c2      :探索範囲の右端桁位置.                            ||~v129R~
            LM      :探索範囲を左マージンに限定
            RM      :探索範囲を右マージンに限定
            -nx     :非表示行は対象外。(CNX/ICNに同じ)                

            -大文字/小文字区別 あり
            -同じ語の再置換/反転再置換は機能キー(F6/Shift+F6)を使用.
             Find とは異なりファイルの最初/最後に戻っての再置換はしません.
             必要ならF5で戻ってからF6して下さい
            -オペランド値のみをコマンド行に入力し再探索置換/反転再探索置換
             の機能キー(F6/Shift.F6)を押せば それぞれ next/prev 置換と
             なります.コマンド動詞(省略形のみ認める)から入力して機能キー
             を使用することも可能
            -タブとそのタブによるスペースは空白文字と一致すると見なされます
            -探索/置換 文字列の指定のしかたについては,先の語についての
             記述を参照(文字列削除には CHA xxxx "" の様に入力します)
            -CHAngeの後のF5（再探索）大文字小文字区別あり探索です

   = 行変更タグ (Change ID)

        CID [on | off | clear | shift | defon | defoff | top___ | copyon | copyoff | ?]||~v125R~
                    [ [cid-type|prefix[,postfix]] | [APPEND|NOAPPEND] ]          ||~v124R~

                    :オペランドなしは ? 指定とみなします
            on      :現ファイルの保存時に変更行に変更タグつけます
            off     :現ファイルの保存時に変更行に変更タグつけません
                on/offはそのファイルを閉じると無効になります。        ||~v124I~
            clear   :現ファイルの全行の変更タグ取り外します
                     クリアーするのはロード前の変更タグのみで,ロード後の
                     変更タグの付与は現在のオプション値に従います
                     従ってすべての変更タグを取り除くには編集でロード後
                     更新せずに CID clear を入力し直ぐ保存をすればよい
                     マージン指定のファイルではCID ヘッダー行で指定した
                     CID桁位置が左右のどちらのマージンかによって
                     対象となるCIDの探索範囲が限定されます.
                     prefix を指定するとそのprefixのCIDのみクリアーされます||~v29tR~
            shift   :現ファイルの全行の変更タグの位置を整列します
                     位置は INI ファイルの Change_ID_Type_xx パラメータ
                     で指定しますが,このパラメータを変更してもそれ以降に
                     修正された行のみ新しい位置に変更タグがつけられます.
                     そこで全行の変更タグを整列するためにこのパラメータ
                     を使用します.その位置にデータがある場合はデータの
                     後に変更タグをつけます.
                     整列位置はCID HEADERでファイルごとにも設定できます
                     マージン指定のファイルではCID ヘッダー行で指定した
                     CID桁位置が左右のどちらのマージンかによって
                     対象となるCIDの探索範囲が限定されます.
                     また左マージンCIDの時CID位置にデータがある時は
                     シフトはされせん

            defon   :on/off の入力がないファイルの省略時値は変更タグ付与
                     とします
            defoff  :on/off の入力がないファイルの省略時値は変更タグなし
                     とします
                 defon/defoffはセッションを跨って保存されます         ||~v124I~
            top___  :CID ヘッダー行を挿入します。
                     ___は任意の文字(topのみもOK)でワークディレクトリー
                     に xe_top.___を用意することで任意のCIDヘッダー行を
                     設定することができる。ファイルが無い場合
                     topa ではすべてのオプション付きの行を, top では
                     更新回数オプションのみの行を挿入します。
                     COBOL用にはtopc,topcn(SPF 行番号付き),
                     topk(COBOL行番号がスペース),topkn(SPF行番号付きの
                     topk)を省略値として用意しています。
           copyon/                                                    ||~v125R~
             copyoff:Copy 編集行コマンドの省略値を設定。COPYON の時、複写元の行のCIDもカットせずに複写。||~v125R~
                     (注)編集行コマンド AC/BC(After/Before) はこの設定とは別ににCID付で複写する時に使用します。||~v125R~
            ?       :現ファイルの CID オプションと省略時オプションを表示
                     CIDヘッダー行が再評価されCIDヘッダー行の変更が
                     反映されます

            cid-type:変更タグのタイプを指定します
                     (c,asm,doc等の.ini ファイルの Change_ID_Type
                      パラメータの各行の拡張子リストの最初の拡張子を指定)
                      on/clear/shift のときに指定可能
                      例えば "cid clear c"                            ||~v29tR~
                      CID HEADERがあるばあいはonで変更は出来ません
                      clear/shiftではそのタイプのCIDのみをクリアー/シフト
                      します.ファイルのCIDタイプは変更されません.
                      (CIDタイプ指定のないclear/shiftでは現在のCIDタイプ
                       のCIDが対象となります.CID HEADERがある場合は
                       その時点でファイルのCIDタイプが変更された後
                       そのタイプのCIDがclear/shiftされます.
                       1行目にCIDが無いあるいは削除した場合ファイルの
                       CIDは変更されません)
            prefix  :拡張子の代わりに対応する(.iniで指定された)
                     //,";;",|| などの 2 文字の前置文字を指定できます
                     例えば　"cid clear //" は "cid clear c" と同じです||~v29tR~
            postfix :0 から 2 バイトまでの後置文字を指定する
                     on のとき後置文字つきのCIDを設定する
                     clear のとき後置文字つきのCIDをクリアーする
                     shift のとき後置文字つきのCIDを整列する
            (",",";"," ",をprefix,postfixに指定する時は引用符が必要)
                                                                      ||~v124I~
            APPEND| :設定するCIDが現在の行に設定されているものと異なる場合||~v124I~
            NOAPPEND 現在のものは残してその後ろに新たなCIDを設定します。||~v124I~
                     CIDタイプが日付の場合は日付が異なるとき追加になります。||~v124I~
                     CID位置が固定されてない場合のみ作用します。      ||~v124I~
                     on/off/defon/defoff とともに指定します。         ||~v124I~
                     NOAPPEND は APPEND の取り消し

   = 結合文字表示モード                                               ||~v129R~
                                                                      ||~v129R~
        CMB                                                           ||~v129R~
                                                                      ||~v129R~
            - A+":" キーのコマンド版                                  ||~v129R~
            - CPU8(UTF8ファイル)のユニコード結合文字の表示方法(３パターン)を変更する||~v129R~
              SPLIT(1文字として分離表示)-->UNPR(代替文字表示)-->COMB(結合表示)-->SPLIT...||~v129R~
            - 代替文字は OPT UNICOMB コマンドで設定する               ||~v129R~
                                                                      ||~v129R~
   = 桁定規

        COLs [on|off] [ALL|type|default]                              ||~v129I~

            - 桁定規の表示.on/offの入力がない場合は現況の反転。
            - type には 省略時の定規以外を使用する時に指定する.
              対応する定規ファイルをワークディレクトリーに作成して置く.
              省略時の定規に戻す時は単にonのみを指定する。            
#ifdef UNX
              ファイル名は "xe_col_.type".省略時の定規を変更したい時は
              xe_col_.col を作成すればよい.
#else
              ファイル名は "xe!col!.type".省略時の定規を変更したい時は
              xe!col!.col を作成すればよい.
#endif
              定規上に文字 "*" を設定すると最大20個までのタブ停止位置
              が設定できます。
              例えば、次のような行を定規ファイルに設定します。
              ......*..1.........2.........3.........4*........5.....
            - ALLを指定すると全てのファイルをCOL on で開く。          
            - ディレクトリーリストを開いて "COL on type" と入力するとそのディレクトリーのメンバーの省略値となり||~v129I~
              "COL off" でその省略値をリセット。work ディレクトリーに次のゲージファイルを用意する必要がある||~v129I~
            - ディレクトリーリストで "COL on" としたとき個別のメンバーにたいしてはそのメンバーを開いて||~v129I~
              "COL [on|off] [type|default]"                           ||~v129I~
                default:ファイルに対してはdirの指定にかかわらず省略値のゲージを表示||~v129I~
                        ディレクトリーに対しては指定できない          ||~v129I~
                on     :新たな type の指定がなければディレクトリーの指定に従う||~v129I~
                off    :ゲージを表示しない。ファイルの設定はリセットされるので次に on すると||~v129I~
                        ディレクトリーの設定が復活する                ||~v129I~

   = ファイル複写 (別ファイルを現表示画面へ複写)

        {COPy | PASte}  [ファイル名]  [ CPLC | CPU8 | CPEB[:codepage] ] [IE]     ||~v125R~||~v125R~
                    [/M{T|P|U|M|E|R|V}] [/F{nn|vfmt}] [-S{r|i|d}]              ||~v125R~||~127BR~

            CPU8/CPLC: "source-file"のEncoding。                      ||~v125R~
             /CPEB     必要なら開いたファイルのEncodingに変換の後、編集画面にCopy/Moveする。||~v125R~||~v125R~
                       プロファイルの記録をチェックするので通常はCPxxの指定は不要でしょう。||~v125R~
             　　　　　PASte の場合、CUT の時コードページがプロファイルに記録され||~v125R~
                       PASte時に参照され変換が必要なら自動的にされるので指定する必要はないでしょう。||~v125R~
                       COPyの場合でも xe で EDIt/SAVe/CREate/REPlace されたファイルなら同様です。||~v125R~
                                                                      ||~v125R~
                       CPEB:codepage 形式で cfg ファイル指定以外のコードページを指定できます||~v125R~
                       プロファイルの記録による変換をしたくない場合は コピー先を指定する||~v125R~
　　　　　　　　　　　 "A"(after)/"B"(before)行コマンドに"B"(Binaryモード)サフィックスを指定してください||~v125R~
                          例)  COP ebcf1                              ||~v125R~
                               :                                      ||~v125R~
                               AB                                     ||~v125R~
                                                                      ||~v125R~
            IE       : 変換エラーを無視。エラー文字はそのまま複写され、"?"で表示される。||~v125R~
                       (バイト値はそのまま保持される)                 ||~v125R~
                       指定がないとエラー発生行で複写は停止。         ||~v125R~
                       ファイルが IE オプションで開かれている時は不要。||~v125R~
            /M       :複写元のファイルの改行コードの指定。            ||~v125R~
                      P:0d0a(PCファイル）                             ||~v125R~
                      U:0a  (Unixファイル)                            ||~v125R~
                      T:0a と 0d0a の両方                             ||~v125R~
                      M:0d  (Macファイル)                             ||~v125R~
                      E:15  (EBCDICファイル)                          ||~v125R~
                      R:固定長レコードモード。Fnn でレコード長を指定する    ||~v125R~||~127BR~
                      V:可変長レコードモード。 /Fvfmt で レコードヘッダー形式を指定する。||~127BR~
            /Fnn     :レコードサイズ                                  ||~v125R~
            /Fvfmt   :可変長レコード形式。EDItコマンド参照            ||~127BR~
            -S{r|i|d}: SO/SI オプション                               ||~v125R~
                       r : 画面のファイルが EBCDIC で CPLC/CPU8 を指定した時||~v125R~
                           SO/SI の時可能であれば前後のスペースを置換する||~v125R~
                           画面のファイルが EBCDIC でなく CPEB を指定した時||~v125R~
                           SO/SI をスペースに置換する                 ||~v125R~
                       i : EBCDIC への変換の時 SO/SI を挿入する       ||~v125R~
                       d : EBCDIC から変換の時 SO/SI を削除する       ||~v125R~
                                                                      ||~v125R~
            -指定のファイルの全行を現表示画面の行コマンドで指定の位置に
             複写する.行番号非表示のときの宛先行(After)を指定する為には
             行挿入複写(Alt+i)キーを使用して下さい.
             0 行ファイルにはあて先指定は不要です
             該当するファイル名が１つに特定できる時はパス名などに
             ワイルドカードを使用してもよい。
             PASte の場合ファイル名はCUTコマンドで保存された::CB2(ワークDir内の第二クリップボード)に固定||~v124R~||~v125R~
             されているのでファイル名は指定しても無視されます。       ||~v124R~

         (注)ファイル間のコピーには XCOpy を使用するかあるいは
             DOSコマンド >COPY を使用する.
             表示/編集画面以外では COPy コマンドは XCOpy と見なします

   = ファイル作成 (表示画面内容から別ファイルを作成)

        {CREate | REPlace | APPend | CUT}  [ファイル]  [/M{T|P|U|M|E|R|V}] [/F{n[-m]|vfmt}]||~127BR~
                     [[-x|-nx] [.lab1 .lab2]
                     [ CPU8 | CPLC| CPEB[:codepage] ] [-IE] [-S{r|i|d}]                         ||~v124R~||~v125R~||~v125R~||~v125R~

            ファイル:ワイルドカード指定もOK.
                     経路のワイルドカードはユニークに経路が決定される
                     ものであること、メンバーのワイルドカードは改名用。
                     CUT のときファイルは"::CB2"と固定されているので指定できません。||~v124R~
                     従ってCUTの時はオプションには全て　-IE のようにプレフィックス "-" をつけてください||~v125R~
            CRE     :新規ファイル作成(存在する時はエラー)
            REP     :既存ファイルの置換(確認応答を要求しない,
                     存在しない時は新規作成)
            APP     :既存ファイルの最後に追加,存在しない時は新規作成.
                     既存ファイルと複写元ファイルのレコードモード、コードページが||~127BR~
                     異なる場合は複写元ファイルの属性を指定する必要があります||~127BR~
            CUT     :::CB2(ワークDir内の第二クリップボード)に複写。   ||~v124R~
                     ::CB2からの複写にはPASteコマンドを使用します。   ||~v124R~
            -x      :非表示行のみ対象とする。
            -nx     :表示行のみ対象とする。
            .lab1/2 :-x,-nxのとき範囲をラベル指定する。

            /M      :改行コードを変えて出力することの指定。CRE/REP で使用。||~v125R~
                     T:textモードwrite. Linux:0a, Windows:0d0a.       ||~v125R~
                       Windows では 単独 0a も 0d0a に変換される。    ||~v125R~
                     P:0d0a(PCファイル）
                     U:0a  (Unixファイル)
                     M:0d  (Macファイル)
                     E:15  (EBCDICファイル)                           ||~v125R~
                     R:レコードモード。                               ||~v125R~
                     V:可変長レコードモード。 /Fvfmt で レコードヘッダー形式を指定する。||~127BR~
            /Fn[-m] :レコードサイズ、マージン                                            ||~v124R~||~v125R~
                     レコードモードに変更する時、レコードサイズを変更する時に指定||~v125R~
            /Fvfmt  :可変長レコード形式。EDItコマンド参照             ||~127BR~
#ifdef UTF8SUPP                                                       ||~v125R~
            CPU8/CPLC: 出力ファイルのEncoding指定。                   ||~v125R~
             /CPEB     必要なら指定のEncodingに変換の後,書き出される。||~v125R~
             　　　　　CUT の場合、コード変換はPASteの時に自動的にされるので指定する必要はないでしょう。||~v125R~
                       CPEB:codepage 形式で cfg ファイル指定以外のコードページを指定できます||~v125R~
            IE       : UTF8-->各国語変換で変換エラーを無視して出力。  ||~v125R~
                       エラー文字は"?"に置換されている。              ||~v125R~
            -S{r|i|d}: SO/SI オプション。                             ||~v125R~
                       r : 画面のファイルが EBCDIC で CPLC/CPU8 を指定した時||~v125R~
                           SO/SI をスペースに置換する                 ||~v125R~
                           画面のファイルが EBCDIC でなく CPEB を指定した時||~v125R~
                           SO/SI の時可能であれば前後のスペースを置換する||~v125R~
                       i : EBCDIC への変換の時 SO/SI を挿入する       ||~v125R~
                       d : EBCDIC から変換の時 SO/SI を削除する       ||~v125R~
#endif                                                                ||~v125R~

            -[-x|-nx]オプションでないときは
             現表示ファイル上で複写する範囲を行コマンドで指定する.
             行コマンドmを使用すると該当行は削除されます。(CUTの場合切抜きに相当)||~v124R~
             行番号非表示モードのときは行マーク開始/終了(Alt+h)キーで
             行の範囲を指定して下さい.
                                                                      ||~v124R~
   = 横書/縦書 (CurSor Down)

        CSD  [on | off]
            on      :縦書き
            off     :横書き
            (無指定):縦書き<-->横書きをスィッチします

            -縦罫線を引く時などに使えます


   = コード変換 (ConVersion)

        CV   {e2s|s2e|e2e|s2s|s2j|j2s|e2j|j2e} [z] [NX] [.lab1 .lab2]
        CV   {s2u|u2s|s2f|f2s|u2f|f2u|e2f|f2e|m2f|f2m} [bom] [ucs4] [be|le] [ibm|nec]||~v125R~||~v125R~
              [\u] ['err-rep-char']
        CV   {b2s|s2b|b2e|e2b|b2a|a2b} [CRLF|ANK] [CP290|CP1027|KANA-EXT|ENG-EXT]||~v125R~||~v125R~
              [JIS78] [-S[a|d|r|m|s]|-SBCS] ['err-rep-char']          ||~v125R~
        CV   {K2L|L2K}
        CV    x2c [EBC] [i[-m[:{n|max|rep}]]] [mult | -Hpre[XXpost]]
                  [CRLF|ANK] [CP290|CP1027|KANA-EXT|ENG-EXT] [JIS78] [-S[bcs|a|d|r]||~v125R~
        CV   {M2B|B2M} [CP290|CP1027|KANA-EXT|ENG-EXT] ['err-rep-char']||~v125R~
        CV   {M2B|B2M|B2F|F2B}     [CPEB:ebcdic-codepage] [-S{a|d|r}]         ||~v125R~||~126DR~
        CV   B2B           [CPEB:ebcdic-codepage] [-S{a|d|r}] [SETCP] ||~v125R~
        CV   M2M       -F:charset -T:charset [-SBCS] [-ANK] [ICU] ['err-rep-char']         ||~v124R~||~v126R~

          2 番目以降の形式は DOS版ではSupportされません。
          [NX], [.lab1 .lab2]は共通。
          (同じ機能のバッチコマンドxcvも同梱しています）

            e2s/s2e :EUC<-->SJIS
            s2s     :SJIS半角カタカナを全角に変換
            e2e     :EUC半角カタカナを全角に変換
            s2j/j2s :SJIS<-->JIS
            e2j/j2e :EUC <-->JIS
            s2u/u2s :SJIS<-->UCS2(2byte Unicode)
            s2f/f2s :SJIS<-->UTF8(8bit UTF)
                                                                      ||~v124R~
#if defined(W32)||defined(LNX)                     ||~v124R~          ||~v125R~
                                                                      ||~v124R~
            e2f/f2e :日本語EUC<-->UTF8(8bit UTF)                      ||~v124R~
            m2f/f2m :環境のコードページ<-->UTF8(8bit UTF)             ||~v124R~
                     現在開いているファイルのLocaleコードとUTF8との変換。||~v124R~
                     変換不能文字は"?"に置換しますが変換エラーでなくても||~v124R~
                     不正なLocaleコードにより変換は非可逆(Locale->utf8->Localeで元に戻らない)||~v124R~
                     であることもあります。                           ||~v124R~
                                                                      ||~v124R~
#endif                                                                ||~v124R~
                                                                      ||~v124R~
            u2f/f2u :UCS2<-->UTF8
            b2s/s2b :IBM-EBCDIC<-->SJIS 変換。
            b2a/a2b :IBM-EBCDIC<-->ASCII 変換。SO/SI(0x0e/0x0f)は無視されます。
            k2L/L2k :半角カタカナ<-->英小文字変換。
                     EBCDIC-->ASCII変換で英小文字が半角カタカナに
                     誤って変換されてしまったファイルの英小文字を復元
                     k2L:CP290 による変換をCP1027で変換しなおす。
                     L2k:CP1027による変換をCP290 で変換しなおす。
            x2c     :有効なヘキサ文字列を(スペースは無視)バイトコード変換。
                                                                      ||~v124R~
#if (defined(W32)||defined(LNX))                                      ||~v124R~
                                                                      ||~v124R~
            M2B/B2M :Localコードページ<->EBCDIC 変換を mapfileに従って変換します||~v124R~||~v125R~
                     mapfileにはEBCDIC/Localのコードページ、変換の補正などを定義します||~v124R~
                     mapfile は ini ファイルで指定します              ||~v125R~
                     'err-rep-char'はmapfileのSUBCHARを上書きします。 ||~v124R~
                     "EBCDIC変換"参照                                 ||~v124R~
                     CPEB:ebcdic-codepae オプションを指定するとmapfile定義以外のコードページを指定できます。||~v125R~
                                                                      ||~126DR~
            F2B/B2F :UTF8<->EBCDIC 変換(M2B/B2Mで"M"=UTF8)            ||~126DR~
                     F2Bの場合、CPU8で開いたファイルは直接変換できないので||~126DR~
                     CPLCで開いてF2Bを実行してください。              ||~126DR~
                     また改行コードは/Meを指定しないと変更されません。||~126DR~
                     例えば "END /Me" または "SAVe xx /Me".           ||~126DR~
                     保存後にも "EDIt xx /Mue" で 改行コードをEBCDICに変更できます||~126DR~
                                                                      ||~126DR~
                     B2Fの場合も同様に改行コードの変更が必要です。    ||~126DR~
                                                                      ||~v125R~
            B2B     :EBCDIC ファイルを開いて、異なるコードページに変換する時に使用します||~v125R~
                     CPEB:ebcdic-codepae で変換先のコードページを指定する||~126DR~
                     変換元のコードページはファイルのコードページ。   ||~126DR~
                     コンバーターは ::xeebc.map の指定に従い          ||~126DR~
                     ICU か iconv(Linuxの場合) を使用します           ||~126DR~
                                                                      ||~126DR~
            SETCP   :開いたEBCDICファイルのコードページをCPEB:指定のコードページに変換後に||~v125R~
                     そのコードページで表示します。                   ||~v125R~
                     SETCPの指定がない場合は、変換後のコードは元のコードページで表示されます||~v125R~
                     変換を伴わないコードページの変更には "EBC SETCP:codepage" コマンドを使用してください。||~v125R~
                                                                      ||~v124R~
            M2M     :任意のコードページ間の変換。                     ||~v124R~||~v125R~
                     -f:charset -t:charset に コードページを指定する。||~v125R~
                     指定可能なコードページ番号は                     ||~v127R~
                       "xe -c?"   (Windows)                           ||~v127R~
                       "iconv -l" (Linux)                             ||~v127R~
                       "uconv -l" (ICU)                               ||~v127R~
                     でリストされる。                                 ||~v127R~
                     一方は省略できます、そのときは Windowsの場合"0"(=CP_ACP)、||~v124R~
                     Linuxの場合現在のLocaleとiconvのリストから決定する。||~v124R~
                     Windows では "65001" の代わりに "UTF8"を指定できます。||~v124I~
                     EBCDICの変換には使用できません。 B2M/M2B/B2B を使用してください。||~v125R~
#endif                                                                ||~v124R~

            z       :半角カタカナを全角に変換。
#ifdef UNX
                     変換タイプの指定が無ければ省略値は e2eのカタカナ変換
#else
                     変換タイプの指定が無ければ省略値は s2sのカタカナ変換
#endif
             BOM       :u2f/s2f/f2u/f2sの時ファイル先頭のBOM(UTF-8の
                       タイプ識別子)をCHK/WRITEするとき指定。
             UCS4      :u2f/f2uで4バイトユニコードで読み書きする      ||~v125R~
                        "UCS4"を指定しない時 f2u は u-10000 以上に対しサロゲートペアを出力します||~127MR~
             BE|LE     :u2s/u2f/s2u/f2uのときUnicodeをの読み書きが
                        BigEndianかLittleEndianか指定。
                        省略値は UNIXではBE、以外はLE。
             ICU       :M2MでICUコンバータを使用する                  ||~v126R~
             IBM|NEC   :u2s/f2sのとき1つのUnicodeに対し複数のSJISコード
                        ポイントがある時どのSJIS領域に対応させるかの指定。
                        省略値は IBM。
             JIS78     :JIS78(旧JIS)->JIS83(新JIS)で 28文字のコードポイント
                        の入れ替えがあったがJIS78に従った変換をする。
             ANK       :制御文字は置換文字で置き換え。
             \u        :\uxxxx形式のユニコードを置換する(u2s,u2f)
                       :\uxxxx形式のユニコードへ置換する(s2u,f2u)
             CRLF      :制御文字はCR,LFのみ置換する。                 ||~v125R~
             EBC       :x2cの結果をIBM-EBCDIC-->ASCII変換する。
                        SBCS 指定でない場合 SO/SIは rep オプションでない限り||~v124R~
                        次行に継続する。                              ||~v124R~
             CP290/    :b2s/s2bのEBC変換でIBM-CP290 SBCS変換テーブル(カタカナ拡張)使用。||~v125R~
              CP1027    SBCS変換の省略値はIBM-CP1027(英小文字拡張）。 ||~v125R~
             KANA-EXT/ :KANA-EXT:CP290                                ||~v125R~
              ENG-EXT    ENG-EXT:CP1027                               ||~v125R~
             i[-m[:{n|max|rep}]]
                       :i-m:入力桁範囲。指定無しは行頭。m 無しは行末まで。
                        n:出力挿入桁位置。省略値は行頭。
                        max :出力位置を最長行の行長位置とする。
                        rep :HEX文字その位置で置換する。
             mult      :HEX文字エラーがあっても次のHEX文字を探す。
             -Hpre[XXpost]:prefixとpostfixの間を変換。
                           XXがprefix,postfixの区切り。
                       例。-H0x'     -Hx'xx'
             -S[a | d | i | r | m | s | bcs]                              ||~v124R~||~126DR~
                 a:行頭にSOがあるものと想定する。
                 bcs:SBCSモード（DBCS置換をしない）
                 d:B2xでSO(0x0e)/SI(0x0f)を削除,x2BでSO/SIを設定しない。。||~126DR~
                 i:x2BでSO(0x0e)/SI(0x0f)を挿入                       ||~126DR~
                 r:x2Bで前後がスペースならSO/SIで置換、               ||~126DR~
                   スペースでなければSO/SIを挿入。
                   B2xではSO/SIをスペース置換                         ||~126DR~
                 m:B2xでSIが行末までない時次行SOが継続とみなす。      ||~v124R~||~126DR~
                 s:上記 -Sr の操作でSO/SIの挿入による拡張分を後続のスペースを縮める||~v124R~
                   ことで補う。2桁以上の連続スペースからSO/SI挿入による増加分を相殺します||~126DR~
                 省略値はB2xではスペースに置換、x2BではSO/SI挿入。    ||~126DR~
                 但し外部コンバーター使用(B2M/M2B,B2F/F2B)ではxeebc.mapが||~126DR~
                 省略値を定義します                                   ||~126DR~
             err-rep-char:変換できない時出力する文字を指定する。      ||~v124R~
                          HEX文字指定もＯＫ。SBCS と DBCS と両方する時は2回別々に指定する。||~v124R~
                          例) xcv f2s "."                             ||~v124R~
                              xcv m2b  "6f" "4040"                    ||~v124R~
                              xcv b2m   "?-"                          ||~v124R~
                          省略値は '?'。
             NX        :非表示行は対象外とする。
             .lab1/2   :対象行範囲をラベル行コマンドIDで指定。

   = DEL コマンド

        編集画面ではDROp コマンドに同じ。
        編集画面以外ではファイルDELコマンドの扱いになる。

   = DOS コマンド                                                     
                                                                      
#ifdef LNX
        [ DOS | > ] [コマンド文字列 | sh  [terminal options] ] ]      
#else
        [ DOS | > ] [コマンド文字列 | CMD [ row [col] ] ]             
#endif
                                                                      
            DOS,OS/2 コマンドをコマンド入力行から入力できます
            コマンド文字列を指定しない場合 子シェルを開始します(EXITで
            終了)
            ファイルの経路名に *\ , **\ , ^*\ , :: が指定できます     ||~v124I~
            コマンドのパラメータとしてファイルの経路名としたくない場合は||~v124I~
            ２重引用符で囲んでください。                              ||~v124I~
#ifdef LNX
  #ifdef XXE                                                          
            コマンド文字列に sh を指定すると非同期子シェルを起動します。
            gnome-terminal,konsoleをこの順で探しが見つかればそれを    
            なければxtermを起動します。                               
            iniファイルで設定もできます。                             
            オペランド無しはまたは sh 以外の場合は同期的に開きます。  
            terminalプログラムの省略値とiniファイルの設定は同様です。 
  #else                                                               
            コマンド文字列に sh を指定すると非同期子シェルを起動します。
            gnome-terminal,xterm などどのTerminalEmulatorかは
            xe/gxeを起動したときのものと同じです。
            判定できない場合はgnome-terminalになります。
            オペランド無しはまたは sh 以外の場合は画面は子プロセスの  
            窓になりなす。                                            
            オペランド無しの場合シェル窓として使いexitで親に戻りますが、
            子プロセスのシェルプログラムの省略値はdashがあればbash,   
            dashがなければshです。                                    
            dashはkubuntuでshのslink先になっており、RH9,FC5では       
            bashがshのslink先になっています。                         
  #endif                                                              
#else
            コマンド文字列に CMD を指定すると非同期子シェルを起動します。
            windows2000では buffersize を 行数、桁数(default=80)で
            指定できます。
#endif
            コマンド結果編集画面では "DOS"(>) は省略出来ます.
            『(5).DOSコマンド』の章を参照

   = 経路昇降

        {DPU|DPD}

            現表示ファイル/ディレクトリーの経路を昇(DPU)降(DPD)する。
            編集/表示モードは現表示画面に従う。
                                                                      
   = 行一括削除

        DROp  {x | nx} [rep] {all | .lab1 .lab2}

        (ファイル編集画面では DEL コマンドでも同じ意味)

            x       :非表示行の一括削除
            nx      :表示行の一括削除

            rep     :削除行に換えて,"何行削除しました"の行を追加する。
            all     :ファイル全体の時こう指定する
            .lab1/2 :行番号欄に設定したラベルを対で指定して削除行範囲を
                     限定する.行番号を使用しての範囲指定も可.
                     例えば "DRO x .from .to", "DRO nx .120 .150".
                                                                      ||~v125R~
   = EBCDIC 関連コマンド。                                            ||~v125R~
                                                                      ||~v125R~
        EBC   SETCP:codepage                                          ||~v125R~
                                                                      ||~v125R~
            SETCP : EBCDIC ファイルのコードページを別のEBCDIC コードページに設定します。||~v125R~
                      例) EBC SETCP=CP935                             ||~v125R~
                    EBC コマンドでは元のデータは変更されません。指定のコードページに従って表示されます。||~v125R~
                    従って他に変更がなければ保存操作でファイルは書き直されません。||~v125R~
                    UNDo機能で、EBC/CV コマンドの SETCP オプションで設定したコードページは戻されます。||~v125R~
                    SETCP オプションで設定したコードページはファイルを保存するとプロファイルに記録されます。||~v125R~
			        "EBC SETCP=" で省略値のコードページに戻ります。   ||~v127R~

   = ファイル編集

        {EDIt | ET | EB | EH | EN | EC(=EL) | ECN(=Ei) | EK | EKN(=EJ) | E8}||~v124R~
               ファイル名 [/P[0|1]] [CAP|NOCAP] [TC|NOTC] [NB] [NONUM] [F{n[-m]|vfmt}]||~127BR~
               [CPU8|CPLC|CPAS|CPEB] [IE] [FNU8|FNLC|FNAS]                                      ||~v124R~||~v125R~||~v125R~||~v126R~
               [/L] [/Ln] [[/O][n[t]]-[m[t]]]
               [/M[r[w]][B|C|H|K][n][o|L][X][width[S]][d]]            ||~v125R~
                                                                      
            -コマンド名は対象のファイルのタイプで使い分ける。
             (特に指定が無ければText/Binaryは自動判定する。)
             ET :テキストファイルとして開く。
                 EBCDIC ファイル以外では /Mt 指定と同じで Linux:0x0a, Windows:0x0a と 0x0d0aの両方、が改行文字ですが、||~v125R~
                 EBCDIC ファイルでは 別の /Mx 指定がない限り 0x15 を 改行文字とします。||~v125R~
             EB :バイナリーファイルとして開く。
                 0x0d0a,0x0aいずれも行区切り文字とせず行は1行は
                 width指定の長さで表示される。
             EH :ファイルを文字とHEX文字の両方で表示。どちらへも入力して出来ます。||~v125R~
                 HEX数字の大文字/小文字表示は opt HEX {upper|lower} コマンドで変更できます||~v125R~
             EN :Col73-80が行番号欄の80桁固定長のファイル。
                 行番号欄は下2桁が更新番号で自動更新される。
             EC :COL1-6が行番号の80桁固定長COBOL形式ファイル。
                 EL は別名。
             EK :COL1-6をスペースで空けたままの80桁固定長COBOL形式ファイル。
             ECN:EC かつ EN(COL1-6,COL73-80とも行番号欄)
                 Eiは別名。
             EKN:EK かつ EN(COL1-6はスペース,COL73-80は行番号欄)
                 EJは別名。
             E8 :E -f80 に同じ。                                      ||~v124R~
            -P  :P ないし P1 でマージン外(右マージン)を保護する。
                 P0 は EB(バイナリーオープン)で意味を持ち行延長は
                 マージン外で入力することによってのみ可能。
            CAP :このファイルへの入力は全て英語小文字-->大文字変換する。
                 CAP コマンドも参照。
            NOCAP:このファイルへの入力は大文字変換しない。
                  CAPコマンドで省略値をONとしている場合にそれを打ち消す時に使用する。
            TC  :タブクリアー。保存時タブは現在表示されている通りの桁数の
                 スペースに変換される。
            NOTC:en コマンドで開いた場合などTCが省略値の場合にこれを否定する
                 ときに指定する。
            NB  :ファイル保存時の一時バックアップを取らない。         
                 更新ファイル保存時のABENDでファイルが壊れるのを避けるために
                 フロッピーDisk以外のローカルファイルに対しては、保存直前で元ファイルを
                 同じDirで複写保存し出力完了後削除するが、パフォーマンス、||~v124R~
                 Diskスペースの関係でそうしたくない場合に指定する。   ||~v124R~
                 END/SAVeコマンドで -BK オプションを指定すればこのNBオプションは||~v124R~
                 打ち消されます。                                     ||~v124R~
            NONUM:RECFM=Fx,LRECL=80のTSOファイルはデフォルトでCol.73-80を行番号欄と
                  扱うので、そうしたくない場合に指定する
                  profileレコードのNUMSTD,COB,Fxx オプションは無視されます。||~v124I~
            Fn[-m]:行長をn,マージンをmにする。
                   Fnを指定するとn桁以降の入力が出来ない。
                   n=0はRECFM=FxのTSOファイルでLRECLの制約をはずすときに指定する。
            Fvfmt:可変長ファイルのレコードヘッダー形式を指定          ||~127BR~
                    RDW:LLZZ 形式(２バイトヘッダー長を含むレコード長+0x0000),省略値||~127BR~
                    H  :2バイトLL(ヘッダー長を含む長さ)               ||~127BR~
                    HD :2バイトLL(ヘッダー長を含まない長さ)           ||~127BR~
                    F  :4バイトLL(ヘッダー長を含む長さ)               ||~127BR~
                    FD :4バイトLL(ヘッダー長を含まない長さ)           ||~127BR~
                    MF :Microfocus 仕様                               ||~127BR~
                        ファイルのトップのシステムレコードがレコードヘッダー形式を指示する||~127BR~
                        (システムレコードについては詳細には関知してないのでxeで更新した||~127BR~
                         ファイルをそのままアップロードすることは避けてください)||~127BR~
                                                                      ||~v124R~
#ifdef UTF8SUPP                                                       ||~v125R~
                                                                      ||~v125R~
            CPU8: UTF8ファイルとして開く                              ||~v125R~
            CPLC: 各国語ファイルとして開く                            ||~v125R~
            CPAS: 環境変数に従う。(省略値)                            ||~v125R~
            CPEB: EBCDIC ファイルとして開く                           ||~v125R~
                                                                      ||~v125R~
              指定されたオプションはプロファイルに保存されます。      ||~v125R~
              同じファイルでは二度目以降は指定不要です。              ||~v125R~
              省略値はCPASですが、ディレクトリーに指定した場合はその中のファイルの省略値となります。||~v125R~
              ヘッダー行のファイル名の後ろの =U/=u/=L/=l/=b がそのファイルのコードページを示しています。||~v125R~
              大文字はコマンドパラメータで指定したか、以前の指定がプロファイルに保存されていたかのいずれかです。||~v125R~
              "b"はバイナリーモードオープンを示します。               ||~v125R~
              無効なUTF8文字を含む場合、CPU8を指定するか、そのファイルに対し過去に指定した(プロファイルの記録)||~v125R~
              のでなければCPLCでロードし直します。                    ||~v125R~
              UTF コマンドで省略値、CPLCリロードオプションを変更できます||~v125R~
                                                                      ||~v125R~
            IE  : CPU8のとき無効なUTF8コードのファイルは編集で開けません||~v125R~
                  エラーを無視して開く場合"IE"を指定する。            ||~v125R~
                  表示オープンでは"IE"の指定は不要。エラーは"?"で表示されている。||~v125R~
                  コードは無変換ままロードされている。                ||~v125R~
                  エラー位置は "f *ec" コマンドで探索できる。         ||~v125R~
                                                                      ||~v125R~
            FNU8|FNLC|FNAS:                                           ||~v126R~
            (Linux)                                                   ||~v128R~
              デレクトリーを開くときメンバーのファイル名のエンコーディングの解釈を||~v126R~||~v128R~
              UTF8優先かLocaleコード優先かを指定。プロファイルに記録されるので||~v126R~
              FNASはそれをリセットしてコマンドラインパラメータの /UN{8|L}を||~v126R~||~v128R~
              有効にしたい時に使用                                    ||~v126R~
              ファイルを開くときにも指定可能                          ||~v128R~
            (Windows)                                                 ||~v128R~
              Windowsの場合ファイル名はUTF16なので意味がないが        ||~v128R~
              xeはロケールコードに変換可能の場合はロケールコードで表示||~v128R~
              変換エラーとなる場合はユニコードで緑色で表示している    ||~v128R~
                                                                      ||~v126R~
            DirList上でそのモードと異なるモードでファイルを開くには"O"行コマンドで||~v126R~
            オプションを指定してください。                            ||~v126R~
#endif                                                                ||~v124R~
            -L  :ワイルドカード指定で対象のファイルが１つの場合でも
                 ファイル表示でなくディレクトリー表示する時に指定します。
            -Ln :開いた直後にn行目にジャンプします。
            -n[t]-m[t]:開始行/終了行,あるいは開始/終了オフセットを指定できます
                 ファイルのEOF位置からの位置指定は"t"をつけます。
                 Oはオフセット指定の意味です                          ||~v29WR~
             例 100-900 , -600 , 600- , 600 , /o1200-13ff , 1000t-100t , /o400t-.||~v127R~
                600 は -600 と同じです.                               ||~v127R~
             同じファイルは１つの部分しか同時には開くことができません。
            -/M:読み込み,書き込みモード;[r[w]] に P,U,T,B,M,E,R,V のいずれかを指定する||~v125R~||~v125R~||~127BR~
             r=Bのときは w は指定しない.
                P:PCモード       :0x0d0aを行区切り文字と見なす
                U:UNIXモード     :0x0a  を行区切り文字と見なす
                T:テキストモード :0x0d0a,0x0aの両方とも行区切り文字
                                  w=T とするとテキストモード出力になるので Windowsでは||~v125R~
                                  単独の 0x0a は 0x0d0a に変換される  ||~v125R~
                                  例えば r に P を指定すると 0x0a は改行文字ではなく１もじのデータ||~v125R~
                                  ですが /Mpt とすると 保存時に 0x0a は 0x0d0a に置換されます。||~v125R~
                            (注)  EBCDIC ファイルに対し "ET" コマンドは 0x15 を改行文字としますが||~v125R~
                                  /Mt は 0a ないし 0d0a を改行文字とするので違いがあります。||~v125R~
                                                                      ||~v125R~
                M:MACモード      :0x0a  を行区切り文字と見なす
                E:EBCDICモード   :0x15  を行区切り文字と見なす        ||~v125R~
                R:レコードモード :改行コードはないものとし固定長でRead/Write||~v125R~
                                  レコード長は Fn[-m] オプションで指定します||~v125R~
                                  EBC ファイルを E8 コマンドで開くときのレコードモードとします||~127BR~
                V:可変長レコードモード :改行コードはなくレコード長はレコードヘッダーに設定されている||~127BR~

                B:EBと同じ意味
                H:EHと同じ意味
                C:ECと同じ意味
                K:EKと同じ意味
                N:ENと同じ意味

              省略値は無指定の時入力は "t",出力は入力行が全行 0x0aなら
              "u",そうでなければ "p"。入力のみの指定の時は、/muのとき/muu,
              /mtのとき/mtp｡
              r!=w のとき、保存/終了時に、更新がなくてもEOLを変更して
              出力される。
                                                                      ||~v125R~
              width は 表示幅。これより長い行は連結行となる.
              バイト数なのでTAB(0x09)が含まれる場合TAB拡張により      ||~v125R~
              実際の表示幅はwidthを超えることになります               ||~v125R~
              (連結行をそれぞれ単独の行に分離するには"SPL CONT"コマンドが
              使用できます)                                           
                                                                      ||~v125R~
              s オプションによりバイナリー/テキスト編集/テキスト表示の
              各モードごとに値が保存され次の s オプション指定があるまで
              有効. 0 は 32760(省略値,DOS版は999桁)となる.            ||~v127R~
              省略値の設定のないばあいの省略値はそれぞれ
              32760(テキストファイル) 或いは 72(バイナリーファイル)。 ||~v127R~
              d オプションはディレクトリーを開く時ファイル内容説明を表示する。
                  (1).キー割り当ての省略値,機能＆キーの#14を参照。
             o|L:行番号欄表示属性をHEXオフセットあるいは行番号とする
                 バイナリーファイルでの省略値はNUMコマンドで設定
                 (設定が無ければHEX)。
                 但し,入力範囲指定のあるときはそれに従う.
             X  :HEX 2段表示。

            -ファイル名にディレクトリー名,ワイルドカードを指定すると
             ディレクトリーリストを表示。
              "."(現行ディレクトリー) や ".."(親ディレクトリー)も指定可能
              但し、ワイルドカードのときは該当するファイルが１つのときは
              /l オプションの指定の無い限りそのファイルを表示する。
              ワイルドカード指定 "*" は現表示ファイルの意味にしているので
              ディレクトリー表示のためには "**" や "*.*" を使用すること。

            -OS/2 版はシステム又は隠しファイルは更新できません(errno=60)

   = 終了

        {END | RETurn | QUIt | EXIt | CANcel}  [-NB|-BK] [CPU8|CPLC|CPEB] [IE] ||~v124R~||~v125R~||~v125R~
                     [/M{T|P|U|M|E|R|V}] [/F{n[-m]|vfmt}] [-S{r|i|d}] [-Force]         ||~v125R~||~127BR~||~v129R~

            EXI     :分割区画を終了,更新ファイルは保存されます
            RET     :コマンドプロンプトに戻る,更新ファイルは保存されます
            QUI     :コマンドプロンプトに戻る,更新ファイルは保存されない
            END     :1 つ前の画面に戻る,更新ファイルは保存されます
            CAN     :1 つ前の画面に戻る,更新ファイルは保存されません
                                                                      ||~v124R~
            -NB     :(ENDコマンドのみ)ファイル保存時の一時バックアップを取らない。||~v124R~
                     更新ファイル保存時のABENDでファイルが壊れるのを避けるために||~v124R~
                     フロッピーDisk以外のローカルファイルに対しては、保存直前で元ファイルを||~v124R~
                     同じDirで複写保存し出力完了後削除するが、パフォーマンス、||~v124R~
                     Diskスペースの関係でそうしたくない場合に指定する。||~v124R~
            -BK     :(ENDコマンドのみ)Editコマンドの-NBオプションを否定して一時バックアップを取る。||~v124R~
                                                                      ||~v124R~
#ifdef UTF8SUPP                                                       ||~v124R~
            (ENDコマンドのみ)                                         ||~v125R~
              CPU8/CPLC: 出力ファイルのEncoding指定。                 ||~v125R~
               /CPEB     必要なら指定のEncodingに変換の後書き出される。||~v125R~
              IE       : UTF8-->各国語変換で変換エラーを無視して出力。||~v125R~
                         エラー文字は"?"に置換されている。            ||~v125R~
              /M       :改行コードを変えて保存することの指定。        ||~v125R~
                        T:textモードwrite. Linux:0a, Windows:0d0a.    ||~v125R~
                          Windows では 単独 0a も 0d0a に変換される。 ||~v125R~
                        P:0d0a(PCファイル）                           ||~v125R~
                        U:0a  (Unix ファイル)                         ||~v125R~
                        M:0d  (Macファイル)                           ||~v125R~
                        E:15  (EBCDICファイル)                        ||~v125R~
                        R:レコードモード。 /Fnn で レコード長を指定する。||~v125R~
                        V:可変長レコードモード。 /Fvfmt で レコードヘッダー形式を指定する。||~127BR~
              /Fn[-m]  :レコード長、マージン。固定長ファイルの設定あるいは解除(/F0)         ||~v125R~||~127BR~
              /Fvfmt   :可変長レコード形式。EDItコマンド参照          ||~127BR~
              -S{r|i|d}: SO/SI オプション                             ||~v125R~
                         r : 画面のファイルが EBCDIC で CPLC/CPU8 を指定した時||~v125R~
                             SO/SI をスペースに置換する               ||~v125R~
                             画面のファイルが EBCDIC でなく CPEB を指定した時||~v125R~
                             SO/SI の時可能であれば前後のスペースを置換する||~v125R~
                         i : EBCDIC への変換の時 SO/SI を挿入する     ||~v125R~
                         d : EBCDIC から変換の時 SO/SI を削除する     ||~v125R~
              -Force   :ファイルのタイムスタンプが読み込み時と変わっているとき||~v129R~
                        (現セッションの外で更新された),その旨の警告が出るが||~v129R~
                        無視して保存終了するときに指定する            ||~v129R~
#endif                                                                ||~v124R~

   = 編集コマンドファイル実行

        EXE  [!] { * | ^* | filename } [parm-1,...] [.lab1 .lab2]
                 [ < {@parmfile | [S] wildcard  [D[+]] ]              ||~v124R~

            !       :各コマンドのエラーを無視して最後の行まで実行する
                     ! はファイル内の各行の先頭にも個別に設定できる。
            *       :現在表示しているファイルを実行。
            ^*      :分割画面の他方で表示しているファイルを実行。
            filename:*\ , ^*\ や :: 表記も可能。
                     コメントは行頭に "#" を置くか行末に ";"を置いた後に
                     #で続ける。
            parm-n  :ファイル内の %1--%9 を置きかえるパラメータ。
            .lab1/2 :行番号欄に設定したラベルを対で指定して実行行範囲を
                     限定する.行番号を使用しての範囲指定も可.
                     例えば "EXE * .from .to", "EXE ^* .120 .150".
                                                                      ||~v124R~
            "<" の後にリダイレクトパラメータを指定するとそのエントリー数だけ繰り返す。||~v124R~
                                                                      ||~v124R~
            @parmfile : @の後にパラメータファイル名を指定。           ||~v124R~
            S         : Selectの意味ででDirList画面で使用する。       ||~v124R~
                        DirList上のパス名無しのファイル名がEXEコマンドの最後のパラメータとなる。||~v124R~
            wildcard  : "S" 無しの場合、対応するフルパスファイル名がEXEコマンドの最後のパラメータとなる。||~v124R~
            D[+]      : 省略値はディレクトリー以外が選択されるが、    ||~v124R~
                        D : ディレクトリーのみ選択、 D+:全てのファイル名||~v124R~
                                                                      ||~v124R~
              想定用途は文字列置換をディレクトリー内のファイルに一括適用するなど。||~v124R~
              例えば  execmdfに以下の３行を記述し                     ||~v124R~
                       s "%3"                                         ||~v124R~
                       c %1 %2 all                                    ||~v124R~||~v126R~
                       end                                            ||~v124R~
              DirListを開いた画面で "exe ! execmdf FROM TO <s *.c"と入力すれば||~v124R~
              全ての *.c ファイルに Select/Change/End を実行する。    ||~v124R~
              "!"を指定しなければエラーがあればそこで繰り返しを停止する。||~v124R~
              このコマンド自身も=0.1画面でコマンド登録すればさらに入力を少なく出来る。||~v124R~
              例えば "chd exe ! execmdf %1 %2 <s *.c"を登録すれば     ||~v124R~
              "chd FROM TO"で同じことが実行される。                   ||~v124R~
                                                                      ||~v124R~
              EXEコマンドファイル作成の折はファイル名がスペースを含む場合を想定して置いてください||~v124R~
              EXEコマンドログが ::#exeに出力されます。                ||~v124R~
                                                                      ||~127EI~
            -全てのコマンドはオプション(OPT CMDLOG [ON|OFF])で::clにロギングされます。||~127EI~
             ::cl は EXE コマンド用のファイルを作成するのに利用できます||~127EI~
             (GCC,OS/2では一旦"OPT CMDLOG OFF"にしてから開いてください）||~127EI~

            -ファイル内でAT,SLEEPコマンドは使えない。

            -編集コマンドファイルの例。
                swap
                reset x
                x all
                i %1 all
                i %2 all
                del x all
                s %3
                undo
                undo
                undo
                undo
                undo

   = 文字列探索

        {FINd | IFInd | EXClude | IX | FNX | INX}
                  [!] {探索文字列 | * | *e | *ec | *g | *L | *=Mn | *u | *=[n] | \esc | P'pics'}||~v125R~
                     [探索位置] [& [!] 探索文字列２ [探索位置2] [-d[<|>]n]
                     [-g]                                             ||~v124R~
                     [U[B|L|8|4]]                                     ||~v125R~
                     [all | next | + | prev | - | first | last]
                     [-a[-]n] [-b[-]n] [-c[{L|R}m][{T|B}n]] [-j|-je]
                     [-Llcmd] -m[n] [-nx] [.lab1 .lab2]               
                     [-{PSP|PSF}[X|R|D]]                              ||~v128R~

            探索位置:[c1 | LM | RM [c2] | eol | maxeol | ATTR]        ||~v129R~

            FIN     :大文字/小文字 区別有
            IFI     :大文字/小文字 区別無(case Insensitive)
            EXC     :Find後その行を非表示化
            IX      :IFind後その行を非表示化
            FNX     :非表示行を除くFINd.
            INX     :非表示行を除くIFInd.

            !       :探索文字を含まない行を探索。
            探索文字列:スペースを含む場合や以下に示す特殊用途の
                       文字列自身を探索する場合は引用府を使用して下さい
                       例えば "F '.exe'", "F 'set up'".
                       全行非表示化する時は省略可能("EXC all"でOK)
                       行末に限定する時は "F word\n"の様に\nを付ける。
                       F "a b"\n ではなく F "a b" eol としてください。||~v124I~
                       行末を探すときは "F *\n"とする。
                       行末の "*" を探すときは F "*"\nとする。
            &       :２つの文字列を含む行の探索。例えば word1 & word2。||~v125R~
            *       :直前の探索コマンドと同じ文字列を探索
                     探索方向を変えて再探索する時等に使います
                     例えば  f * prev.  
                     探索範囲は前のは継承されません.
                     &(AND)探索の第二探索文字においてはこの意味を持ちません。||~v125R~
            *u      :更新行を探索します
            *e      :エラー行を探索します
                     シフトエラー,行コマンドエラーなど.
                     行に適当にラベルをつけて目印とし "f *e" で探すことが出来ます。||~v125R~
            *ec     : CPU8 で開いた時の変換エラー文字位置を探します   ||~v125R~
                      変換エラー行は 更新でエラーがリセットするまでの間は　*e で探せます。||~v125R~
            *g      :現表示画面上でGREp コマンドで選択された行を探索。
                     -g オプションサポートで GREpコマンドを編集画面で現在表示しているファイルに||~v124R~
                     使用することはないと思いますが使用は可能です。   ||~v124R~
            *L      :行コマンド "="で比較した結果の一致行(! と組み合わせれば
                     不一致行）、TCコマンドの "=="によるフィールド比較の
                     不一致行を探すときに使用できる。
                      例) "=" 行コマンドで比較した後                  ||~126EI~
                            "x *l all; del x all" で 一致行を全て削除する||~126EI~
            *=[n]   :同じ内容の行がｎ+1行以上続く個所を探索する。
                     比較桁も指定可能。ｎの省略値は１。
                     例えば、"x *= all" の後 "drop x all"とすれば重複の多い
                     ファイルのファイルサイズを縮小できる。
                     "x *="コマンドでは最初の1行だけ表示のまま残すが
                     これも非表示にするときは /b0 を指定する。
                     -aでマイナスを指定すると下方の行も残すことができる。
                     例えば -a-1 は 1行目と下から1行を残して間を非表示化。
            *=Mn    :画面分割で開いた2つのファイルで照合する。
                     (コマンド入力画面のファイルのキーが別の画面のファイル
                     にあるか調べる)。
                     n:第二画面の照合キーカラム。
                     現画面のキーは探索範囲桁位置パラメータで指定する。
                     照合した場合現画面のキーを反転表示。
                     一度でも照合した第2画面の行はエラー表示
                     行番号欄が反転,"f *e"で探せる。                  ||~126ER~
                     例）"f *=M6 10 18; del x all"                    ||~126EI~
                          現画面のカラム10-18が第二画面のいずれかの行のカラム6-14に||~126EM~
                          一致する行を探す。                          ||~126EM~
                          "x"と"del"でマッチングした行を全て削除する  ||~126EI~
            \esc    :次の1文字エスケープシーケンスとヘキサ指定が可能.
                     \a (ベル=0x07),\b (後退=0x08),\t (水平タブ=0x09)
                     \n (改行=0x0a),\v (垂直タブ=0x0b),\f (改頁=0x0c)
                     \r (復帰=0x0d),\x(偶数桁のヘキサ文字列)
                     ヘキサ指定の例. \x8281 ,  \x09 , \x0c ,
                     但し ファイル読み込み時に行区切り文字として取り
                     扱われた \x0d0a や \n は見つかりません.
                     \aX などと他の文字と一緒には使えません.
                     またテキストファイルではタブ(\x09)はー\x0920などと
                     他の文字と一緒には出来ません.
                     IFIndでもFINd(大文字/小文字 区別有)と扱われます。
                     Esc解釈をさせたくない場合は "\t" 等と引用符を使用。
                                                                      ||~v125I~
               (注)  UTF8ファイルでは \x__指定の場合文字境界を意識します||~v125R~
                     \x 指定は探索文字列も置換文字列も4桁の倍数です。 ||~v125I~
                     \xaabbのaaは u-xxyy の yyとはマッチしません。xxとのみマッチします。||~v125I~
                     例) c \x30003000 \x20202020                      ||~v125I~
                                                                      ||~v125I~
            P'pics' :picsに以下の１文字対応の文字クラス指定文字を指定します||~v124R~
                     クラス指定文字以外はその文字で探索します。       ||~v124R~
                     IFIndコマンドでは大文字小文字指定をしても区別されません||~v124R~
                     タブ(0x09)はスペースとマッチします。(タブ拡張後に探索)||~v124R~
                                                                      ||~v124R~
                     文字クラス指定文字。                             ||~v124R~
                       =  全ての文字とマッチ。                        ||~v124R~
                       .  非表示文字(正規表現で[^[:cntrl:]], 0x00-0x1f,0x7f,0x80但し0x09は除く)||~v124R~
                       @  アルファベット     ( [[:alpha:]]  )         ||~v124R~
                          但し、日本語環境では  [A-Za-z] とします     ||~v128R~
                       -  非数字             ( [^[:digit:]] )         ||~v124R~
                       #  数字               ( [[:digit:]]  )         ||~v124R~
                       <  英小文字           ( [[:lower:]]  )         ||~v124R~
                       $  特殊文字           ( [[:punct:]]  )         ||~v124R~
                       >  英大文字           ( [[:upper:]]  )         ||~v124R~
                       ^  非ブランク(EBCDIC の ¬ の代わりに ^ を割り当て)||~v124I~
                          (ISO Latin1の 0xacもOK)                     ||~v124I~
                                             ( [^[:space:]] )         ||~v124R~
                     例) P'z.@#'                                      ||~v124R~
                         スペース,カンマ、セミコロンを含む場合は "P'ABC== ###'" のように全体を 引用符 で囲んでください。||~v124R~
                         文字クラス指定文字自身を探す時は P'ABC\=\=##\.##\\' のように "\"でエスケープしてください。||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
            -g      :探索文字列が正規表現形式であることを指示。(grep 探索)       ||~v124R~||~v125R~
                     "&" 指定の時(両方が正規表現形式である必要はないですが)、||~v124R~
                     探索文字列２も正規表現とみなします。             ||~v124R~
                     タブ(0x09)はスペースとマッチします。(タブ拡張後に探索)||~v124R~
                     例) f abcd|efg -g   で 次の "abcd" か "efg" を探索。||~v125R~
                (注) UTF8ファイルでは内部的なデータ表現上から正しく機能しない可能性があります||~v125I~
                     承知の上使用してください                         ||~v125I~
                     行がASCII 文字列のみなら問題ないでしょう。       ||~v125R~
                                                                      ||~v124R~
                     APIはGNU(re_compile_pattern,re_search)を使用し以下のオプションを指定しています。||~v124R~
                     (Windows版はGNU regex v2.7をポーティングしました)||~v124R~
                                                                      ||~v124R~
                       RE_BACKSLASH_ESCAPE_IN_LISTS :off: [ ] 内の \ はそのまま \||~v124R~
                       RE_BK_PLUS_QM                :off: 繰り返しは \+, \*  ではなく +, * をそのまま指定||~v124R~
                       RE_CHAR_CLASSES              :on : [:alpha:]などのクラス指定を使用する。||~v124R~
                       RE_CONTEXT_INDEP_ANCHORS     :off: ^, $ (アンカー)は適切な位置にあるときのみ意味を持たせる。||~v124R~
                       RE_CONTEXT_INDEP_OPS         :off: +, * は適切な位置にあるときのみその意味を持たせる。||~v124R~
                       RE_CONTEXT_INVALID_OPS       :off: +, * は適切な値にない時は通常文字の扱い。||~v124R~
                       RE_DOT_NEWLINE               :on : . は改行文字ともマッチさせる。||~v124R~
                       RE_DOT_NOT_NULL              :off: . は塗る文字ともマッチさせる。||~v124R~
                       RE_HAT_LISTS_NOT_NEWLINE     :on : [^...] のような指定は改行文字とマッチさせない。||~v124R~
                       RE_INTERVALS                 :on : 間隔指定({ と })を使用する。||~v124R~
                       RE_LIMITED_OPS               :off: +, *, | を使用する||~v124R~
                       RE_NEWLINE_ALT               :off: 改行文字は通常文字と同じ扱い。||~v124R~
                       RE_NO_BK_BRACES              :on : 間隔指定は \{, \} ではなく {, } をそのまま指定。||~v124R~
                       RE_NO_BK_PARENS              :on : サブグループ指定は \(, \) ではなく (, ) をそのまま指定。||~v124R~
                       RE_NO_BK_REFS                :on : \1 などの後方参照は使用しない。||~v124R~
                       RE_NO_BK_VBAR                :on : Alternation(OR) は \| ではなく | をそのまま使用。||~v124R~
                       RE_NO_EMPTY_RANGES           :on : [ ]内で a-b 形式が逆順のときエラーとする。||~v124R~
                       RE_UNMATCHED_RIGHT_PAREN_ORD :on : ( ) がペアをなしていない時通常文字として扱う。||~v124R~
                                                                      ||~v124R~
                       IFIndコマンドではRE_ICASE(大文字小文字区別無し)を指定。||~v124R~
#ifdef UTF8SUPP_XE                                                    ||~v125R~
                                                                      ||~v125R~
            U[B|L|8|4]:バイナリーファイル中の UCS2/UCS4/UTF8コードを探索                          ||~v125R~||~v128R~
                       IFInd コマンドでも "大文字小文字の区別無し"とはなりません||~v128R~
                     U   : オプションプレフィックス。                 ||~v125R~
                     B/L : BigEndian/LittleEndian UCS2探索。省略値はOSに従う(Intel系は"L")。||~v125R~
                           例えば 0x'003100320033' を探す時 "F 123 UB"、||~v125R~
                                  0x'310032003300' を探す時 "F 123 UL" とする。||~v125R~
                     8   : UTF8 コードで探します。                    ||~v125I~
                           コマンド行の入力は A+u キーでどちらのコードでも入力できます。||~v125I~
                           すなわち、コマンド行が "=u=>" で表示されていればUTF8、||~v125I~
                           そうでなければロケールコード入力状態です。 ||~v125I~
                           ロケールコード入力状態で U8を指定すればUTF8コードで探します。||~v125I~
                           UTF8ファイルが無変換で開かれている時などに使用します。||~v125I~
                             例.  F xx  U8                            ||~v125I~
                             ここで xx は ロケールコード、例えばその値が 0xa0 とすると||~v125I~
                             0xa0 の UTF8 コード値 0xc2a0 を探します。||~v125I~
                     4   : FINd コマンドで探索文字列がUCS4 Hexコードであることの指定。||~127MI~
                           &(AND)サーチの場合はそれぞれのオペランドに指定すること||~127MI~
                             (例) f Micro U4 UL & Vender U4 UL        ||~127MI~
                         　CHAnge コマンドで置換文字列がUCS4 Hexコードであることの指定。||~v125R~||~127MR~
                             例.  C abc  \x10fffd   u4                ||~v125R~
                           U4を指定しない場合はUTF8ファイル上の置換はUCS2指定とみなします(2の倍数桁)||~v125R~
                             例.  C abc  \x30203021                   ||~v125R~
#endif                                                                ||~v125R~

            all     :ファイル全体を探索
            allkx   :KeepX。ファイル全体を探索。
                     見つかった行が非表示行でも表示行にしない。
            next    :カ−ソル位置より下を探索,これが省略値
            +       :nextと同じ
            prev    :カ−ソル位置より上を探索
            -       :prevと同じ
            first   :ファイルの最初から探索,見つかった所にカーソルを移動
            last    :ファイルの最後から探索,見つかった所にカーソルを移動
            .lab1/2 :行番号欄に設定したラベルを対で指定して探索行範囲を
                     限定する.行番号を使用しての範囲指定も可.
            c1      :探索範囲の左端桁位置.                            ||~v129R~
            c2      :探索範囲の右端桁位置.                            ||~v129R~
            LM      :探索範囲を左マージンに限定
            RM      :探索範囲を右マージンに限定
            eol     :行末のみ探す。
                     探索文字がスペースを含むときに使用する。
                     ("a b"\n はエラーとなる)
            maxeol  :最長行（複数行ありうる)の行末のみ探す。
            ATTR    :ディレクトリーリストでファイルの属性値を探索する ||~v129R~
                     大文字小文字の区別はしません                     ||~v129R~
                     属性欄には表示されていないが ディレクトリーには "d"、シンボリックリンクには "L" を指定する||~v129R~
                     また "d" と "L" はそれぞれ単独で指定してください ||~v129R~
                     それ以外の属性は Windowsでは 指定の一つ一つの属性すべてを含む行が一致行とし||~v129R~
                     Linuxでは属性指定の文字列を含む行が一致行とする  ||~v129R~
                     Linuxで特殊な属性欄の値は                        ||~v129R~
                        u:setuid, g:setgid, S:setuid+setgid, t:stickey||~v129R~
                        c:char device, b:block device, p:pipe, s:socket||~v129R~
                     例) (Windows) f SH attr ; f R attr & 17-08 ; f D attr & L attr||~v129R~
                         (Linux)   f 775 attr ; f u attr              ||~v129R~
            -a[-]   :探索文字列を含む行の後ｎ行を表示化/非表示化する。
                     & 探索の時は 2 番目の文字列を含む行を基準とする。
                     "-"は前のｎ行を意味する, このとき -b を指定し
                     ＆探索なら間の行数も加え合計が正でなければならない。
            -b[-]   :探索文字列を含む行の前ｎ行を表示化/非表示化する。
                     & 探索の時は 1 番目の文字列を含む行を基準とする。
                     "-"は前のｎ行を意味する, このとき -a を指定し
                     ＆探索なら間の行数も加え合計が正でなければならない。
            -c[{L|R}m][{T|B}n]
                     左(L)からあるいは右(R)からm桁目、上(T)からあるいは
                     下(B)からn行目に探索文字列が表示されるように
                     画面スクロールする。
                     -cのみは -cR の意味。
                     省略値は現在の表示画面にあるときはスクロルしない、
                     ない時は行が中央に来るようにスクロールする。
            -d[<|>]n:& のとき2つの文字列の間隔を指定する。n は行数。
                     -dn:ちょうどn行目に第二文字列がある。
                     -d>n:n+1行以上離れている。
                     -d<n:n-1行以内にある。
                     -dの指定が無い時は -d0即ち同一行にあるとなる。
            -j      :-a/-b パラメータの範囲、或いは -d 指定の&(and)探索で
                     見つかった 2ワード間の行を連結する。
            -je     :& 探索で第1文字列があり第２文字列が見つからない時
                     第１文字列行から最終行までを連結する。
                     例えば "i StartID & StratID -d>1 -a-1 -j
                     だと最後に非連結行が残るが -j を -je にすれば全て
                     連結される。
            -Llcmd  :見つかった行の行番号欄に指定の文字列をセットする。
                     例えば "f StartLineID -Lcc;f EndLineID -Lcc;
                     rep partialfile" とすると StartLineID と EndLineID
                     の間をpartialfileに複写する。
                     カーソル移動が省略できるので EXE コマンドファイル内
                     での使用が考えられる。                           ||~v124R~
            -m[n]   :反転表示を継続する。
                     前のFindコマンドの探索文字反転表示をリセットせずに
                     今回のコマンドの探索文字を追加反転表示する。
                     次の再探索(PF5)のときも反転表示が継続される。
                     "n"指定があると次のRFind(PF5)コマンドからそうする。
            -nx     :非表示行は対象外。(INX/FNXに同じ)                

            -同じ語の再探索/反転再探索は機能キー(F5/Shift+F5)を使用.
             見つからずにファイルの最後/最初に達した後続いて同じ機能キーを
             押せばファイルの最初/最後に戻って再探索します.
            -オペランド値のみをコマンド行に入力し再探索/反転再探索の
             機能キー(F5/Shift+F5)を押せば それぞれ 大文字/小文字区別無しの
             next/prev 探索となる.コマンド動詞(省略形のみ認める)から入力
             して機能キーを押した場合は大文字/小文字区別はそのコマンド動詞
             に従います
            -タブとそのタブによるスペースは空白文字と一致すると見なされます
            -探索文字列の指定のしかたについては,先の"語について"の記述を
             参照
                                                                      ||~v128R~
            -{PSP|PSF}[X|R|D]                                         ||~v128R~
              . PSP:この分割画面で有効（分割してない場合でもよい）    ||~v128R~
                PSF:このファイル/ディレクトリーリストでのみ有効       ||~v128R~
                X:-PSPX/-PSFX のみを指定し、直近に使用したした PSP/PSF コマンドを実行する||~v128R~
                R:-PSPR/-PSFR のみを指定し、直近に使用したした PSP/PSF コマンドをコマンド行にセットする||~v128R~
                D:-PSPD/-PSFD のみを指定し、現在有効な PSP/PSF コマンドを表示する||~v128R~
                使用された直近のコマンドは PSD コマンドで表示されます ||~v128R~
                                                                      ||~v128R~
              . Ctrl+F5 は PSP コマンドで再探索、Alt+F5 は PSF コマンドで最探索||~v128R~
                Ctrl+Shift+F5, Alt+Shift+F5 はそれぞれ 前探索/後探索を切り替える||~v128R~
                PFキーを使うときコマンド行に find-options を指定すると||~v128R~
                F5/C+F5/A+F5に違いはなくオペランドの-PSP/-PSFオプションの有無が機能を分ける||~v128R~
                PSF コマンドの記憶ははファイルを閉じたときに失われ、  ||~v128R~
                PSP は次のスタート時に直近の２つを 分割画面1/2として設定する||~v128R~
                                                                      ||~v128R~
              . Linux では Alt+F5 は 規定のショートカットキーとして使用されている場合があります||~v128R~
                Linux の 設定-->ショートカット で無効にするか xe の =0.2 画面で機能割り当てキーを変更してください||~v128R~
                                                                      ||~v128R~
              . これにより一つのファイルで３つの探索ができる          ||~v128R~
                F abcS                                                ||~v128R~
                F abcP -psp                                           ||~v128R~
                F abcF -psf                                           ||~v128R~
                 とした後                                             ||~v128R~
                F5 で abcS を、Ctrl+F5 で abcP を、Alt+F5 で abcF を探索する||~v128R~
               それぞれの探索を継続するには同じキーを使用する         ||~v128R~
               例えば "F abcP -psp", C+F5, C+F5, S+C+F5               ||~v128R~
             . Changeコマンドはサポートしていません                   ||~v128R~
             . -PSP などを文字列として探索する場合は引用符を使用する, 例えば  F "-PSP"||~v128R~
                                                                      ||~v124I~
   = 表示、非表示反転                                                 ||~v124M~
                                                                      ||~v124M~
        { FLIp | XX }  [.lab1 .lab2]                                  ||~v124I~
                                                                      ||~v124M~
           表示行を非表示に、非表示行を表示にする。                   ||~v124M~
                                                                      ||~v124M~
           lab1/lab2:行範囲を限定するときに指定する。                 ||~v124M~
                                                                      ||~v124R~
   = カーソル位置の文字列サーチ                                       ||~v124R~
                                                                      ||~v124R~
        {FWB, FWF, IWB, IWF}  [ AN | SP | DQ | SQ |  (x | x( | )x | x) ]||~v124R~
                                                                      ||~v124R~
        次の機能キーがそれぞれ省略値割り当てられています。            ||~v124R~
        SP, DQ,...などのオプションを指定したい場合はコマンド行にオプションを||~v124R~
        入力して機能キーを使用してください                            ||~v124R~
                                                                      ||~v124R~
                  大小別有            大小別無                        ||~v124R~
            前   FWB: C+[, A+S+[      IWB: A+[                        ||~v124R~
            次   FWF: C+], A+S+]      IWF: A+]                        ||~v124R~
                                                                      ||~v124R~
                                                                      ||~v124R~
          AN:全ての区切り文字(省略値)                                 ||~v124R~
             @, _, $ とロケール特有の区切り文字は含みません||~v124R~  ||~v124R~
             日本語環境では以下の区切り文字も調べます。               ||~v125R~
			   "　"(２バイト空白文字) ！ “ ” ＃ ％ ＆ ’ （ ） ＊ ＋ 、 − 。 ・||~v125R~
               ： ； ＜ ＝ ＞ ？ 「 ￥ 」 ＾ ‘ ’ ｛ ｜ ｝ 〜 ， ． 《 》 『 』||~v125R~
          SP:スペースのみを区切り文字とする                           ||~v124R~
             COBOL など "-"が変数名の一部の場合に有効です             ||~v124R~
                                                                      ||~v124R~
          DQ:"(２重引用符)のみを区切り文字とする                      ||~v124R~
          SQ:'(１重引用符)のみを区切り文字とする                      ||~v124R~
          ( :左区切り文字指定, (x は xを含める、 x( は含めない。      ||~v124R~
          ) :右区切り文字指定, x) は xを含める、 )x は含めない。      ||~v124R~
            "(" あるいは ")" を 区切り文字とする場合 "\(..(" , "\)..(" , "\(..)" , "\)..)" とする。||~v124R~||~v125R~
            "には "" を ""( のように指定する。                        ||~v124R~
            x は 単一文字のみならず(DBCS)文字列も指定できます。       ||~v124R~
          指定の文字が見つからないと直近の区切り文字が使用されます    ||~v124R~
                                                                      ||~v124R~
          例)  abc -=def*ghi-klm+ nop;  の "d"にカーソルがある場合の探索文字列は||~v124R~
              SP      : "-def*ghi-klm+"                               ||~v124R~
              =(      : "def"                                         ||~v124R~
              )-      : "def*ghi"                                     ||~v124R~
              =)      : "def"                                         ||~v124R~
              (=      : "=def"                                        ||~v124R~
              -(  )+  : "=def*ghi-klm"                                ||~v124R~
              (-  +)  : "-=def*ghi-klm+"                              ||~v124R~
                                                                      ||~v124R~
        次(前)の位置で他の文字列の一部の場合でも連続でこれらのキーを  ||~v124R~
        使用している限りは探す文字列は最初のものです。                ||~v124R~
        機能キーを使用する場合はコマンド行の最初から左右の区切り文字を指定できます||~v124R~
                                                                      ||~v124R~
        マウスまたは機能キーで反転した箇所に文字カーソルを置くと反転した範囲がワードになります。||~v124R~
        カーソルがファイル画面の外の場合、前回と同じワードを探します。||~v124R~
        別のファイル内の同じワードを探す時に使用します。              ||~v124R~
                                                                      ||~v124R~
   = ヘルプ

        HELp

#if defined(W32) || defined(LNX)                                      ||~v124I~
                                                                      ||~v124I~
             オンラインヘルプ(html文書)を開きます。                   ||~v124I~
             文書のおき場所は /HDコマンドラインパラメータ、環境変数 xehelp=、||~v124R~
             ワークＤｉｒの順に探します。                             ||~v124I~
             LNXの場合は追加のDirがあります。xelnxj.txt見て下さい。   ||~v124R~
                                                                      ||~v124I~
#endif                                                                ||~v124I~
             コマンド、機能キーの一覧はメニュー0.2あるいは0.3を参照してください||~v124R~

   = HEX 2段表示

        HEX [ On | Off | YZ | NZ ]                                    ||~v125I~
                                                                      ||~v125R~
            YZ:カーソルが縦Hex表示のHex行にあるときHex文字入力後のカーソル位置が||~v125I~
               上段->下段->次の桁の上段と移動する。                   ||~v125I~
               また文字挿入モードでも下段にある場合は置換する         ||~v125I~
               同時にOnの意味も持ちます                               ||~v125I~
            NZ:通常モードに戻る                                       ||~v125I~
               同時にOnの意味も持ちます                               ||~v125I~
                                                                      ||~v125I~
            -HEX表示行を文字表示行の次に2行表示する。
            -ON/OFF を指定しないと現在のモードの反対にする。
            -HEX表示の印刷は 画面印刷を使用する。(XPR **/XPR ***)
             (xprintユーティリティーでもHEX２段印刷できます。)        ||~v124I~
            -HEX数字の大文字/小文字表示は opt HEX {upper|lower} コマンドで変更できます||~v125R~

      HEX 2段表示の例。
        ****|********** TOP OF FILE *****************************************************
        0001|G:\src\xe>h:\tool\lha.exe v k:\xe117\xegcc117
            |43577657636357666566626762726357633357666633322222222
            |7ac323c85e8ac4ffccc81e585060bac85117c8573311700000000
        0002|Listing of archive : k:/xe117/xegcc117.LZH
            |467766626626766676232632763332766663332454
            |c9349e70f6012389650a0baf85117f85733117eca8
        0003|  Name          Original    Packed  Ratio   Date     Time   Attr Type  CRC
            |22466622222222224766666622225666662256766222467622222566622247772577622454
            |00e1d50000000000f2979e1c0000013b54002149f00041450000049d500014420490500323

   = ホーム位置

        HOMe

            -カーソルをホーム位置(コマンド入力行)に移動

   = 画面分割

        {HSPlit | VSPlit}   (オペランドなし）
            HSP     :水平画面分割
            VSP     :垂直画面分割

            -コマンド入力する時はカーソルを分割位置に移動させた後
             実行キーを押す
            -分割をやめるにはやめたい方を END/CAN/EXI などで終了させます

   = INIファイル出力

        INI     ［ファイル名]

            -"XE.INI" ファイル(ファイル名の省略値)が壊れた時に使います.
             ファイル名を指定しない /i オプションで立ち上げ(xe /i),
             INI コマンドを入力すれば 省略時の値が設定されたXE.INIファイル
             が出力されます．
       （注）VersionUpでキー割り当てが変更された場合INIファイルは再作成してください、
             古いINIファイルのままではVersionUPの変更が反映されません。

   = 挿入/置換

        INS  [on | off]
            on      :文字挿入モード
            off     :文字置換モード
            (無指定):挿入<-->置換モードをスィッチします

            -コマンドキー コマンドのなかで使用します.

   = 行連結。

        JOIn  { X | NX | [n[-b-s]] } [ all ]  [ .lab1 .lab2 ]

            各部分を1行に連結する。

            X     :非表示部を連結。
            NX    :表示部を連結。
            n     :連結行数(>=2)
            b     :n行連結の繰り返し数
            s     :n行連結をb回繰り返した後s行スキップする。
            all   :ファイル内全て。
                   X または NX 指定の場合、
                   all でない時はカーソル位置以降の最初のXないしNX部。
                   コマンド反復(Ctl+F12)を使用すればカーソル位置を
                   変えることなくJOInコマンドを繰り返すことができます。
                   n-b-s 指定の場合ファイル全体の行が対象。
            .lab  :行ラベル .lab1 .lab2 の範囲内に限定して連結。


   = 文字入力

        KEY     文字列

            カーソル位置への文字列入力。

            文字列  :任意の文字列

            メニューオプション 0.1 のコマンドキー コマンドで例えば
             "Pos 10;KEY r10;ENT;" のように使用する
            KEY入力を実行するには その後に ENT が必要
            この後、Ctl+F12(コマンド反復)で同じ文字列をカーソール位置を
            変えて反復入力するのに使える。
                                                                      ||~v124R~

                                                                      ||~v124R~
   = 長いファイル名表示

        LFN

            ディレクトリーリストでファイル名をファイル属性/改名欄も使用して表示する。
            もう一度入力するとオフになる。

   = リガチャーモード                                                 ||~v129R~
                                                                      ||~v129R~
        LIG                                                           ||~v129R~
            - A+";" キーのコマンド版                                  ||~v129R~
            - リガチャーモードを ON/OFF します                        ||~v129R~
              コンソール版はCPU8(UTF8ファイル)のみが対象です。        ||~v129R~
              Windos7 以降はコンソール版では使用できません            ||~v129R~
                                                                      ||~v129R~
   = 行位置付け

        LOCate  { { [L]行番号 | [O]オフセット } [C] | .label }

                (表示/編集画面ではこちらの形式を使用する)

                指定の行番号/オフセットにジャンプする. L/O の指定のない時
                行番号かオフセットかは行番号欄表示属性に従う

                C : 編集後の現状での位置.指定無は編集前の状態での位置
                .label: このラベルをつけた行を探す。

        LOCate  {ファイル名|タイムスタンプ|ファイルサイズ}

                (ディレクトリー表示画面ではこちらの形式を使用する。
                 SORtコマンド参照)

              .ファイル名:Dirリストが名前順で整列されているとき
                          名前順で指定のファイル名に最も近い行にジャンプ
                          行番号欄から属性欄の直前までの位置で文字キーを入力することで||~v124I~
                          同じことが行えます。Escなど文字キー以外のキーを押すまで||~v124I~
                          ファイル名の先頭から一致する行を探す。      ||~v124I~

#ifdef UNX
                          大文字小文字で順序は区別されます。
#else
                          大文字小文字で順序は区別されません。
#endif

              .タイムスタンプ:Dirリストがタイムスタンプで整列されて
                              いるとき yymmdd[-hhmm] 形式で指定する。
              .ファイルサイズ:Dirリストがファイルサイズで整列されて
                              いるとき バイト数を指定する。

   = ファイル移動 (別ファイルを現表示画面へ複写後削除)

        MOVe    ファイル名  [ CPLC | CPU8 | CPEB[:codepage] ] [IE]               ||~v125R~||~v125R~
                    [/M{T|P|U|M|E|R}] [/Fnn] [-S{r|i|d}]              ||~v125R~

            CPU8/CPLC: "source-file"のEncoding。                      ||~v125R~
              /CPEB    必要なら開いているファイルのEncodingに変換の、編集画面にCopy/Moveする。||~v125R~
                       プロファイルの記録をチェックするので通常はCPxxの指定は不要でしょう。||~v125R~
                       CPEB:codepage 形式で cfg ファイル指定以外のコードページを指定できます||~v125R~
                       プロファイルの記録による変換をしたくない場合は コピー先を指定する||~v125R~
　　　　　　　　　　　 "A"(after)/"B"(before)行コマンドに"B"(Binaryモード)サフィックスを指定してください||~v125R~
                          例)  MOV ebcf1                              ||~v125R~
                               :                                      ||~v125R~
                               BB                                     ||~v125R~
                                                                      ||~v125R~
            IE       : 変換エラーを無視。エラー文字はそのまま複写され、"?"で表示される。||~v125R~
                       (バイト値はそのまま保持される)                 ||~v125R~
                       指定がないとエラー発生行で複写は停止。         ||~v125R~
                       ファイルが IE オプションで開かれている時は不要。||~v125R~
            /M       :複写元のファイルの改行コードの指定。            ||~v125R~
                      P:0d0a(PCファイル）                             ||~v125R~
                      U:0a  (Unixファイル)                            ||~v125R~
                      T:0a と 0d0a の両方                             ||~v125R~
                      M:0d  (Macファイル)                             ||~v125R~
                      E:15  (EBCDICファイル)                          ||~v125R~
                      R:レコードモード。Fnn でレコード長を指定する    ||~v125R~
            /Fnn     :レコードサイズ                                  ||~v125R~
            -S{r|i|d}: SO/SI オプション                               ||~v125R~
                       r : 画面のファイルが EBCDIC で CPLC/CPU8 を指定した時||~v125R~
                           SO/SI の時可能であれば前後のスペースを置換する||~v125R~
                           画面のファイルが EBCDIC でなく CPEB を指定した時||~v125R~
                           SO/SI をスペースに置換する                 ||~v125R~
                       i : EBCDIC への変換の時 SO/SI を挿入する       ||~v125R~
                       d : EBCDIC から変換の時 SO/SI を削除する       ||~v125R~
                                                                      ||~v125R~
            -指定のファイルの全行を現表示画面の行コマンドで指定の位置に
             複写後そのファイルは削除する.
             行番号非表示のときの宛先行(After)を指定する為には
             行挿入複写(Alt+i)キーを使用して下さい.
             0 行ファイルには宛先指定は不要です
             該当するファイル名が１つに特定できる時はパス名などに
             ワイルドカードを使用してもよい。
                                                                      ||~v125R~
         (注)ディレクトリー間の移動には XMOve を使用するかあるいは
             DOSコマンド >MOVE を使用する.
             表示/編集画面以外では MOVe コマンドは XMOVe と見なします

   = 裏画面表示                                                       ||~126FI~
                                                                      ||~126FI~
        {NEXt | PREvious}   (オペランドなし)                          ||~126FI~
            PRE     :(前画面) 1 つ前の画面を表示,現画面は 1 番下にします||~126FI~
            NEX     :(次画面) 1 番下の画面を表示します,現画面はその下に||~126FI~
                        なります                                      ||~126FI~
                                                                      ||~126FI~
   = リモート設定                                                     ||~126FI~
                                                                      ||~126FM~
        NODe hostID [password]                                        ||~126FR~
                                                                      ||~126FI~
          ::xehosts ファイルのパスワードを置換。このパスワードは::xehostsに保存されません。||~126FI~
                                                                      ||~126FI~
            hostID  :xehostsのキー(ホストID)                          ||~126FI~
            password:パスワード                                       ||~126FI~
                     Android版ではshareパラメータ指定のリモートに対しpasswardを指定しないと||~126FI~
                     別スレッドでコネクションを試行します             ||~126FI~
                                                                      ||~126FI~
   = 行番号表示

        NUM {on | off | xon | xoff | seti | setr                      ||~v127R~
            | 桁数 | reset | clear  | renum | ?} [s|f|k]
        REN [{setr|seti} [col1[-col2] ['delmchar'|S|B]]]


            on      :行番号 7 桁 表示
                     行番号は nnnnmmm 形式
                              nnnn 編集前の行番号
                              mmm  行挿入による枝番号
                     但し 行数が 10,000 以上の時は nnnnnmm となります
                                100,000 以上の時は nnnnnnm となります
                               1000,000 以上の時は nnnnnnn となります
            off     :行番号欄を表示しない
            桁数    :0 から 7 までの行番号表示桁数
                     0 とすると | または * の 行更新フラグのみを表示.
                     1 から 4 (行数が 10,000 以上の時は 5)までの場合
                     下の桁から表示,行挿入による枝番号は表示されません.
                     5 から 6 の場合枝番号は上の桁を表示,7 は on と同じ.
             (注)-変更は 現入力画面と以降にオープンするファイルに適用.
                 -設定が小さ過ぎる場合ファイルオープン時にファイル毎に
                  全行が収まるように調整されます.
                 -値は表示/編集/コマンド出力の各画毎に保持されます.
                 -行番号付きファイルでは最初のオープン時はこの設定とは
                  無関係に 7 が使用されます.

            xon/xoff:行番号欄表示属性の設定。HEXオフセット又は行番号。
            s       :バイナリーファイルの行番号欄表示属性の省略時属性を
                     設定保存する(テキストファイルでは省略値は常に行番号).
            reset/renum:行番号を振り直す.(枝番が 0 にリセットされます)
                        行番号付きファイルの場合全行が指定の長さに
                        揃えられ行末の行番号欄に通番が振られます
                        COBOLファイルではrenumはcol1-6を設定します。
            clear   :行番号をスペースにする。
            f       :通番/行長エラーのある行番号付きファイルの行番号を
                     強制的に振り直す時に指定します。
            k       :cobkファイルに対しカラム1-6を renum/clearする時に
                     指定する。
            ?       :現在の表示/編集/コマンド出力の各画面の省略時桁数を
                     表示

            SETR/SETI : 上書モード/挿入モード
                        テキストエリアの任意の桁位置に行番号を設定する。
            col1,col2 : 行番号書き込み位置。col2の指定で最大8桁まで
                        行番号の幅を指定できる。col2がない現在の
                        行番号欄幅と同じ。
            delmchar  : 行番号書き込みの右端に区切り文字を設定できる。
                        1文字引用符で囲み桁指定に続けて空白を開けずに
                        指定する。引用符無しの S/B は空白文字の簡略指定。
            例） ren seti 12'|' ,  ren setr 1-8:                      ||~v125R~

   = オプション設定

        OPT  オプションID  [オプション値,...]

          -Undelete オプション
             (ディレクトリーリストでの Delete コマンドの処理モード)

             OPT UNDelete  [off | on | keep]

             off :Undeleteサポートなし
                  削除データは保存されません
             on  :セッション終了まで削除データを保存．
                  ディレクトリーリストを閉じていなければ 削除行(*D*)に
                  "U" 行コマンドを入力して削除済みファイル/ディレクトリ
                  ーの戻しが可能, 閉じてしまった場合はエディターを終了
                  する前に保存用のディレクトリー(下記の(注)参照)の
                  ディレクトリーリストを開いて戻したいファイル/ディレ
                  クトリーの行に"U" 行コマンドを入力すれば戻すことができ
                  ます．エディター終了時に保存データを削除するので
                  その後では復元できません.

             keep:削除データをエディター終了時にも削除しません.
                  エディターセッション終了後も保存用のディレクトリーの
                  ディレクトリーリストを開いて "U" 行コマンドで戻すこと
                  ができます．
                  このオプションの場合削除により外部記憶域の空容量は
                  増えません．保存をしない削除コマンド("z"ないし"0")か
                  DELete/XDD コマンドを使用する(DELete/XDD コマンドは
                  このオプションにかかわらず削除データを保存しません),
                  或は保存用ディレクトリーから不要なデータを削除する
                  必要があります．
#ifdef UNX
         (注)-保存用のディレクトリーは ~/xe_undel_nnnnn です。
              （nnnnn は UserID）。
              これは環境変数 xe_undel を設定することで変更できます。
#else
         (注)-保存用のディレクトリーは各ドライブの \XE!UNDEL です.
#endif
              その下に日付毎のディレクトリーがありそのまた下に
              セッション毎のディレクトリーが作成されその中に削除
              ファイル/ディレクトリーが同じ名前で保存されます.
              同じ名前のファイルが複数になる場合は拡張子が数字に変更
              されて保存されています．
#ifdef UNX
              (例えば ~/xe_undel_01000/01-01-23/000005_D/abcd.001).
#else
              (例えば G:\XE!UNDEL\96-01-07\000005!D\abcd.001).
#endif
              keep の時、
              日付毎のディレクトリー内にはセッションのディレクトリーに
              対応して保存ファイル名と削除ファイルの全パス名の対応を
              記述したインデックスファイルがセッション終了時に出力される。
#ifdef UNX
              (例えば ~/xe_undel_01000/01-01-23/000005_-).
#else
              (例えば G:\XE!UNDEL\96-01-07\000005!-).
#endif
              必要がなくなるまではこのファイルを修正しないで下さい
         (注)-リモートファイルの削除の場合、削除ファイルと同じDirに
　　　　　　　次の形式で改名保存されています。
              ..xe..元ファイル名.._~yymmdd-hhmmss.mmm。

          -保存無し削除コマンド許可オプション

             OPT DELZ  [off | on ]

             OPT DELZ OFF とすることでDirList画面で押し間違いによる不用意な
             Undoできないファイル削除が実行されることを避けることができる。
             省略値はON。

             off :Z,0 行コマンド禁止。
             on  :Z,0 行コマンド受付。

          -Long File Name オプション
             (Windows9xでのディレクトリーリスト表示で長いファイル名の使用)

             OPT LFN  [off | on]

             off :FAT(8.3ファイル名)表示
             on  :長いファイル名を表示(省略値)

         (注)-WIN版,GCC版でのみ有効.
              GCC版はWindows9xのDOS窓で実行する時のみ有効.
              OS/2版ではこの設定と無関係にディスクのパーティションが
              HPFSかFATかによって決まります.

          -ディレクトリー表示画面のPRINT 行コマンド Long File Name
　　　     オプション
             (WindowsでのP 行コマンドで実行するPRINTコマンドの
　　　　      パラメータに長いファイル名を使用)

             OPT PLFN  [off | on]

             off :FAT(8.3ファイル名)を使用
             on  :長いファイル名を使用(省略値)

         (注)-WIN版,GCC版でのみ有効.
              GCC版はWindows9xのDOS窓で実行する時のみ有効.

          -バイナリーファイル表示コードオプション

             OPT ASCII [off | on]

             off :0x80 以上のコードも正しいDBCSなら表示。
             on  :0x80 以上のコードは印刷不能文字として表示する。
#ifdef AIX
             初期設定値は on.
#else
             初期設定値は off.
#endif

          -Hex文字の大文字、小文字設定。

             OPT HEX [U | L]

             L :小文字表示
             U :大文字表示。

             Hexモードで開いたファイルの内容、バイナリーモードで開いた
             時の行番号欄オフセット表示に影響します。

          -行末ID文字コードと表示属性設定。

             OPT EOL { " " | eol-char | 0xXX | default } [ON | OFF]

             eol-char:行末を表示する文字を指定する。
#ifdef UNX
	#ifdef AIX
             defaut  :"_"。
    #else
             defaut  :x1d 、但し kon では "_"。
	#endif
#else
             defaut  :x1b。
#endif
             ON      :行番号欄と同じ色表示。
             OFF     :ファイル内容表示欄と同じ色表示。
             (表示属性 ON/OFF はEOLとFOLDで共通で両方に適用される）
                                                                      
            （注)EOLの位置でDelキーを押すと行が連結されます。         

          -折り返し行、行末ID文字コードと表示属性設定。

             OPT FOLD { " " | fold-char | 0xXX | default } [ON | OFF]

             fold-char:折り返し行の行末を表示する文字を指定する。
                       (バイナリーファイルと分割された長文テキストファイルに適用）
                       省略値は "|"。
             ON      :行番号欄と同じ色表示。
             OFF     :ファイル内容表示欄と同じ色表示。
             (表示属性 ON/OFF はEOLとFOLDで共通で両方に適用される）

#ifdef UNX

          -フロッピードライブID認識オプション。

             OPT FD [ON | OFF]

	#ifdef AIX
             a: ではじまるファイル名の処理。
    #else
             a: または b:ではじまるファイル名の処理。
    #endif

             ON      :FDドライブを処理する。
             OFF     :通常ファイル名として扱う。

#endif
          -ビープオプション。

             OPT BEEP [ON | OFF]

             エラーのときビープを鳴らす(省略値)/鳴らさない。

          -右Ctrlキー使用オプション。

             OPT RCTL [ON | OFF]

             右Ctrlを実行キーとして使用する/しない(省略値)。
             ONのときEnterキーは改行のみをする。
             このコマンドでONにした場合は再起動の際、                 
             iniファイルのR-Ctl_ENTER=0指定より優先します             
             iniファイルのR-Ctl_NewLine=1を有効にするにはこの設定が必要です。
                                                                      
          （注）Windows98,LinuxConsole版では無効です。                

          -Ctrl+文字キーの機能キー割り当ての有効化。

             OPT CCFUNC [ON|OFF]

             Ctrl+文字キーを機能キーと使用可能にするオプション。
             LinuxなどShift+機能キーが使えない場合に使用。
             iniファイルなどでの割り当てはこのオプションに無関係に可能。
             このオプションがOFF(省略値)のとき割り当てが無視される。
             ONのとき省略値では以下が有効になる。
                         C_t=S_TAB,C_b=S_BS,C_x=S_ENTER,C_a=S_INS,
                         C_d=S_DEL,C_e=S_END,C_p=S_PGUP,C_n=S_PGDN,
                         C_u=S_UP,C_f=S_DOWN,C_l=S_LEFT,C_r=S_RIGHT

          -フリーカーソルモード。

             OPT FREECSR [ON|OFF]

             ファイル画面、ディレクトリー画面でカーソルが画面の端に
             来たときスクロルする(OFF)か画面の反対側にカーソル移動
             する（ON:省略値)。
             但し、カーソルが行番号欄のときは常にWrapする。

          -クリップボード貼り付けモード。

             OPT CBSAVE [ON|OFF]

             カット＆ペーストの削除操作(Alt+Del)のとき削除データを
             クリップボードに保存する(ON:省略値)しない(OFF)を設定。
             巨大ファイルのときのOFFにすると応答が速い。

          -コマンドロギングモード。

             OPT CMDLOG [ON|OFF]

             入力コマンドのロギングを設定します。省略値はOFFです。
             ログファイルは "b/e ::cl" で開きます。
             (GCC,OS/2では一旦"OPT CMD OFF"にしてから開いてください）
             編集行コマンド"#"で再実行できます。(TimeStampフィールドは無視)
             exeコマンド用のファイルを作成するのに使えます。

             sample cmdlog.
                === log opened === : 2005/04/12 20:50:14
                =20:50:17.937:e x1
                =20:50:23.828:e ::cl
                =20:50:56.953:e x2
                =20:51:00.484:e ::cl
                =20:51:06.203:e xefunc2.c
                === log closed === : 2005/04/12 20:51:33

          -"実行"キーの後のカーソル位置。

             OPT RETTOL [ON|OFF]

             編集画面で実行キー(Enterキー、RCTL on の時は右Ctrlキー)のあとのカーソル位置付け。
             OFF で行番号欄(省略値)、ON で編集内容の１桁目に移動する。


          -罫線キー設定。

             OPT LINECH [on | off | filename | reload ]

#if defined(LNX) && !defined(XXE)
             on/off  :罫線キーに iniファイル(xelch__.ini[.locale])で
                      出力文字列を割り当てた時
                      xxxx(ON)かyyyy(OFF)のどちらを書き出すかを設定変更する。
　　　　　　　　　　　省略値はOFF。
                      (Linuxコンソール版以外では+Shiftキーでxxxxかyyyyを選択。
                       Linuxコンソール版は+Shiftの複雑な組み合わせを検知できない。)
                      また、ONのときxxxxが1バイトならこれに一致する文字は
                      ACS機能を使用して、罫線文字として表示されます。
                                                                      ||~v124I~
                      ISO8859-1など >0xa0 を使う欧州言語の場合は OFF にしてください。||~v124I~
#endif

             filename:省略値の設定ファイル以外を読み込み一時的に設定変更する。
             reload  :省略値の設定ファイルを再読み込みする。

             iniファイルの処理結果は=0.2画面で確認できます。
                                                                      ||~v124R~
          -行コマンド "I"(行挿入)の継続                               ||~v124R~
                                                                      ||~v124R~
             OPT INS_LINE [on | off ]                                 ||~v124R~
                                                                      ||~v124R~
             on/off  :Inn (単純行数指定の行挿入)コマンドのあと        ||~v124R~
                      実行キーで1行挿入を継続するオプション。         ||~v124R~
                      省略値はON。                                    ||~v124R~
                      行挿入を停止する条件は実行きーを押した時        ||~v124R~
                      カーソルが最後の挿入行上でない、                ||~v124R~
                      または、最後の挿入行の行長が０、                ||~v124R~
                      または、他のコマンド、行コマンドの入力がある、  ||~v124R~
                      または、他所で行削除をした、                    ||~v124R~
                      です。                                          ||~v124R~
                                                                      ||~v124R~
#if define(LNX) || defined(W32)                                       ||~v125R~
                                                                      ||~v124R~
          - ユニコード結合文字表示                                    ||~v125R~
                                                                      ||~v125R~
             OPT UNICOMB [ COMB | SPLIT | UNPR ] [ SHADOW | ITSELF | PADDING | U-xxxx ]||~v125R~
                                                                      ||~v125R~
               COMB, SPLIT, UNPR : それぞれ 結合表示、単独表示、代替文字表示に設定します||~v128R~
                                                                      ||~v128R~
               次の３オペランドはLinuxコンソール版のみで単独表示/結合表示モードのときの表示方法です||~v129R~
               ただし結合表示モードのときはカーソルがその行にあるときのみ適用されます||~v129R~
                 SHADOW : 左の文字との合字を表示                      ||~v125R~
                 ITSELF : 結合文字を単独で出力します。見えるか見えないかはLinuxしだいです。||~v125R~
                 PADDING: tab 表示文字を表示。TAB OFF コマンドで非表示になります||~v125R~
               U-xxxx : 適当なユニコードを指定します。但しSBCSに限る  ||~v129R~
               U-00 は省略値(':'(u-3a))に戻します                     ||~v128R~
               オペランド指定無しで現況をレポートします               ||~v128R~
                                                                      ||~v125R~
              -コマンド入力行(2行目)ではキーボードで修正できるように常にSPLIT モード(２桁で別々に表示)扱いとする||~v128R~
              -表示幅=0の文字の結合表示。結合の正当性はNoChk。        ||~v125R~
               (Linuxコンソール版は結合文字はmax4文字まで)            ||~v125R~
              -Alt+":" でも 結合表示-->単独表示-->代替文字表示を切り替える事ができる。||~v128R~
              -Linuxの古いDistributionでは結合をうまく表示できないこともあるようです。||~v125R~
               単独表示の指定を変えて分離表示して見て下さい。         ||~v125R~
               Edit/Browse 画面ではカーソル位置の結合文字は単独表示するので||~v128R~
               表示位置がカーソル位置によって移動することがあります。 ||~v128R~
              -LinuxGUI版(gxe)の印刷は Wysiwig チェックボックスがOffなら結合印刷する。||~v125R~
                                                                      ||~v125R~
          - リガチャー設定                                            ||~v125R~
                                                                      ||~v125R~
             OPT LIGATURE [ON | OFF]                                  ||~v125R~
                                                                      ||~v125R~
              -Alt+";"でもリガチャーをON/OFFできる。                  ||~v125R~
               GUI版はチェックボークスの指定が保存され、コンソール版はAlt+";"の状態が保存される。||~v125R~
               Windows7 以降はコンソール版では使用できません          ||~v129R~
                                                                      ||~v125R~
              -リガチャーONのとき描写は背景の処理(Windows,GTK,pango,ncurses)にゆだねる。||~v125R~
               OFFの時はモノスペース表示する。                        ||~v125R~
               ff,fiなどの欧州フォントリガチャーのみならずアラビア語などで試すとよい||~v125R~
               RTL言語はLigature ONでないと読めないそうです。         ||~v125R~
               Ligature ON でも 結合文字指定(Alt+":")しないと意味がないかもしれません.||~v125R~
                                                                      ||~v125R~
              -リガチャーONの時でもカーソル位置は対応するバイト位置の文字を表示する。||~v125R~
               Backspaceに備えてカーソルの直前の文字もその位置に表示。||~v125R~
               縦HEX表示の場合カーソルがHEX行にある場合の文字行の対応する文字もバイト位置に表示する。||~v125R~
               そのため、ヘブライ語、アラビア語などRTL(RightToLeft)文字はカーソルの左右で別々にRTLになる。||~v125R~
                                                                      ||~v125R~
              -Ligature が望ましくないケースはLigature チェックボックス ON は無視する。||~v125R~
               バイナリーファイル、横Hex表示、縦Hex表示のHEX行、コマンド入力行など。||~v125R~
              -コマンド入力行では常にLigature OFF扱いとする           ||~v128R~
                                                                      ||~v125R~
#endif                                                                ||~v125R~

   = カーソル移動

        POS     行  [桁]

            行      :ファイルの行番号ではなく画面の行位置(0 から)
            桁      :ファイルの行番号ではなく画面の桁位置(0 から)

            +/- をつけると現在位置からの相対位置になる
            画面の幅/高さを越えても次の行/桁には回らない
            メニューオプション 0.1 のコマンドキー コマンドで例えば
             "Pos 10;hsp;home" のように使用する

   = PROfile(プロファイル)。                                          ||~v124R~
                                                                      ||~v124R~
             PRO {?|*|path|ext} [save|reset] [all | tab | cols | numfld | syn]"||~v124R~
                ?     :ヘルプ                                         ||~v124R~
                *     :現在開いているファイルのプロファイルレコード   ||~v124R~
                path  :現在開いているファイルの親デレクトリーのプロファイルレコード||~v124R~
                ext   :現在開いているファイルの拡張子のプロファイルレコード||~v124R~
                  後続のオプション指定がない時はプロファイルを表示    ||~v124R~
                  後続のオプション指定がある時は省略値は"*"。         ||~v124R~
                save  :プロファイルレコードに書き込む。               ||~v124R~
                       後続のオプション指定がある時は省略可能。       ||~v124R~
                reset :プロファイルレコードを一旦削除。               ||~v124R~
                       後続でオプション指定しても良い。               ||~v124R~
                all   :現在の状況から全てのプロフィールを指定のプロファイルに書き込む||~v124R~
                      あるいは個別のプロフィールを複数指定する        ||~v124R~
                      (PROコマンドは個別の値を設定するのではなく現在の値を||~v124R~
                      path,extの省略値として設定するために使用します) ||~v124R~
                tab   :tabclear属性                                   ||~v124R~
                cols  :cols on/off と cols タイプ                     ||~v124R~
                numfld:行番号欄(カラム73-80)の有無とその書込み保護,   ||~v124R~
                       COBOL行番号欄(カラム1-6)の有無とその番号チェック、||~v124R~
                       固定長設定とその行長、マージン幅。                　　　||~v124R~
                syn   :シンタックスハイライト関連。                   ||~v124R~
                                                                      ||~v124I~
           例えば                                                     ||~v124I~
             ディレクトリー dir1 内のファイルの省略値をSPFファイル(80桁固定長行番号付ファイル)としたい場合||~v124I~
             そのディレクトリー内のファイルを1つ開き("EN dir1\samp1") "PRO path save"と入力します。||~v124I~
             そのディレクトリー内のファイルはそのファイル固有のプロファイルレコードがなければ||~v124I~
             "E dir1\samp2"で"EN dir1\samp2"と同じになります。        ||~v124I~
             これはデレクトリーリストからSelectした場合にも適用されます。||~v124I~
             拡張子 cob のファイルをCOBOLファイル(80桁固定長col.1-6はCOBOL行番号)としたい場合は||~v124I~
             cobを拡張子にもつファイルを開き("EC samp3.cob") "PRO ext save"と入力します。||~v124I~
             プロファイルレコードの内容を見たい場合は ファイルを開いた画面で "PRO {*|path|ext}" を使用。||~v124I~
                                                                      ||~v126R~
   = Find PSP/PSF コマンド表示                                        ||~v128R~
                                                                      ||~v128R~
        PSD  (オペランドなし)                                         ||~v128R~
                                                                      ||~v128R~
          現在有効なPSP/PSF オプション付き Find コマンドを表示        ||~v128R~
          STDの表示は通常のFind コマンド                              ||~v128R~
                                                                      ||~v128R~
   = Undo戻し                                                         ||~v126R~
                                                                      ||~v124R~
        REDo                                                          ||~v126R~
                                                                      ||~v126R~
          Undoで戻された修正をUndo前の状態に戻します                  ||~v126R~
                                                                      ||~v126R~
   = REFresh

        REF

           ディレクトリーリストを読み直して最新にする

   = 行番号振直し

        REN

           NUM reset コマンドと同じ
           但し編集画面以外ではファイル改名コマンドとなる。

   = 取消

        RESet [?] [X] [L]                                             ||~v124R~

           オペランド指定なしは Esc キー の連続と同じ
            .探索文字列,カット&ペースト複写済領域の反転表示の解消
            .未処理行コマンドのクリアー(行ラベル以外)
            .エラー行(行番号欄反転)リセット

           ? : ヘルプメッセージ表示                                   ||~v124R~
           X : 表示行を全て再表示
           L : 行ラベルをクリアー(Escキー３回連続も同じ)

   = 回転

        ROTate [R|L|X|Y|RX|LX|RJ|LJ] [DBCSAR|DBCSAL] [NX] [TAIL] [n-m] [.lab1 .lab2]


           R:右90度回転、L:左90度回転、X:X軸回り、Y:y軸回り、
             RX:R+X、LX：L+X、LJ:左寄せ、RJ:(最長行の右端に）右寄せ。
             例えば　0001| ab
             　　　　0002|cdef   を回転すると
            R: 0001|c    L: 0001| f    RX: 0001|f     LX: 0001| c
               0002|da      0002|be        0002|eb        0002|ad
               0003|eb      0003|ad        0003|da        0003|be
               0004|f       0004| c        0004|c         0004| f

            X: 0001|cdef Y: 0001|ba    RJ: 0001|  ab  LJ: 0001|ab
               0002| ab     0002|fedc      0002|cdef      0002|cdef

           DBCSAR/ :R/LRX/LXのときSBCSも2カラム与えて同じ行の文字が   
            DBCSAL  同じ桁に整列するようにする。このときSBCSを１桁目(DBCSAL)か
                    2桁目(DBCSAR)かを指定する。                       
           NX      :表示行のみ対象。
           TAIL    :各行,後のスペースはカットする。                   ||~127BR~
           n-m     :回転範囲の桁指定。
           .lab1/2 :回転範囲の行指定。

          -縦書き横書き変換などに使用。

#if defined(UNX) || defined(W32)

   = リモートシェル

        RSH [-{e2s|s2e}] [-L username] * cmd-parm
        RSH [-{e2s|s2e}] {hostid:|*:|hostname|ipaddr}
                             [-L username] [cmd-string]

            最初の形式は編集画面で開いているリモートファイルをリモート実行
            する時に使用。

            -e2s/s2e :出力のEUC<->SJIS変換指定。
                      ホスト名が hostid:, *: 指定のときは::xehost内に
                      DBCS=を指定することで省略可能。
            hostid:  :"::xehost"に定義したリモートホストIDを指定する形式。
                      コマンド出力画面では"rsh host1:"のようにcmd-stringを
                      指定せず、hostid: のみの指定するとこの画面は"rsh :"
                      でリセットされるまでそのホスト向け専用となり
                      あとのコマンドは直接cmd-string入力で良くなる。
                      この状態でローカルコマンドを実行したい時は
                      ":grep ABC *c" のようにローカルコマンドの先頭に":"をつける。
            *:       :現在開いているリモートファイルのあるホストで実行する。
            hostname :UNIXでは/etc/hosts,WinXPでは windows Dir 内の
                      system32\drivers\etc\hosts,などのhostsファイルに
                      定義されたホスト名を指定する形式。
            ipaddr   :hostsに定義がないホストを192.168.2.5の様に直接
                      アドレス指定する形式。
                      ipaddrはLocalのhostsに定義されていなければならない。
            -L user  :どのUserとしてLoginするかを指定。
                      rshの権限許可に.rhostsを使用する方法の場合
                      このUserのホームDirの".rhosts"ファイルに
                      ログイン元ホスト名とログイン元User名ペアを定義
                      する。
            cmd-string: コマンド内の"(二重引用符)は \" の様に指定する
      (注) permission denyが出る場合はsyslogを見てください
           Linuxの場合(/etc/syslog.confで定義した)/var/log/messagesに
           denyの理由が出ていると思います。
           linuxでは.rhostsのPermissionは600でないといけないようです。

#endif

   = 保存

        SAVe    [ファイル名]  [/M{T|P|U|M|E|R|V}] [-x | -nx] [-NB|-BK] [-F{n[-m]|vfmt}]||~127BR~
                [-CPU8|-CPLC|-CPEB[:codepage]] [-IE] [-S{r|i|d}] [-Force]                            ||~v124R~||~v125R~||~v125R~||~v125R~||~v129R~

            ファイル名:ワイルドカード指定もOK.
                                                                      ||~v125R~
                 (注)  ファイル名を指定しない場合は他のオプションには ファイル名と間違わないように||~v125R~
                       "-" ないし "/" のプレフィックスが必要です。    ||~v125R~
                                                                      ||~v125R~
            /M      :改行コードを変えて保存することの指定。
                     T:textモードwrite. Linux:0a, Windows:0d0a.       ||~v125R~
                       Windows では 単独 0a も 0d0a に変換される。    ||~v125R~
                     P:0d0a(PCファイル）
                     U:0a  (Unix ファイル)
                     M:0d  (Macファイル)
                     E:15  (EBCDICファイル)                           ||~v125R~
                     R:固定長レコードモード。 ファイル名指定のときのみ有効  ||~v125R~||~127BR~
                       /Fn[-m] でレコード長を指定する。               ||~v125R~
                     V:可変長レコードモード。vfmt で可変長レコード形式を指定する||~127BR~
            -x      :非表示行のみ対象とする。
            -nx     :表示行のみ対象とする。
            -NB     :ファイル保存時の一時バックアップを取らない。     ||~v124R~
                     更新ファイル保存時のABENDでファイルが壊れるのを避けるために||~v124R~
                     フロッピーDisk以外のローカルファイルに対しては、保存直前で元ファイルを||~v124R~
                     同じDirで複写保存し出力完了後削除するが、パフォーマンス、||~v124R~
                     Diskスペースの関係でそうしたくない場合に指定する。||~v124R~
            -BK     :Editコマンドの-NBオプションを否定して一時バックアップを取る。||~v124R~
            /Fn[-m] :レコードサイズ、マージン                                            ||~v124R~||~v125R~
                     レコードモードに変更する時、レコードサイズを変更する時に指定||~v125R~
            /Fvfmt  :可変長レコード形式。EDItコマンド参照             ||~127BR~
                                                                      ||~v124R~
#ifdef UTF8SUPP                                                       ||~v125R~
            -CPU8/CPLC: 出力ファイルのEncoding指定。                   ||~v125R~||~v125R~
              /CPEB     必要なら指定のEncodingに変換の、書き出される。 ||~v125R~||~v125R~
                        CPEB:codepage 形式では任意の EBCDIC コードページが指定可能。||~v125R~
            -IE      : UTF8-->各国語変換で変換エラーを無視して出力。  ||~v125R~||~v125R~
                       エラー文字は"?"に置換されている。              ||~v125R~
            -S{r|i|d}: SO/SI オプション                               ||~v125R~
                       r : 画面のファイルが EBCDIC で CPLC/CPU8 を指定した時||~v125R~
                           SO/SI をスペースに置換する                 ||~v125R~
                           画面のファイルが EBCDIC でなく CPEB を指定した時||~v125R~
                           SO/SI の時可能であれば前後のスペースを置換する||~v125R~
                       i : EBCDIC への変換の時 SO/SI を挿入する       ||~v125R~
                       d : EBCDIC から変換の時 SO/SI を削除する       ||~v125R~
#endif                                                                ||~v124R~
            -Force   :ファイルのタイムスタンプが読み込み時と変わっているとき||~v129R~
                      (現セッションの外で更新された),その旨の警告が出るが||~v129R~
                      無視して保存するときに指定する                  ||~v129R~

            -編集画面は終了せずに表示ファイルの全行を出力します
            -ファイル名指定はディスク フルなどで保存できない時などに  
             使えます.ファイル名を指定し一旦別のディレクトリーにSAVeし
             編集画面はCANcelで終了しディスクを掃除した後コピーし戻す 
            -ファイル名を指定した時既存ファイルなら確認応答を要求します
            -BROWSEモードの時ファイル名を指定したコマンドのみ受付けます
            -CREate/REPlace との違いは SAVe はファイル全体が対象です。
                                                                      
   = スクロール量設定                                                 
                                                                      
        SCRoll  [p | page | h | half | c | csr | m | max | 数字]      
            -スクロール量を設定します
             コマンド入力行右端のスクロール量フィ−ルドを上書き入力
             しても同じ結果が得られます.
            -数字の最大値は 9999                                      ||~v127R~
            -表示/編集/ディレクトリーリスト/コマンド結果編集 それぞれ
             個別に設定出来ます.
                                                                      
   = ファイル選択

        {SELect | ST | SB | SH | SN | SC(=SL) | SCN(=Si) | SK | SKN(=SJ)}
                 [ファイル名 | -lineno]   [オプション...]             ||~v128R~

            -ディレクトリー表示画面でのみ有効.
             ヘッダー行に表示されたディレクトリー名とオペランドの
             ファイル名が連結され,ディレクトーを表示で開いたか,編集で
             開いたかによってそれぞれ BROwsw,EDIt コマンドになります.
             DirListのメンバーが1つのときはファイル名を省略できます。
            -コマンド名は対象のファイルのタイプで使い分ける。EDIt参照。
             オプションも EDIt コマンド参照。
            -"-lineno"                                                ||~v128R~
             ファイル名の代わりに "S -5" の様に行番号を指定できる.    ||~v128R~
             ファイル名も行番号も指定のない場合は最初のメンバーを開く ||~v128R~
                                                                      ||~v129I~
   = 行選択                                                           ||~v129R~
                                                                      ||~v129I~
        SELect [all] [col1 col2] [label1 label2]                      ||~v129R~
                                                                      ||~v129I~
            -label1/2 で行範囲指定、col1/2 でカラム範囲指定           ||~v129R~
             labelは1/2とも数字による行番号指定でもよい               ||~v129R~
             col の指定があるとブロックモード、ないと領域モード       ||~v129R~
             label/colomn の指定がないと全選択                        ||~v129R~
               例）sel; sel .a .b; sel 1 20; sel 10 20 .1 .4;         ||~v129R~
            -Edit画面で 行選択し、Cut/Copy/Pasteにつなげていきます    ||~v129R~
             ブロックモードではすぐ Paste できます。                  ||~v129R~
             領域モードでは Paste の対象にもなるので この領域を Paste するには||~v129R~
             領域の保存(Alt+F9)をしてから Paste(Alt+F8/Alt+Ins)します ||~v129R~
            -省略型:"S"は使用できません、                             ||~v129R~
             ファイル表示/編集画面で"S" は "SAVe" になります          ||~v129I~
                                                                      ||~v129I~
#ifdef WIN

   = 休眠。

        SLEep interval

            -interval 秒間、入力をブロック。
             中断はEscキーを2回連続して押す。
            -ATコマンドのコマンド列内などで使用する。

#endif

   = 行整列(ソート)

        SORt  n[-[m]][/[b][c][d][i][r]]  [n[-[m]]...] [NX] [NB] [D[S|I|X]] [SBCS] [.lab1 .lab2]||~v125R~||~v125R~
        SORt  [/o]{N|T|S}[-]
                                                                      
            2番目の形式はDirリストでタイムスタンプ/サイズの昇順/降順整列
            に使用。
            Boundsが設定されているとマージン内のみを移動する。        
            UTF8ファイルの照合順序はユニコード値です。                ||~v125R~

            -n[-[m]]でソート桁位置を指定。5個まで指定可能。
               n    : n 桁目 1 バイトキー
               n-   : n 桁以降がキー, 長さは 32760.                   ||~v127R~
               n-m  : n 桁目からm桁目までがキー
            -オプションは 桁位置に続けて指定。例えば 10-20/r
               b    : キーブレイク行を判別。
               c    : 大文字小文字を区別(Case-Sensitive)。省略値。
               d    : キー重複行を判別。
               i    : 大文字小文字を同一視(Case-Insensitive)
               r    : 逆順ソート
            -NX     :非表示行をSort対象外とする指定。
            -NB     :Bounds設定を無視する（行全体を移動）。           
            -D[S|I|X]:UTF8ファイルでキーカラム指定がDBCSを分割する時の扱い||~v125R~
                      S:スペースみなす、 I:分割無しのDBCS値で比較、X:その桁は除いて比較||~v125R~
            -SBCS   :BNDs境界でのDBCS考慮をしない。                   ||~v125R~
            -.lab1/2:行番号欄に設定したラベルを対で指定して整列行範囲を
                     限定する.行番号を使用しての範囲指定も可.
            -/ox[-] :x=N:名前順、x=T:時刻順、x=S:サイズ順、-：降順。

   = 短縮ファイル名                                                   ||~v129R~
                                                                      ||~v129R~
        SP { edit | refresh | add sp-name { file-spec | *\\ | ^*\\ } }||~v129R~
            edit   : 定義ファイル(::xe.shortpath) を編集表示          ||~v129R~
                     修正して保存すれば、次回から有効になる           ||~v129R~
                     あるいは保存後 "refresh" すれば有効になります    ||~v129R~
                     定義ファイルの各行は"短縮名 フルパス名" の形式   ||~v129R~
                     コメント行は先頭に "#"                           ||~v129R~
                     例) srctest1 d:\eclipse-workspace\testproject1\src\com\debug\test||~v129R~
                         ecws  "c:\Program Files\Android\Android Studio\gradle"||~v129R~
            refresh: 定義ファイルを修正した場合に、その修正を反映させる||~v129R~
                     "sp edit" 画面で修正、保存後 あるいは直接 ::xe.shortpath ファイルを||~v129R~
                     他のプロセスで修正した後に使用する               ||~v129R~
            add    : 定義ファイルに sp-name:短縮名, file-spec:ターゲットファイル名 の行を追加||~v129R~
                     この定義はすぐ使用できる                         ||~v129R~
                     *\ :現在開いているファイル/ディレクトリー,       ||~v129R~
                     ^*\:分割画面の他方で現在開いているファイル/ディレクトリー||~v129R~
                     も状況が適当ならば使用できる                     ||~v129R~
                     例) sp add srctest1 d:\eclipse-workspace\testproject1\src\com\debug\test||~v129R~
                         sp add ecws  "c:\Program Files\Android\Android Studio\gradle"||~v129R~
        .短縮名は "sp:"プレフィックスで使用する                       ||~v129R~
         (sp:xxx の xxx が未定義の場合はそのまま "sp:xxx" として使用される)||~v129R~
           例) e sp:srctest1\Main.java                                ||~v129R~
               e sp:ecws                                              ||~v129R~
               e "sp:ecws\space embedded name"                        ||~v129R~
               xcopy sp:ecdir\x1 sp.ecdir\x2                          ||~v129R~
               cd sp:ecdir                                            ||~v129R~
                                                                      ||~v29WR~
#ifdef Axe (Android版)                                                ||~v29WR~
                                                                      ||~v29WR~
           sp-name に "//" を指定すると共有ストレージ上のフォルダーにアクセスできるようになります。||~v29WR~
           "sp add //" とするとアンドロイドのダイアログが表示され、   ||~v29WR~
           "このフォルダーを使用"を押すと指定のフォルダーが定義ファイル(::xe.shortpath)に登録され、||~v29WR~
           以降は "e //フォルダー名"のようにそのフォルダー内のファイルにアクセスできます。||~v29WR~
           そのダイアログでは新規フォルダーを作成することもでき、     ||~v29WR~
           例えば フォルダー名 "Axe" を作成し"このフォルダーを使用"とすれば||~v29WR~
           "e //Axe" でディレクトリーリストが表示される。             ||~v29WR~
           Android11以降                                              ||~v29WR~
             Android11以降では共有ストレージの "全てのファイル" か "Mediaのみ" かの||~v29WR~
             アクセス許可を設定できる。                               ||~v29WR~
             アプリの導入直後に表示されるダイアログでどちらの権限設定にするかを答えてください。||~v29WR~
             ここで"全てのファイル"としなかった場合でもメニューから、"設定"、"アンドロイド関連"で||~v29WR~
             変更することができます。                                 ||~v29WR~
             "全てのファイル"とした場合、                             ||~v29WR~
               "アンドロイド関連"ダイアログには共有ストレージのパス名が表示されているので||~v29WR~
               そのパス名を直接利用できます。もしこのダイアログの/sdcard のパス名が共有ストレージのパス名と同じなら||~v29WR~
               /sdcard も利用できます。                               ||~v29WR~
               また =6 画面でのgrep, xfg などのコマンドラインツールのパラメータに短縮名も使用できます。||~v29WR~
               例えば "gre findWord //Axe/*.txt"。                    ||~v29WR~
#endif Axe (Android版)                                                ||~v29WR~
                                                                      ||~v129R~
   = コマンド非同期実行

        SPAwn cmd-name [args]

        -エクスプローラーなどを開始するのに使用。

   = 行分離

        SPLit {CONT | OVER | ALL | EXP | TAIL} [SBCS] [TOL]           
               [STRDELM|STRSPACE] [OOM] [SPACE1]                      
               [width] [CRLF] ["str"] [.lab1 .lab2]                   ||~v124R~

            -CONT:/Mnnで表示行長指定された場合で行分割された長文が対象。
            -OVER:CONTに加えて、行長>widthの行を対象とする。
                  "str"(分離文字)を指定するとwidthをより長い行が
                  widthに最も近い分離文字のところで行が分割されます
            -ALL :全行が対象。省略値。
               指定の分離文字で識別したワードが最大widthに入る様に分離。
               OVERとは異なり短い行はwidthになるまで詰め込んで連結されます。
               widthの指定が無い場合はファイルを開く時に/Mパラメータで
               指定された表示長を使用。
               分離文字指定の無い場合は単純に指定幅で分離。
               テキストファイルの場合widthがDBCSを分断する場合はSBCSの
               指定が無い場合後の行に入れられます。
               width指定も/Mパラメータの指定も無いときは結果の行長は
               無視して単純にすべての分離文字或いは分離文字列で分離します。
            -EXP :行末にwidthまで指定の文字(省略値=" ")を追加
            -TAIL:行末から指定の文字列の文字(省略値=" ")を全て削除。  ||~127BR~
                  width指定があるときは指定の文字列も文字がなくてもその幅までは削除。||~127BR~
                  分離文字列で複数文字を指定した時その中の全ての文字を行末から削除||~v125R~

            -SBCS:width境界でのDBCS考慮をしない。
                  バイナリーファイルはSBCS扱い
            -TOL :分離文字を先頭にして行分割。
            -STRDELM:str パラメータを一連の文字列とみて行分割。
            -STRSPACE:連続するスペースでは1度しか行分割しない。       
                      "str"を指定しない,あるいは"str"に               
                      スペースを含まない場合でもSTRDELMを指定すると   
                      "str"がスペースを含むものとして処理する。       
            -SPACE1  :ALL/OVERのとき連続スペースを１文字スペースに縮める。
            -OOM     :TAILオプションのとBounds/マージン設定を無視。   
            -width:CONT以外で新しい行長を指定。
                   前の行に補充されるデータのタブは現在のタブ拡張のまま||~v124I~
                   スペースに置換されます。                           ||~v124I~
                   バイナリーファイルの表示幅を変えるには
                   例えば "SPL 100" でよいです。これは表示モードでもOK。
            -CRLF    :widthと改行コードで行分割します。               ||~v124I~
                      分離タイプは "ALL" とみなします。               ||~v124I~
                      分割行に改行コードは挿入しません、              ||~v124I~
                      テキストファイルの表示幅を設定するのに使用します。||~v124I~
            -str :分離文字。引用符で囲むこと。                        
                  EXTのときは1文字指定はパディング文字、ASCII文字に限ります。||~v125R~
                  2文字指定は文末文字+パディング文字、                
                  3文字指定は文末文字+パディング文字+行末文字となる。 
                  \x0d のようにHex指定も出来ます。                    ||~v126R~
                  \x8140 のように複数文字指定できますがDBCSとは解釈しません||~v126R~
                  この場合SBCS 2文字指定とみなされます                ||~v126R~
            -.lab1/2:行番号欄のラベルを指定して範囲指定する。
                                                                      
        (例-01). ALL(省略値) の例。                                   
                                                                      
            ===>spl 20                                       
            col    |....+....1....+....2....+....3....+....4
            *******|********** TOP OF FILE *****************
            0001000|aaaaaaaaaaaaaaaaaa AAAAAAAAAAAAAAAAAAAAA
            0002000|bbbbbbbbbbbbbbbbbbb BBBBBBBBBBBBBBBBBBBA
            0003000|cccccccccccccccccccc CCCCCCCCCCCCCCCCCCA
            0004000|dddddddddddddddddddddDDDDDDDDDDDDDDDDDDA
            0005000|eeeeeeeeeeeeeeeeeeeeee EEEEEEEEEEEEEEEEA
            0006000|   FF                                   
                                                            
         ==>分離文字指定のない場合単純に詰め込む。          
            TFLowと異なり行末のためのスペース挿入もない     
                                                            
            col    |....+....1....+....2                    
            *******|********** TOP OF FI                    
            0001000*aaaaaaaaaaaaaaaaaa A                    
            0001100*AAAAAAAAAAAAAAAAAAAA                    
            0002000*bbbbbbbbbbbbbbbbbbb                     
            0002100*BBBBBBBBBBBBBBBBBBBA                    
            0003000*cccccccccccccccccccc                    
            0003100* CCCCCCCCCCCCCCCCCCA                    
            0004000*dddddddddddddddddddd                    
            0004100*dDDDDDDDDDDDDDDDDDDA                    
            0005000*eeeeeeeeeeeeeeeeeeee                    
            0005100*ee EEEEEEEEEEEEEEEEA                    
            0006000|   FF                                   
                                                            
        (例-02). OVER の例。                                
                                                            
            ===>spl over 50                                 
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10
            *******|********** TOP OF FILE *****************************************************************************
            0001000*time           event-type       action-before    ,time           event-type       action-after
            0002000*10:11:12.555   aaaa01           bbbbbbbbbb       ,10:11:12.555   AAAA02           BBBBBBBBBB
            0003000*10:11:12.555   aaaa03           bbbbbbbbbb       ,10:11:12.555   AAAA04           BBBBBBBBBB
            0004000*10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC,
            0005000*10:11:12.555   aaaa07           bbbbbbbbbb       ,10:11:12.555   AAAA08           BBBBBBBBBB
                                                                      
         ==>指定の長さ以上の行を行分割                                
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5
            *******|********** TOP OF FILE ***************************
            0001000*time           event-type       action-before    ,
            0001100*time           event-type       action-after      
            0002000*10:11:12.555   aaaa01           bbbbbbbbbb       ,
            0002100*10:11:12.555   AAAA02           BBBBBBBBBB        
            0003000*10:11:12.555   aaaa03           bbbbbbbbbb       ,
            0003100*10:11:12.555   AAAA04           BBBBBBBBBB        
            0004000*10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC,
            0005000*10:11:12.555   aaaa07           bbbbbbbbbb       ,
            0006000*10:11:12.555   AAAA08           BBBBBBBBBB        
                                                                      
        (例-03). CONT の例。                                          
                                                                      
            ===>e x2sv m50  (表示幅を指定してファイルを開いたとき)    

            ===>spl cont                                              
            col    |....+....1....+....2....+....3....+....4....+....5....+....6
            *******|********** TOP OF FILE ****************************
            0001000-time           event-type       action-before    ,
            0001001.time           event-type       action-after      
            0002000-10:11:12.555   aaaa01           bbbbbbbbbb       ,
            0002001.10:11:12.555   AAAA02           BBBBBBBBBB        
            0003000-10:11:12.555   aaaa03           bbbbbbbbbb       ,
            0003001.10:11:12.555   AAAA04           BBBBBBBBBB        
            0004000|10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC,
            0005000-10:11:12.555   aaaa07           bbbbbbbbbb       ,
            0005001.10:11:12.555   AAAA08           BBBBBBBBBB        
                                                                      
         ==>行番号欄とテキスト欄の間の表示が連結行分離を示している。  
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6
            *******|********** TOP OF FILE ***************************
            0001000*time           event-type       action-before    ,
            0001001*time           event-type       action-after      
            0002000*10:11:12.555   aaaa01           bbbbbbbbbb       ,
            0002001*10:11:12.555   AAAA02           BBBBBBBBBB        
            0003000*10:11:12.555   aaaa03           bbbbbbbbbb       ,
            0003001*10:11:12.555   AAAA04           BBBBBBBBBB        
            0004000|10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC,
            0005000*10:11:12.555   aaaa07           bbbbbbbbbb       ,
            0005001*10:11:12.555   AAAA08           BBBBBBBBBB        
                                                                      
        (例-04). TAIL の例。                                          
                                                                      
            ===>spl 49 tail                                           
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....
            *******|********** TOP OF FILE ***********************************************************************
            0001000|time           event-type       action-before    ,time           event-type       action-after
            0002000|10:11:12.555   aaaa01           bbbbbbbbbb       ,10:11:12.555   AAAA02           BBBBBBBBBB
            0003000|10:11:12.555   aaaa03           bbbbbbbbbb       ,10:11:12.555   AAAA04           BBBBBBBBBB
            0004000|10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC,
            0005000|10:11:12.555   aaaa07           bbbbbbbbbb       ,10:11:12.555   AAAA08           BBBBBBBBBB
                                                                      
         ==>指定幅以降をカット                                        
                                                                      
            col    |....+....1....+....2....+....3....+....4....+.... 
            *******|********** TOP OF FILE ************************** 
            0001000*time           event-type       action-before     
            0002000*10:11:12.555   aaaa01           bbbbbbbbbb        
            0003000*10:11:12.555   aaaa03           bbbbbbbbbb        
            0004000*10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC 
            0005000*10:11:12.555   aaaa07           bbbbbbbbbb        
                                                                      
        (例-05). TAIL の例。マージン付ファイル                        
                                                                      
            ===>spl 62 tail                                           
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|*//*CID:**+A003R~:#63 option=(m72,n,p0,tabclear) update#=   14;         00010019
            0001010|.*       C R1,CLMSTART              CSECT START ADDR          **~A003R~ 00011020
            0001020|         LR R14,R1                  CHK ADDR                  **+A003R~ 00012021
            0001030|         SLL R14,1                  CHK ADDR                            00013017
            0001040|         SRL R14,1                  CHK ADDR                            00014017
            0001050|         C R14,CLMSTART             CSECT START ADDR                    00015017
            0001060|         BNH UAB&SYSNDX.E           LOWER ADDR(OUT OF RANGE)            00016017
            0001070|*        C R1,CLMEND                CSECT END ADDR + 1                  00017017
            0001080|         C R14,CLMEND               CSECT END ADDR + 1                  00018017
                                                                      
         ==>マージンは残ります。                                      
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000**//*CID:**+A003R~:#63 option=(m72,n,p0,tabclear) update#=   14          00010019
            0001010*.*       C R1,CLMSTART              CSECT START ADDR                    00011020
            0001020*         LR R14,R1                  CHK ADDR                            00012021
            0001030|         SLL R14,1                  CHK ADDR                            00013017
            0001040|         SRL R14,1                  CHK ADDR                            00014017
            0001050|         C R14,CLMSTART             CSECT START ADDR                    00015017
            0001060|         BNH UAB&SYSNDX.E           LOWER ADDR(OUT OF RANGE)            00016017
            0001070|*        C R1,CLMEND                CSECT END ADDR + 1                  00017017
            0001080|         C R14,CLMEND               CSECT END ADDR + 1                  00018017
                                                                      
        (例-06). TAIL の例。マージン付ファイル。OOMオプションの効果   
                                                                      
            ===>spl tail 80 oom                                       
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....+....9....+...10....+...11
            *******|********** TOP OF FILE ***************************************************************************************
            0001000|*//*CID:**+A003R~:#63 option=(m72,n,p0,tabclear) update#=   15**~A003R~ 00010022
            0002000|.*       C R1,CLMSTART              CSECT START ADDR          **~A003R~ 00011022
            0003000|         LR R14,R1                  CHK ADDR                  **+A003R~ 00012023 SLL R14,1  CHK ADDR  00013017
            0004000|         SRL R14,1                  CHK ADDR                            00014017
            0005000|         C R14,CLMSTART             CSECT START ADDR                    00015017
            0006000|         BNH UAB&SYSNDX.E           LOWER ADDR(OUT OF RANGE)            00016017
            0007000|*        C R1,CLMEND                CSECT END ADDR + 1                  00017017
            0008000|         C R14,CLMEND               CSECT END ADDR + 1                  00018017
                                                                      
         ==>OOMオプションはマージン設定を無視します。                 
                                                                      
            *******|********** TOP OF FILE *********************************************************
            0001000|*//*CID:**+A003R~:#63 option=(m72,n,p0,tabclear) update#=   15**~A003R~ 00010022
            0002000|.*       C R1,CLMSTART              CSECT START ADDR          **~A003R~ 00011022
            0003000*         LR R14,R1                  CHK ADDR                  **+A003R~ 00012023
            0004000|         SRL R14,1                  CHK ADDR                            00014017
            0005000|         C R14,CLMSTART             CSECT START ADDR                    00015017
            0006000|         BNH UAB&SYSNDX.E           LOWER ADDR(OUT OF RANGE)            00016017
            0007000|*        C R1,CLMEND                CSECT END ADDR + 1                  00017017
            0008000|         C R14,CLMEND               CSECT END ADDR + 1                  00018017
                                                                      
        (例-07). EXP  の例。                                          
                                                                      
            ===>spl exp 60 ";"                                        
            col    |....+....1....+....2....+....3....+....4....+.... 
            *******|********** TOP OF FILE ************************** 
            0001000|time           event-type       action-before     
            0002000|10:11:12.555   aaaa01           bbbbbbbbbb        
            0003000|10:11:12.555   aaaa03           bbbbbbbbbb        
            0004000|10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC 
            0005000|10:11:12.555   aaaa07           bbbbbbbbbb        
                                                                      
         ==>指定まで伸展。行末を明示するためにパディング文字を指定したが省略値はスペース。
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6
            *******|********** TOP OF FILE *************************************
            0001000*time           event-type       action-before    ;;;;;;;;;;;
            0002000*10:11:12.555   aaaa01           bbbbbbbbbb       ;;;;;;;;;;;
            0003000*10:11:12.555   aaaa03           bbbbbbbbbb       ;;;;;;;;;;;
            0004000*10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC;;;;;;;;;;;
            0005000*10:11:12.555   aaaa07           bbbbbbbbbb       ;;;;;;;;;;;
                                                                      
         ==>パディング文字を2桁指定すると( (spl tail で 行末スペースを削除後) spl exp 60 ";+")||~v125R~
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6
            *******|********** TOP OF FILE *************************************
            0001000*time           event-type       action-before;++++++++++++++
            0002000*10:11:12.555   aaaa01           bbbbbbbbbb;+++++++++++++++++
            0003000*10:11:12.555   aaaa03           bbbbbbbbbb;+++++++++++++++++
            0004000*10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC;++++++++++
            0005000*10:11:12.555   aaaa07           bbbbbbbbbb;+++++++++++++++++
                                                                      
         ==>パディング文字を3桁指定すると(spl exp 60 ";-*")           
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6
            *******|********** TOP OF FILE *************************************
            0001000*time           event-type       action-before;-------------*
            0002000*10:11:12.555   aaaa01           bbbbbbbbbb;----------------*
            0003000*10:11:12.555   aaaa03           bbbbbbbbbb;----------------*
            0004000*10:11:12.555   aaaa05           CCCCCCCCCCCCCCCCC;---------*
            0005000*10:11:12.555   aaaa07           bbbbbbbbbb;----------------*
                                                                      
        (例-08). SPACE1の効果。                                       
                                                                      
            ===>spl space1                                            
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....
            *******|********** TOP OF FILE *************************************************************
            0001000| kay1=11111111;       key2===222222222 :        key3=:333333333 key4=;          key5
            0002000| key6;=cccccc        := key7 :   key8             
                                                                      
         ==>連続スペースを1スペースに縮める。                         
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6..
            *******|********** TOP OF FILE ***************************************
            0001000* kay1=11111111; key2===222222222 : key3=:333333333 key4=; key5
            0002000* key6;=cccccc := key7 : key8                      
                                                                      
        (例-09). "str" と関連オプションの意味。                       
                                                                      
            ===>spl "=;"                                              
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+
            *******|********** TOP OF FILE ******************************************
            0001000| kay1=11111111; key2===222222222 : key3=:333333333 key4=;   key5
            0002000| key6;=cccccc := key7 :   key8                    
                                                                      
         ==>全ての分離文字の直後で行を分割                            
                                                                      
            col    |....+....1....+....2....+                         
            *******|********** TOP OF FILE **                         
            0001000* kay1=                                            
            0001100*11111111;                                         
            0001200* key2=                                            
            0001300*=                                                 
            0001400*=                                                 
            0001500*222222222 : key3=                                 
            0001600*:333333333 key4=                                  
            0001700*;                                                 
            0001800*   key5                                           
            0002000* key6;                                            
            0003000*=                                                 
            0004000*cccccc :=                                         
            0005000* key7 :   key8                                    
                                                                      
         ==>幅を指定した場合は右境界の直前の分離文字で分離。          
                                                                      
            ===>spl "=;" 40                                           
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+
            *******|********** TOP OF FILE ******************************************
            0001000| kay1=11111111; key2===222222222 : key3=:333333333 key4=;   key5
            0002000| key6;=cccccc := key7 :   key8                    
                                                                      
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4          
            *******|********** TOP OF FILE *****************          
            0001000* kay1=11111111; key2===222222222 : key3=          
            0001100*:333333333 key4=;   key5 key6;=cccccc :=          
            0002000* key7 :   key8                                    
                                                                      
         ==>STRDELMの効果(spl "=;" strdelm)                           
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+..
            *******|********** TOP OF FILE **********************************
            0001000* kay1=11111111; key2===222222222 : key3=:333333333 key4=;
            0001100*   key5                                           
            0002000| key6;=cccccc := key7 :   key8                    
                                                                      
                                                                      
         ==>TOLの効果(spl "=;" strdelm tol)                           
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+
            *******|********** TOP OF FILE ********************************
            0001000* kay1=11111111; key2===222222222 : key3=:333333333 key4
            0001100*=;   key5                                         
            0002000| key6;=cccccc := key7 :   key8                    
                                                                      
         ==>STRSPACEの効果(spl strspace)                              
                                                                      
            ===>spl  all " "                                          
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....
            *******|********** TOP OF FILE *****************************************
            0001000| kay1=11111111; key2===222222222 : key3=:333333333 key4=;   key5
            0002000| key6;=cccccc := key7 :   key8                    
                                                                      
                                                                      
            ==>(全てのスペースで分離される)                           
                                                                      
            col    |....+....1....+..                                 
            *******|********** TOP OF                                 
            0001000*                                                  
            0001100*kay1=11111111;                                    
            0001200*key2===222222222                                  
            0001300*:                                                 
            0001400*key3=:333333333                                   
            0001500*key4=;                                            
            0001600*                                                  
            0001700*                                                  
            0001800*key5                                              
            0002000*                                                  
            0003000*key6;=cccccc                                      
            0004000*:=                                                
            0005000*key7                                              
            0006000*:                                                 
            0007000*                                                  
            0008000*                                                  
            0009000*key8                                              
                                                                      
                                                                      
            ===>spl  strspace                                         
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....
            *******|********** TOP OF FILE *****************************************
            0001000| kay1=11111111; key2===222222222 : key3=:333333333 key4=;   key5
            0002000| key6;=cccccc := key7 :   key8                    
                                                                      
            ==>(連続するスペースは全体で1回分離)                      
                                                                      
            col    |....+....1....+...                                
            *******|********** TOP OF                                 
            0001000*                                                  
            0001100*kay1=11111111;                                    
            0001200*key2===222222222                                  
            0001300*:                                                 
            0001400*key3=:333333333                                   
            0001500*key4=;                                            
            0001600*key5                                              
            0002000*                                                  
            0003000*key6;=cccccc                                      
            0004000*:=                                                
            0005000*key7                                              
            0006000*:                                                 
            0007000*key8                                              
                                                                      
   = ファイル外部実行

        SUBmit  [* | ** | ファイル名 [*] ] [ [**] パラメータ ,...]
                      [<入力リダイレクトファイル名] [>出力リダイレクトファイル名]

            -ファイル名は編集画面で編集中のファイルを実行する場合以外で
             指定します。
             PATH環境変数が設定されていない場合は経路も指定する必要がありますが
             その場合 *\ , ^*\ , :: などが使用できます。

            -第一パラメータの"*" は編集中のファイルを実行する場合でパラメータが必要な
             場合に使用します.
             パラメータが不要の場合は単に"SUB"でOKです。
             この場合開いているファイルがTSOファイルの場合はリモート(TSO側)で実行,||~v124R~
             それ以外の場合はローカルで実行します。
             "**"を指定するとは編集中のファイルの更新の如何にかかわらず元のファイルを実行します。
             例。 "SUB ** p1"。

            -第二パラメータの"*" は現在開いているファイルのファイル名で
             置換されます。引用符で囲めば置換されません。
             開いているファイルが編集で更新されている場合、一時ファイルに保存され
             その一時ファイル名が渡されます。
             本体は修正せず、部分的な修正でSUBを繰りす場合に便利です。
             例。 "SUB subtool *"。
             元のファイル名を渡したい時は"**"を指定してください。
             例。 "SUB subtool * **"。
             "*" も "**"も引用符で囲めばそのままパラメータとなります。
            -ファイルがメインフレームDataset(のメンバー)の場合パラメータは渡せません。||~v124R~
             ファイルを開いた画面で SUB とするか                      ||~v124R~
             任意の画面で SUB dest:'dsn(member)' 形式を取ります。     ||~v124R~
             編集中の画面で SUB とすると規定のDatasetに編集中の内容を転送して||~v124R~
             TSO SUBMIT を実行します。                                ||~v124R~
             規定のDataset は 'XE3270.TEMP.SUBMIT' (順次DS)です。     ||~v124R~
             TSO で Allocation してください。                         ||~v124R~
             変更は xe3270.cfg の SUBMITWORK= 文指定で、できます。    ||~v124R~

            -標準入力リダイレクト指定がない場合、入力待ちでHungするのを避けるため、
             省略値で "<NUL"(UNX では "</dev/null") を付与する場合があります。
             出力リダイレクト指定がある場合や=6画面でのSUBの場合などです。

   = 分割画面交換

        SWAp    (オペランドなし)

            -カーソルをもう一方の画面に移動させ,画面サイズを入れ替える
                                                                      ||~v124R~
#if defined(W32) || defind (LNX)                                      ||~v124R~
                                                                      ||~v124R~
   = シンタックスハイライト。                                         ||~v124R~
                                                                      ||~v124R~
       SYN [ ? | ALL | RESET | ENTER | ON [lang-type] | OFF]          ||~v124R~
            ?                 : ヘルプと現在の状況を若干表示。        ||~v124R~
            ALL               : 更新の有無にかかわらず再評価を実施    ||~v124R~
            RESET             : config ファイルの再読み込み。         ||~126DR~
            ENTER             : 現在開いているファイルに "ENTERキー入力時に再評価実施" を設定。||~v124R~
            ON [lang-type]    : 現在開いているファイルで前回から変更があればの再評価を実施||~v124R~
                                lang-type はファイルの言語タイプ(拡張子)||~v124R~
                                lang-type のリセットは "" を指定する。||~v124R~
            OFF               : 現在開いているファイルのSyntaxHighlight表示を停止。||~v124R~
                                                                      ||~v124R~
       オペランド無しは "SYN ON"で 省略値は Ctrl+s を割り当て。       ||~v124R~
                                                                      ||~v124R~
       シンタックスハイライトとはキーワード、コメントなどを色を変えて表示する機能です。||~v124R~
       全体的な説明は(0)はじめにの該当項を参照してください。          ||~v124R~
                                                                      ||~v124R~
#endif                                                                ||~v124R~
                                                                      ||~v124R~

   = タブ

        TAB { on [altch] | off | clear | =default | 桁数 [asdefault] }||~v121R~
            on      :タブ文字/全角スペースを表示
                     表示に使用する文字は.INI ファイルで変更できます
                     省略値は  タブ文字    :上矢印文字
                               タブスキップ:右矢印文字
                               全角スペース:2桁シャドー
            off     :タブ文字/全角スペースを非表示
                     表示不能な文字を表示する特殊文字の表示は
                     このコマンドにかかわらず表示されます.
            clear   :タブを取り除く
                     後はスペースに置き変わります
            =default:nn asdefault で設定した省略値に設定              ||~v124R~
                                                                      ||~v124R~
            桁数    :タブの桁位置の間隔を指定する，省略値は 4 です
                     asdefault を共に指定すると省略値を設定、         ||~v124R~
                     asdefault を指定しないと開いているファイルの設定となり||~v124R~
                     プロファイルに保存されます。                     ||~v124R~
                     省略値を0 と設定するとタブ入力は次の欄へのカーソル移動と||~v124R~
                     なります(タブ挿入は機能しません)
                     その場合個別に設定していないファイルのタブ表示は1桁になります。||~v124R~
                     最大値は12.
                     RECORD モードで開いたファイルの場合は 桁数は 1 とされます。||~v125R~
            altch   :TAB/DBCS空白 表示文字を変更                      ||~v128R~
                     Windows コマンドプロンプトは Property-->Font の設定によっては||~v128R~
                     TAB表示文字の字幅が異なり桁位置が不正になることがあります||~v121R~
                     表示文字に ASCII 文字を設定すれば桁ずれの問題はなくなりますが||~v121R~
                     適切なユニコードを使用したい場合に altch オプションを使用してください||~v121R~
                     wxe,gxe,Linux xe では桁ずれは起こらないと思います||~v121R~
                     省略値は U-21be(TAB:0x09 の表示用), U-21c0(TABで飛んだ空きスペース表示用),||~v128R~
                     U-2591(DBCS空白 表示用) です                     ||~v128R~
                     INI file の下記の指定を上書きします              ||~v121R~
                       (J)Tab_disp_char  =FFFF #(FFFF)# Tab display char for Japanese mode. (FFFF means U-21be & U-21c0)||~v128R~
                       (E)Tab_disp_char  =FFFF #(FFFF)# Tab display char for English  mode. (FFFF means U-21be & U-21c0)||~v128R~
                       DBCSspace_dispchar=FF #(FF)# DBCS space display char. (FF means U-2591)||~v128R~
                     "tab on 000" で省略値あるいは INI 設定に戻ります ||~v128R~
                     例)  tab on "^-" ,   tab on u25b8-25b9 ,  tab on "^-!" ,  tab on u25b8-25b9-21be.||~v128R~
                     altch に ASCII でない文字を指定したとき "xpr -tabon" コマンドの TAB 印刷文字は||~v121I~
                     CPU8 ファイルではその altch が使用されますが、そうでない場合は 0x18 と 0x1a が||~v121I~
                     使用されます                                     ||~v121I~

   = 簡易表計算

         TC 式 [オプション] [NX] [Zero] [行ラベル1 行ラベル2]
                                   [行ラベル3 行ラベル4]

         (DOS版ではサポートされません)

            式        :[[opd3=]opd1]opc[opd2][{/key[/grade]|//count}]

              .5 種類の形式があります。
                 -1項計算(合算以外)
                    TC [opd1]{++|--|=|/conv-type}
                 -1項計算(合算)
                    TC [opd1]+[{/breakkey[/grade]|//count}] [option]
                      行数をカウントするだけの場合特別にopd1に"1"を
                      指定できます。例）tc 1+/10-16!
                 -2項計算
                    TC [opd1]{+= | -= | *= | /= | %= | == | ~= | =}[opd2]
                 -3項計算
                    TC opd3=opd1{+ | - | * | / | % | ~ | ==}opd2
                 -表の列の桁整列
                    TC FMT [[fieldno[-fieldno]]{R|L|P}[F][C][N][O] ...]
                            [D[delimiter]] [C][N][O] [S[R]outdelm] [H] [Q[d][s]]

              opd1/2/3:[type]{column1-column2|定数}または [type]:fieldno
                  type:データタイプ。
                        d(10進数),x(16進数),o(8進数),t(時間),
                        z(コンマ区切りの10進数)
                        時間は hhmmss,hh:mm:ss,hh.mm.ssの形式
                        指定のないときはhh:mm:ssまたはhh.mm.ss形式の
                        ときは 時間、それ以外は10進数とみなします。
                  column1/2:オペランドとなるファイル上の表データの
                            カラム位置を指定します。
                            データタイプ d/tでは小数点もOK。
                        定数はオペランド２でのみ指定できます。
                        タイムスタンプ定数は hh:mm:ss.xxx の形式です。
                        代入(=),比較(==)で使用する文字列定数は
                        二重引用符で囲みます。
                        例）tc 1-10*=60 tc 1-10+=01:10:29  tc 1-2=10-14=="abcde"
                  fieldno  :1桁でフィールド番号を指定する
                            10以上は a から ｚ を使用。
                            事前に "TC FMT H" コマンドでフィールド番号
                            ガイドラインを挿入すること。
                opc   :四則演算子
                       + :合計の計算。オプションで平均、最大最小も表示。
                          小計行を明示指定する(項が'='で始まる行を置く)
                          か或いは、breakkey,count指定により小計も出力。
                          小計の出力位置はオプションで指定します。
                       = :-オペランド３の指定がないとき。
                            表位置をカット&ペーストで指定したあと、
                            これを第1オペランドとする時に使用します。
                            例。 TC =
                          -オペランド３の指定があるとき。
                            =の左のオペランドが第3オペランド(結果の
                            設定先)であることの指定になります。
                            例。 TC t10-19=t30-39+50-55
                            =の右に指定がない時は第一オペランドの指定になります。||~v124I~
                            例。 TC 10-20=                            ||~v124I~
                          -複写操作でも使用します。
                            opd3=opd2 [INS] [RJust]
                            データタイプを指定しない場合はopd2を
                            スペーストリムして文字列複写。
                            データタイプを指定すれば変換操作が可能。
                            opd2を文字列定数とするときは opd2は "xyz"
                            のように指定する。
                            例  tc 1-8="total=" ins;  tc 20-30="";
                                tc z1-8=x10-18;
                       ++:その行までの合算で項目を置換します。
                          例。 TC x10-19++
                       --:前の行との差分で 項目を置換します。
                          例。 TC o10-19--
                       +=,-=,*=,/=,%=,~=
                         :各行オペランド1とオペランド2の演算結果を
                          オペランド1にセットします。
                          例。 TC 10-19*=20-21
                       ~ :"並存数"をカウントします。                  ||~v125R~
                          例えば、オペランド1,2がそれぞれ開始時刻/終了時刻
                          のとき開始時刻に何件のレコードが並存している
                          (終了時刻に達してない)かをカウントする。
                          開始時刻＝終了時刻のレコードを開始時刻のレコード
                          としてカウントする場合はcountEQを指定する。
                          opd1にデータタイプT(時刻)を指定すればopd2は
                          秒数指定(間隔)でもよい。そうでない場合は
                          比較はすべて文字列比較となる。
                          例。 TC 10-13=30-41~50-51                   ||~v125R~
                       ==:比較。データタイプを指定しない場合は各行
                          オペランド1とオペランド2の大文字小文字区別有比較
                          opd1==opd2 形式の場合
                            不一致行の行番号欄との区切り位置に印をつける。
                            この行は *L 指定でFindできる。
                          opd3=opd1==opd2 形式の場合
                            比較結果(-1,0,1)をopd3に設定。
                            結果を1/0、0/1で設定するときはそれぞれ
                            TF、FT オプションを指定する。
                      /conv-type:データの型変換をする。
                          conv-type：O:8進,X:16進,T:時刻,D:10進,
                                     Z:FMT(コンマ分離)10進,
                                     U:符号無10進,UZ:符号無FMT10進,
                                     L:TimeStamp-->時刻
                      FMT:表の列をスペースを列の区切り文字として桁整列。
                          R :右詰め。フィールド番号のみのときの省略値。
                          L :左詰め。
                          P :小数点をあわせて右詰め。
                          フィールド番号を付けないと"O"の指定があるまで
                          以降の省略値となる。
                          R/L/Pの指定なしとみなしたフィールドは
                          フィールド間隔が保持される。
                          5フィールドある場合の例では次の様になる。
                               tc fmt                ==> r r r r r
                               tc fmt  r l r o       ==> r l r - -
                               tc fmt  r 3l          ==> r r l r r
                               tc fmt  r 3l l        ==> r r l l l
                               tc fmt  3r            ==> - - r - -
                          N :数値フィールドとそれまでの全フィールドは
                             １つのフィールドとみなし数値フィールドの
                             ところで整列する。
                          A :"N"指定をリセットする
                          C :以降のフィールドすべてその間のスペースを
                             １スペースに圧縮して結合する。
                             ただし、NC指定のときは数値フィールドまで結合する。
                          O :以降のフィールドは整列しない。
                          H :フィールド番号ガイドラインの挿入。
                          D[delimiter]:フィールド分離文字
                                       省略値はD" ",DのみはD","の意味。
                                       複数指定可能。例えば D" ,"     ||~v129R~
                                       エスケープ文字指定もOK         ||~v129R~
                                       例えば D"\t\xa0\xff" は        ||~v129R~
                                       0x09,0xa0,0xff のすべてが分離文字||~v129R~
                                       unicodeは 例えば D\u00c1 のように措定する||~v129I~
                          S[R][outdelm]:出力用フィールド間分離文字。
                                        R      :入力の分離文字は削除する。
                                        outdelm:フィールド間に挿入する分離文字
                                                省略値は" "
                                                エスケープ文字は\t=0x09いがいはOK||~v129R~
                                                複数文字指定はその文字列を出力,DBCSもOK||~v129R~
                                                unicodeは 例えば D\u00c1 のように措定する||~v129I~
                            例。 TC fmt 1-3f 2r
                breakkey :[type]column1-column2[>|!|<]
                          opcode=+(合計の計算)のときに小計を表示する。
                          区切りを指定します。
                          >(昇順、省略値)、<(降順)のとき表はソートされて
                          いる必要があります。! キーは不一致で小計をとる。
                          type,columnはキー項目のタイプ,桁位置を指定する。
                          gradeの指定がなければこの桁位置の値が変わる毎に
                          小計が表示されます。
                      例。 TC 10-19+/1-4      TC10-19/1-4!            ||~v125R~
                grade    :breakkey(この場合数値でなければなりません)の値が
                          gradeの値の整数倍になる毎に小計を表示する。
                      例。 TC 10-19+/1-4/1000     :Col.1-4 が　<=1000, <=2000,  ...になる毎に小計を取る||~v125R~
                                                                      ||~v125R~
                count    :count指定の行数毎に小計を表示する。
                      例。 TC 10-19+//100         :100 行毎に小計を取る。||~v125R~

                filedno  :右詰め(R)、左詰め(L) をフィールド番号で指定
                          省略値は右詰め、フィールド番号(1開始)を省略
                          すると以降のフィールド全てに有効となります。
                      例。 TC FMT 3L ; TC FMT R L;  TC FMT 1-4L 5-6L;

            オプション:スペースを置いて複数指定できます。
                ign :既存の小計行(項の先頭に "="がある行)を無視する。
                aft|bef|top|end|las：小計、合計行の挿入位置。それぞれ表の
                                     前後、ファイルの最初最後の指定。
                                     省略値はキーブレークの位置       ||~v127R~
                -Ofilename          :小計、合計行の別ファイル出力指定。
                                     ワイルドカードを使用して現ファイル名
                                     からの改名形式で打鍵の簡略化も可能。
                ave|minmax|maxmin|amm:小計、合計行の追加オプション。
                                      平均、最大最小、両方の追加指定。
                NX    :非表示行を対象外とする指定。
                Zero  :桁幅まで前に"0"をパディングする。
                V[n]R :出力の小数点以下桁数を指定する。R:四捨五入。
                INS   :結果をopd3の位置に挿入する。
                       opd3は挿入位置と挿入桁数を表す。
                RJ    :文字列複写でopd3とopd2の幅が異なるとき右づめ:
                       RightJustifyする。
                       (省略値は左詰め:LeftJustify)。
                countEQ:"~"(並存数カウント)操作で開始＝終了時刻のレコード
                        をカウントUp対象(ACTIVE)とする。
                        指定がないと開始=終了のレコードはカウント対象外。
                Q[d][s]:FMTで引用符を考慮する(引用符内は１フィールド)。
                        d:二重引用符(")、s:一重引用符(')。
                        dもsも指定しない場合２重/１重引用符両方考慮。

                TF     :==(比較演算)の結果をopd3に1(一致)/0(不一致)でセット。
                FT     :==(比較演算)の結果をopd3に0(一致)/1(不一致)でセット。
            行ラベル  :表の開始、終了行行ラベルで指定します。
                       ２対の時はそれぞれopd1,opd2用。1対のときは
                       opd1/2両方の行範囲指定になります。
                       ラベルが数字の場合は行番号指定とみなします。
                      例。 TC 10-19+ .a .b ; TC 10-19+ .100 .200

            -opcodeが "+"(合計の計算)のときの小計行の扱い。
             ブレーク指定(breakkey,count)がある時。
               既存の小計行は ign 指定がなければ削除され、ign指定が
               あれば無視されます。そしてブレーク指定に従った新たな小計行
               が挿入されます。挿入位置はオプション指定(aft,bef,top,end,
               las)がなければブレークの位置です。
             ブレーク指定がない時。
               オペランド１の先頭に"="をおくとそこで小計が取られます。
               挿入位置オプションは合計行に対して効果を持ちます。
            -カット＆ペーストを使用した表指定。
             第1オペランド,第2オペランドが異なるファイルの時は、
             カット＆ペーストでブロック指定します。
             Alt+F7でブロックを指定した直後に続いてもう一度Alt+F7を
             おすことで第1オペランドが決定されます。
             或いはブロック指定の後の"TC ＝"コマンドでも第1オペランドの
             決定になります。
             この後のカット＆ペーストでのブロック指定が第2オペランドの
             指定を意味します。第2オペランドを指定したら、桁位置指定の
             無いTCコマンドを入力します。例えば"TC +="、"TC 1-9=+。
             (異なるファイルの場合コマンドは第2オペランド側で入力する)
             桁位置以外のオプションは同様に指定できます。
             例えば "TC t+=t/4-5"。
             複写には使用できません。                                 ||~v124I~

   = パラグラフ整形(Text Flow)                                        
                                                                      
          {TFL | TF} [width] [SBCS] [TOL] [STRDELM] [SPACE1]          
                     [In] [ALL|EACH] [Pn|NOP] [BASE1] [AWORD|SWORD]   
                     ['delm-chars'} [.lab1 .lab2]                     ||~v126R~
                                                                      
            width   :整列後の右境界位置のカラムを指定。               
            SBCS    :整列前の左右のBNDS境界を跨るDBCSはSBCS指定がなければ||~v125R~
                     2桁スペースに置換するが,SBCS指定があれば         
                     2バイトデータとして1バイトづつに分離する         
                     UTF8ファイルでは使用できません。                 ||~v125R~
            STRDELM :'delm-chars' パラメータを一連の文字列とみて行分割。
            SPACE1  :連続するスペースは1桁スペースに縮める。          
            In      :書き出し行のIndentation(行頭空きスペース桁数)    
            ALL     :Pnの指定がなければファイルの最終行まで           
                     全パラグラフを処理する。                         
                     widthを指定して左寄せすると行数が増えることがあるが
                     溢れは次のパラグラフを上書きする。               
            EACH    :Pnの指定がなければファイルの最終行まで           
                     全パラグラフを処理する。                         
                     溢れはパラグラフの間に行挿入する。               
            Pn      :処理するパラグラフ数。n=0は全て(ALL指定に同じ)。 
            NOP     :パラグラフを無視する。(全行1パラグラプとする)    
                     全ての行をIn指定の位置、In指定がなければ１行目の 
                     Indentation位置に整列する。                      
            BASE1   :1行目のIndentationをパラグラフのIndentationとし、
                     後続の行は同じIndentationの行を同一パラグラフとする。
                     BASE1の指定のない場合は、１行目と2行目のIndentationは
                     違ってもよく2行目のIndentationがパラグラフの     
                     Indentationとなり,3行目以降で２行目と同じIndentationの
                     行が同一パラグラプ内となる。                     
            AWORD   :width指定があるときで、その幅内にスペースがない時、
                     直後のスペース位置で行分割。                     
            SWORD   :width指定があるときで、その幅内にスペースがない時、
                     widthの位置で行分割する。                        
                     (AWORD/SWORDの指定がないと長い語句の行分割はしない)
            'delm-chars':指定するとその分離文字の位置で行分割。       
                         width 指定のあるSPLitコマンドでは width の直前の
                         分離文字でのみ一回行分割するが、             
                         TFLowコマンドでは全ての分離文字の位置で行分割する。
                         \x0d のようにHex指定も出来ます。             ||~v126R~
                         \x8140 のように複数文字指定できますがDBCSとは解釈しません||~v126R~
                         この場合SBCS 2文字指定とみなされます         ||~v126R~
            .lab1/.lab2 :対象行範囲指定.                              
                         指定しないと開始行はカーソルのある行(カラムは問いません)、
                         カーソルがコマンド行にある時はファイルの先頭行。
                                                                      
        (例-01). カーソル位置が意味を持つ場合は行番号欄の'_'がそれを示します(以下同様)。
                 Boundsは設定されていませんが1行目のCID設定行のoption=f80が
                 右境界=Col.80を設定してます。                        
                 (CID設定行を設定しない場合はEditコマンドのFオプションで
                  同じことになります。"e file-name f80")              
                                                                      
            ===>tf                                                    
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....
            *******|********** TOP OF FILE *************************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            _002000|        added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
            0008000|     *                 --------  aaaaaa     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114

         ==>1つのパラグラフを処理。                                   
            Indentationの違いで 行-0005000 は次のパラグラフとなります。
                                                                      
            3 line(s) processed,0 err line,delm="".1:17) ------------------------------------------------
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....
            *******|********** TOP OF FILE ***********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*        added this part to test the behavior of the bnds cmommand for xe. i use
            0003000*        bnds to format paragraphs                 
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114||
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114||
            0008000|     *                 --------  aaaaaa     weekly.                    *   CL114||
            0009000|     *=================================================================*   CL114||
                                                                      
        (例-02). 行番号付ファイルの場合、BoundsはCol.1-72になります。 
                 1行目のCID設定行のoption=(m72,n)が右マージン=72,行番号付ファイルを示します。
                 CID設定行を設定しない場合は en コマンドで同じことになります。("en file-name").
                                                                      
            ===>tf                                                    
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(m72,n,p0) update#=   11;                   00010001
            _002000| ws-ini-key                  w  64  a                                   00020002
            0003000|    ws-ini-key-tag  ws-ini-key       4 a value 'key:'                   00030002
            0003010|    ws-ini-key-data ws-ini-key  .4  60 a                                00031002
            0003020|       field-name      w 60  a                                          00032002
            0003030|       field1-value    w 60  a                                          00033002
                                                                      
         ==>行番号欄は整形対象外。                                    
            行-0003000は2行目なのでそのIndentationがパラグラフのIndentationとなり、
            これと同じIndentationの行-0003010は整形対象で行-0003020は次のパラグラフで対象外です。
                                                                      
            3 line(s) processed,0 err line,delm="".9:26) -----------------------------------------------
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....
            *******|********** TOP OF FILE *************************************************************
            0001000|//*CID://+NONER~:    option=(m72,n,p0) update#=   11;                   00010001
            0002000* ws-ini-key                  w  64  a ws-ini-key-tag  ws-ini-key        00020002
            0003000*    4 a value 'key:' ws-ini-key-data ws-ini-key  .4  60 a               00030002
            0003020|       field-name      w 60  a                                          00032002
            0003030|       field1-value    w 60  a                                          00033002
            *******|********** END OF FILE *************************************************************
                                                                      
        (例-03). BNDS設定がある場合。                                 
                 このDocではわかりませんが、左右の境界は色の違いで示されます。
                 この例のBNDコマンドはBoundaryを設定したことを示すためで、毎度入力する必要はありません。
                                                                      
            ===>bnds;bnds 9 70;tf                                     
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8...
            *******|********** TOP OF FILE ************************************************************
            _002000*        added this part to test the behavior of the bnds              aaaaaaaaaa
            0003000*        command for                                                   aaaaaaaaaa
            0004000*        xe. i use bnds to format paragraphs                           aaaaaaaaaa
            0005000*          so the breakes are nice.                                    aaaaaaaaaa
            0006000|      *                                                                *   CL114
            0007000|      *  JOB stream:  job name  proc name  program run frequency       *   CL114
            0008000|      *               --------  ---------  --------------------------- *   CL114
                                                                      
         ==>右境界には少なくとも１スペース入るように整列します。      
                                                                      
            3 line(s) processed,0 err line,delm="".1:19) --------------------------------------------------
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8...
            *******|********** TOP OF FILE ************************************************************
            0002000*        added this part to test the behavior of the bnds command for   aaaaaaaaa
            0003000*        xe. i use bnds to format paragraphs                            aaaaaaaaa
            0004000*                                                                       aaaaaaaaa
            0005000*          so the breakes are nice.                                     aaaaaaaaa
            0006000|      *                                                                *   CL114
            0007000|      *  JOB stream:  job name  proc name  program run frequency       *   CL114
            0008000|      *               --------  ---------  --------------------------- *   CL114
                                                                      
        (例-04). width 指定がある場合。                               
                                                                      
            ===>bnd ;bnd 1 28;tf 24 all                               
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8..
            *******|********** TOP OF FILE ***********************************************************
            0002000|file rep2 fb(80 27920)printer                     
            0003000|file rep3 fb(80 27920)printer                     
            0004000|file rep4 fb(80 27920)printer                     
            0005000|file rep5 fb(80 27920)printer                     
            0006000|file rep6 fb(80 27920)printer                     
            0007000|file rep7 fb(80 27920)printer                     
            0008000|file rep8 fb(80 27920)printer                     
            0009000|file rep9 printer                                 
            0010000|file repa printer                                 
            0011000|job input ini finish print-tot                    
            0012000|    ws-ini-key-data = ini-key                     
            0013000|    ws-ini-key-field-name = ini-field-name        
            0014000*  aaaaaaaaaaa bbbbbbbbbbbbbbCCCCCCCCCCCCCCCCCCC   
                                                                      
         ==>ALL指定より全ての行が処理されます。                       
                                                                      
            18 line(s) processed,1 err line,delm="".:36) -----------------------------------------------
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8....
            *******|********** TOP OF FILE *************************************************************
            0002000*file rep2 fb(80             r                     
            0003000*27920)printe file rep3      r                     
            0004000*fb(80 27920)printe file     r                     
            0005000*rep4 fb(80 27920)printe     r                     
            0006000*file rep5 fb(80             r                     
            0007000*27920)printe file rep6      r                     
            0008000*fb(80 27920)printe file     r                     
            0009000*rep7 fb(80 27920)printe                           
            0010000*file rep8 fb(80                                   
            0011000*27920)printe file rep9      ot                    
            0012000*printer file repa           y                     
            0013000*printer job input ini       ini-field-name        
            0014000*finish print-t              CCCCCCCCCCCCCCCCCCC   
            0015000*    ws-ini-key-data =                             
            0016000*    ini-ke                                        
            0017000*    ws-ini-key-field-name =                       
            0018000*  aaaaaaaaaaa                                     
            0019000*  bbbbbbbbbbbbbb                                  
            *******|********** END OF FILE *************************************************************
                                                                      
        (例-05). EACH 指定の効果。                                    
                                                                      
            ===>bnd 1 28;tf 24 p3 each                                
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|file rep2 fb(80 27920)printer                     
            0002000|file rep3 fb(80 27920)printer                     
            0003000|file rep4 fb(80 27920)printer                     
            0004000|file rep5 fb(80 27920)printer                     
            0005000|file rep6 fb(80 27920)printer                     
            0006000|file rep7 fb(80 27920)printer                     
            0007000|file rep8 fb(80 27920)printer                     
            0008000|file rep9 printer                                 
            0009000|file repa printer                                 
            0010000|job input ini finish print-tot                    
            0011000|    ws-ini-key-data = ini-key                     
            0012000|    ws-ini-key-field-name = ini-field-name        
            0013000|  aaaaaaaaaaa bbbbbbbbbbbbbbCCCCCCCCCCCCCCCCCCC   
            0014000|DDD                                               
            0015000| EEE                                              
            *******|********** END OF FILE *********************************************************
                                                                      
         ==>ALL指定と異なりEACH指定ではパラグラフからの溢れ行はそのパラグラフの直後に挿入されます。
            (行-0011000でマージン外のデータ"y"とマージン内のデータ"ws-ini-key-data =" が同じ行にとどまっています)
            またP3の指定により行-0015000は対象外です。                
            (p1:00010000-0010000,p2:0011000-0012000,p3:0013000-0014000)
                                                                      
            14 line(s) processed,1 err line,delm="".:43) -------------------------------------------
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000*file rep2 fb(80             r                     
            0002000*27920)printe file rep3      r                     
            0003000*fb(80 27920)printe file     r                     
            0004000*rep4 fb(80 27920)printe     r                     
            0005000*file rep5 fb(80             r                     
            0006000*27920)printe file rep6      r                     
            0007000*fb(80 27920)printe file     r                     
            0008000*rep7 fb(80 27920)printe                           
            0009000*file rep8 fb(80                                   
            0010000*27920)printe file rep9      ot                    
            0010100*printer file repa                                 
            0010200*printer job input ini                             
            0010300*finish print-t                                    
            0011000*    ws-ini-key-data =       y                     
            0012000*    ini-ke                  ini-field-name        
            0012100*    ws-ini-key-field-name =                       
            0013000*  aaaaaaaaaaa               CCCCCCCCCCCCCCCCCCC   
            0014000*  bbbbbbbbbbbbbb DDD                              
            0015000| EEE                                              
            *******|********** END OF FILE *********************************************************
                                                                      
        (例-06). NOP 指定の効果。                                     
                                                                      
            ===>bnds;bnds 1 40;tf p3 i4 nop                           
            col    |....+....1....+....2....+....3....+....4.         
            *******|********** TOP OF FILE ******************         
            0001000* p1       a                             A         
            0002000*  p1       b                            A         
            0003000*   p2        c                          A         
            0004000*    p2        d                         A         
            0005000*     p3         e                       A         
            0006000*      p3         f                      A         
            0007000*       p4                               A         
            0008000*        p4                              A         
            *******|********** END OF FILE ******************         
                                                                      
         ==>処理範囲はp3でパラグラフ3個に限定されるが、               
            処理範囲内はパラグラフ境界はないものとみなす              
            結果のIndentationは"In"パラメータでも指定できる。         
                                                                      
            6 line(s) processed,0 err line,delm="".4:55) ----         
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4.         
            *******|********** TOP OF FILE ******************         
            0001000*    p1       a p1       b p2        c   A         
            0002000*    p2        d p3         e p3         A         
            0003000*    f                                   A         
            0004000*                                        A         
            0005000*                                        A         
            0006000*                                        A         
            0007000*       p4                               A         
            0008000*        p4                              A         
            *******|********** END OF FILE ******************
                                                                      
            NOP指定無しの場合は次の結果になる。                       
                                                                      
            ===>bnds;bnds 1 40;tf p3 i4                               
            col    |....+....1....+....2....+....3....+....4.         
            *******|********** TOP OF FILE ******************         
            0001000* p1       a                             A         
            0002000*  p1       b                            A         
            0003000*   p2        c                          A         
            0004000*    p2        d                         A         
            0005000*     p3         e                       A         
            0006000*      p3         f                      A         
            0007000*       p4                               A         
            0008000*        p4                              A         
            *******|********** END OF FILE ******************         
                                                                      
         ==>                                                          
                                                                      
            6 line(s) processed,0 err line,delm="".4:55) ----         
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4.         
            *******|********** TOP OF FILE ******************         
            0001000*    p1       a p1       b               A         
            0002000*    p2        c p2        d             A         
            0003000*    p3         e p3         f           A         
            0004000*                                        A         
            0005000*                                        A         
            0006000*                                        A         
            0007000*       p4                               A         
            0008000*        p4                              A         
            *******|********** END OF FILE ******************         
                                                                      
        (例-07). BASE1 指定の効果。                                   
                                                                      
            ===>bnds 1 40;tf p3 base1                                 
            *******|********** TOP OF FILE ******************         
            0001000|   p0-----aa                            A         
            0002000|   p0-----bb                            A         
            0003000| p1       a                             A         
            0004000|  p1       b                            A         
            0005000|   p2        c                          A         
            0006000|    p2        d                         A         
            0007000|     p3         e                       A         
            0008000|      p3         f                      A         
            0009000|       p4                               A         
            0010000|        p4                              A         
            *******|********** END OF FILE ******************         
                                                                      
         ==>"BASE1"により行-002000と行003000は別のパラグラフとされる。
                                                                      
            4 line(s) processed,0 err line,delm="".5:21) ----         
            ===>                                                      
            *******|********** TOP OF FILE ******************         
            0001000*   p0-----aa p0-----bb                  A         
            0002000* p1       a                             A         
            0003000*  p1       b                            A         
            0004000*                                        A         
            0005000|   p2        c                          A         
            0006000|    p2        d                         A         
            0007000|     p3         e                       A         
            0008000|      p3         f                      A         
            0009000|       p4                               A         
            0010000|        p4                              A         
            *******|********** END OF FILE ******************         
                                                                      
        (例-08). AWORD/SWORD 指定の効果。                             
                                                                      
            ===>tf 20                                                 
            col    |....+....1....+....2....+....3....+....4.         
            *******|********** TOP OF FILE ******************         
            0001000* aaaaaaaaaaaaaaaaaa AAAAAAAAAAAAAAAAAAAAA         
            0002000| bbbbbbbbbbbbbbbbbbb BBBBBBBBBBBBBBBBBBBA         
            0003000| cccccccccccccccccccc CCCCCCCCCCCCCCCCCCA         
            0004000| dddddddddddddddddddddDDDDDDDDDDDDDDDDDDA         
            0005000| eeeeeeeeeeeeeeeeeeeeee EEEEEEEEEEEEEEEEA         
            0006000*    FF                                            
            *******|********** END OF FILE ******************
                                                                      
         ==>AWORD/BWORD指定のない場合,指定幅内にスペースがない行は分割されない
                                                                      
            5 line(s) processed,5 err line,delm="".5:33) ----         
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4.         
            *******|********** TOP OF FILE ******************         
            0001000* aaaaaaaaaaaaaaaaaa                               
            0001100* AAAAAAAAAAAAAAAAAAAAA                            
            0002000* bbbbbbbbbbbbbbbbbbb BBBBBBBBBBBBBBBBBBBA         
            0003000* cccccccccccccccccccc CCCCCCCCCCCCCCCCCCA         
            0004000* dddddddddddddddddddddDDDDDDDDDDDDDDDDDDA         
            0005000* eeeeeeeeeeeeeeeeeeeeee EEEEEEEEEEEEEEEEA         
            0006000*    FF                                            
            *******|********** END OF FILE ******************         
                                                                      
         ==>AWORD指定の場合("tf 20 aword") 次のにスペース位置で分割される
                                                                      
            5 line(s) processed,4 err line,delm="".5:33) ----         
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4.         
            *******|********** TOP OF FILE ******************         
            0001000* aaaaaaaaaaaaaaaaaa                               
            0001100* AAAAAAAAAAAAAAAAAAAAA                            
            0002000* bbbbbbbbbbbbbbbbbbb                              
            0002100* BBBBBBBBBBBBBBBBBBBA                             
            0003000* cccccccccccccccccccc                             
            0003100* CCCCCCCCCCCCCCCCCCA                              
            0004000* dddddddddddddddddddddDDDDDDDDDDDDDDDDDDA         
            0005000* eeeeeeeeeeeeeeeeeeeeee                           
            0005100* EEEEEEEEEEEEEEEEA                                
            0006000*    FF                                            
            *******|********** END OF FILE ******************         
                                                                      
         ==>SWORD指定の場合("tf 20 sword") 指定の位置で分割される     
                                                                      
            ===>                                                      
            col    |....+....1....+....2....+....3....+....4.         
            *******|********** TOP OF FILE ******************         
            0001000* aaaaaaaaaaaaaaaaaa                               
            0001100* AAAAAAAAAAAAAAAAAAA                              
            0001200* AA                                               
            0002000* bbbbbbbbbbbbbbbbbbb                              
            0002100* BBBBBBBBBBBBBBBBBBB                              
            0002200* A                                                
            0003000* ccccccccccccccccccc                              
            0003100* c                                                
            0003200* CCCCCCCCCCCCCCCCCCA                              
            0004000* ddddddddddddddddddd                              
            0004100* ddDDDDDDDDDDDDDDDDD                              
            0004200* DA                                               
            0005000* eeeeeeeeeeeeeeeeeee                              
            0005100* eee                                              
            0005200* EEEEEEEEEEEEEEEEA                                
            0006000|    FF                                            
            *******|********** END OF FILE ******************         
                                                                      
        (例-09). "delm-char" と関連オプションの意味。                 
            ===>bnds 1 40                                             
            *******|********** TOP OF FILE ******************         
            0001000| aaaaaaaa=aaaaaaaaa AAAAAAAA===AAAAAAAAA|         
            0002000* bbbbbbbb=: bbbbbbbb BBBBB :   BBBBBBBB |         
            0003000* cccccccc:=cccccc := CCCCC :   CCCCCCCCC|         
            0004000|    FF                                  |         
            *******|********** END OF FILE ******************         
                                                                      
         ==>tf ":="。                                                 
              全ての ":" と "=" の直後で行を分割。                    
                                                                      
            *******|********** TOP OF FILE ******************         
            0001000* aaaaaaaa=                              |         
            0002000* aaaaaaaaa AAAAAAAA=                    |         
            0003000* =                                      |         
            0003100* =                                                
            0003200* AAAAAAAAA bbbbbbbb=                              
            0003300* :                                                
            0003400* bbbbbbbb BBBBB :                                 
            0003500* BBBBBBBB cccccccc:                               
            0003600* =                                                
            0003700* cccccc :                                         
            0003800* =                                                
            0003900* CCCCC :                                          
            0003910* CCCCCCCCC                                        
            0004000|    FF                                  |         
            *******|********** END OF FILE ******************         
                                                                      
         ==>tf ":=" tol。                                             
              分離文字の直前で分割。                                  
                                                                      
            *******|********** TOP OF FILE ******************         
            0001000* aaaaaaaa                               |         
            0002000* =aaaaaaaaa AAAAAAAA                    |         
            0003000* =                                      |         
            0003100* =                                                
            0003200* =AAAAAAAAA bbbbbbbb                              
            0003300* =                                                
            0003400* : bbbbbbbb BBBBB                                 
            0003500* :   BBBBBBBB cccccccc                            
            0003600* :                                                
            0003700* =cccccc                                          
            0003800* :                                                
            0003900* = CCCCC                                          
            0003910* :   CCCCCCCCC                                    
            0004000|    FF                                  |         
            *******|********** END OF FILE ******************         
                                                                      
         ==>tf ":=" strdelm。                                         
              分離文字は全体で1つの分離文字列とする。                 
                                                                      
            *******|********** TOP OF FILE ******************         
            0001000* aaaaaaaa=aaaaaaaaa                     |         
            0002000* AAAAAAAA===AAAAAAAAA bbbbbbbb=:        |         
            0003000* bbbbbbbb BBBBB :   BBBBBBBB cccccccc:= |         
            0003100* cccccc :=                                        
            0003200* CCCCC :   CCCCCCCCC                              
            0004000|    FF                                  |         
                                                                      
        (例-10). SPACE1 指定の効果。                                  
                                                                      
            ===>tf space1 all                                         
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(m72,n,p0) update#=   11;                   00010001
            0002000| ws-ini-key                  w  64  a                                   00020002
            0003000|    ws-ini-key-tag  ws-ini-key       4 a value 'key:'                   00030002
            0003010|    ws-ini-key-data ws-ini-key  .4  60 a                                00031002
            0003020|       field-name      w 60  a                                          00032002
            0003030|       field1-value    w 60  a                                          00033002
            *******|********** END OF FILE *********************************************************
                                                                      
         ==>語間の連続スペースを縮める。                              
                                                                      
            6 line(s) processed,0 err line,delm="".9:26) -------------------------------------------
            ===>                                                      
            *******|********** TOP OF FILE *********************************************************
            0001000*//*CID://+NONER~: option=(m72,n,p0) update#= 11; ws-ini-key w 64 a      00010001
            0002000*    ws-ini-key-tag ws-ini-key 4 a value 'key:' ws-ini-key-data          00020002
            0003000*    ws-ini-key .4 60 a                                                  00030002
            0003010*       field-name w 60 a field1-value w 60 a                            00031002
            *******|********** END OF FILE *********************************************************
                                                                      
   = ファイル先頭行/ファイル終端行

        {TOP | BOTtom}  (オペランドなし)

   = 修正戻し

        UNDo    [free]

          free:大きなファイルでメモリー不足になったときのに、
               "UND free"で保存域を開放。
          (注)機能キー入力の場合戻される行のトップにカーソルを移動し
              確認応答を要求します.コマンド入力の場合は直ぐに
              UNDoされます.
              戻れるのはDOS版では20レベル前まで,その他の版では
              32768レベル前までです

   = ページ スクロール

        {UP | DOWn | LEFt |RIGht} [p | page | h | half | c | csr
                                  | m | max | 数字]}                  
            p/page  :上下/左右の画面サイズ分スクロール
            h/half  :上下/左右の画面サイズの半分スクロール
            c/csr   :現在のカーソル位置が端に来るようにスクロールする
            m/max   :ファイルの先頭/終端/左端/表示行の右端を表示する
            数字    :スクロールする 行/桁 数を指定する

            -スクロール量オペランド値のみをコマンド行に入力しそれぞれの
             機能キー を押してもよいが,コマンド入力行右端のスクロール量
             フィ−ルド(===>HALF )をスクロール量オペランド値と同じもので
             上書き入力すればスクロール量は固定されます

#ifdef UTF8SUPP                                                       ||~v125R~
                                                                      ||~v124R~
   = UTF8関連設定。                                                   ||~v125R~
                                                                      ||~v124R~
                                                                      ||~v125R~
        UTF { {ALTCPLC | NOALTCPLC } | SWKBD | FILE | FN } [ CPU8 | CPLC | CPAS ]||~v125I~
                                                                      ||~v125I~
              ALTCPLC / NOALOTCPLC : プロファイルの記録も含めてCPU8指定のない場合||~v125I~
                                     UTF8変換エラーのときCPLCでリロードするかしないか。||~v125I~
                                                                      ||~v125R~
              SWKBD:KBD Input変換を切り替える(Locale code<-->UTF8)    ||~v125R~
                                                                      ||~v125R~
                Alt+u は "UTF SWKBD" を実行しキーボード入力をLocaleCode<->UTF-8変換します。||~v125R~
                コマンド入力行の "===>" が "=u=>"に変化します         ||~v125R~
                  =u=:キーボード入力はUTF8文字扱いです。              ||~v125R~
                                                                      ||~v125R~
              FILE/FN:ファイルの中身/ファイル名のエンコーデングの省略値を設定。||~v125R~
                      CPAS は設定をリセットする時に指定します         ||~v125R~
                      設定は iniファイル に保存されます。             ||~v125R~
                      コマンドラインの /U オプションの指定があればそちらが優先します。||~v125R~
                                                                      ||~v125R~
              UTF8とLocaleコードをコマンド行、ファイル名入力画面でミックスことも出来ます。||~v125R~
              デレクトリー名、ファイル名にロケールコード、UTF8コードが混在する場合に使用します。||~v125R~
              但しこの場合UTF8コードロケールコードは間にASCIIコード(0x00<->0x7f)を||~v125R~
              置かないと境界が区別できません。                        ||~v125R~
                                                                      ||~v129R~
           -これらの変更はiniファイルに保存され、次のセッションでも有効です。||~v125R~||~v125R~
                                                                      ||~v124R~
#endif                                                                ||~v124R~
                                                                      ||~v124R~
   = バージョン

        VER  [nn]

           nn:バージョン番号
              省略するとSPFファイルの現在の更新レベル番号が表示されます
              指定するとそのファイルの更新レベル番号を設定します
              ファイル保存時に更新行にはファイルの更新レベル番号+1が
              カラム79-80にセットされます。                           ||~v125R~
              更新レベルが下げられると各行の更新レベル番号はコマンドの
              更新レベル番号を最大(最小は1)とした相対値がセットされます.
              更新レベルが上げた時は更新行のみに新しい更新レベル番号が
              セットされます.

        VERコマンドはUNDO対象となります.
        行番号付きファイルに対してのみ有効です.
        CID Header 行の update# は変更しません。

   = 簡易計算

        XBC  value1 [ operation value2 ] [op value3 [... op value10] ] [[/output-type] [R] [Vn[R]]||~v129R~

            -value1/2: [type]digit 形式
               type: z:10進数, x:16進数, o:8進数, t:hhmmss.xxx 形式の時間。
               10進数は 19桁まで、また区切り文字 "," があってもよい。
               無指定のとき、全て10進数なら10進数、全てが16進数なら
               16進数、hh:mm:ss形式なら時間。
               少数点以下は9桁まで、但しx と o では小数点以下の指定は
               できない。
               ダブルワードは16進数ワードを ".." で連結する。
               例えば abcdef01..23456789。
               Hex/Octal指定のときワード溢れは無視されるので 0x00..12345678*0x100||~v126R~
               ダブルワードの結果が表示される                         ||~v126R~
            -value3..: !,<,>,&,|,^ 以外を最大１０演算を連結することができる||~v129R~
             演算子に優先順位はなく左から順に計算する                 ||~v129R~
            -operation: +,-,*,!,/,%,   <,>,|,&,^
               （'!'は累乗、'<','>'はシフト、^は排他OR。）
               シフト、ビット演算は時間には無効。
               指定のないとき基数変換を行う。
               時間とその他のタイプでは他方は秒数として計算する。
               時間同士の乗除算は秒に変換して計算する。
               ダブルワード計算は +,-,*,/,% のみサポート。
               ワードオーバーフローは10進数演算はダブルワードに繰り上げ
               16進、8進演算では無視される。
            -output-type:結果の表示形式。
               X:16進数、O:8進数、D:10進数、U:符号無し10進数、
               Z:zzz,zz9 形式の10進数、UZ:zzz,zz9 形式の符号無し10進数
               T:hh:mm:ss.xxx 形式の時間、
               L:16進数ワード(1970年からの経過秒),又はダブルワード
               (HOST-TOD:ダブルワードのビット51がマイクロ秒です)を
               を時刻に変換。但しHOST-TODは2000年1月1日以前は
               1900年1月1日からの経過秒に変換 。
               指定のないとき入力のデータタイプにより決定する。
               10進数は16進数で、8進数/16進数は10進数で、時間は秒換算の
               10進数で表示する。
               割り算のとき１０進では結果の精度は1桁増やす、
               x と o では余りを表示する。
            -R:結果をコマンド入力行に表示する。
               結果を利用した次の計算を行う時に使用する。
            -Vn[R]:結果を小数点以下n桁とする。R：四捨五入             ||~v129R~
                                                                      ||~v129R~
          (例) XBC T010100 ; XBC xfe0100  ; XBC o177 ; XBC e8ff>3
               XBC T012159.12+t005212.333 ; XBC xabcdef+1000
               XBC 12345678..abcdef0/30a2 ; XBC 3acf19fe/l
               xbc 1234.56*7.89 v2r       ; xbc 123.45/6.789 vr       ||~v129R~
               xbc 200/3.3*35 v2r         ; xbc 1+2+3+4+5+6+7+8+9+10  ||~v129R~

          (注) XBC は 単独の exe もパッケージングしています.

   = HEX 入力モード

        XIN

            -HEX 入力モード <--> 通常入力モード の切り換え。
             省略時割り当てはCtrl+F11。                               ||~v125R~
            -HEX 入力モードの時,編集画面の左上隅が x に変わります。
            -HEX 入力は編集画面のファイル表示エリア上でのみ受付けます
            -DBCSの時 2 バイト入力するまではカーソル位置への転送は
             行われませんが "x" キーでDBCS第一文字のみを転送します。
             但しバイナリーファイルの場合DBCSチェックは行いません，
             また入力禁止文字チェックも行いません.
             EBCDIC ファイルの場合1バイト2桁入力ごとに転送されます    ||~v125R~
                                                                      ||~v125R~
            -"u","v"キーはユニコード入力に使用します。                ||~v125R~
             "u"キーは2バイト、"v"キーは3バイトユニコード入力の開始を指定します||~v125R~
             未転送のデータがあるときは転送されます。                 ||~v125R~
             1文字ごとに指定が必要です。                              ||~v125R~
                                                                      ||~v125R~
            -コマンド入力行などはHexコード入力出来ませんがユニコード入力は出来ます。||~v125R~
             UTF8コードに変換されます。                               ||~v125R~
             Hexユニコード入力は他にもDirList改名欄、ユーティリティー画面(=3.12,=3.14)、||~v125R~
             ファイル名リスト画面(=1,=2)で可能です。                  ||~v125R~
             "u"/"v"を打たないと入力はそのまま転送されます。ロケールコードをHex入力することは出来ません。||~v125R~
             Hex入力モードのとき"u"や"v"を入力したい時は２回連続してキーを押してください。||~v125R~
                                                                      ||~v127R~
************************************************************************
(4).行コマンド 
************************************************************************
********************                                                  
 (A).表示/編集画面 *
********************                                                  

[表２] 編集行コマンド一覧
 .------.-------.---------------------------------------------------.
 |ID    |機能   |説明                                               |
 .------.-------.---------------------------------------------------.
 | r    |Repeat |入力行の複製を挿入                                 |
 | i    |Insert |行長 0 の行を挿入                                  |
 | d    |Delete |行を削除                                           |
 | s    |Split  |カーソル位置で2行に分割                            | 
 | TS   |Split  |s コマンドと同じ                                   | 
 | j    |Join   |複数行を行連結                                     |
 | x    |eXclude|行を非表示化                                       |
 | f    |First  |非表示行の最初の行から表示に戻す                   |
 | l    |Last   |非表示行の最後の行から表示に戻す                   |
 | u    |Upper  |英小文字を大文字に変換する                         |
 | _    |Lower  |英小文字を小文字に変換する                         | 
 | y    |Yield  |非表示行の全行を表示に戻す                         |
 .------.-------.---------------------------------------------------.
 | <    |l-shift|行頭のスペースを削除して左シフト                   |
 | >    |r-shift|行頭にスペースを挿入して右シフト                   |
 | [    |l-shift|行頭からスペースを詰めつつ左シフト                 |
 | ]    |r-shift|行末からスペースを詰めつつ右シフト                 |
 | (    |l-shift|行頭をカットして左シフト                           |
 | )    |r-shift|行頭にスペースを挿入して右シフト                   |
 | TF   |TxtFlow|単一パラグラフのテキスト整形                       | 
 | :    |TF     |複数パラグラフのテキスト整形                       | 
 | ;    |TF-nop |範囲の行のテキスト整形(パラグラフ無視)             | 
 | /    |c++cmt |カーソル位置に // を挿入                           |
 | +    |set-str|カーソル位置に任意の文字列を挿入                   |
 .------.-------.---------------------------------------------------.
 | c    |Copy   |行コピーの複写元                                   |
 | m    |Move   |行ムーブの移動元                                   |
 | a    |After  |コピー(c)/ムーブ(m) 行コマンド 又は                | ||~v125R~
 |      |       |コピーコマンド(COPy)の挿入宛先行。この後に挿入     |
 | ac   |       |この後に、CIDをカットせずに複写                    | ||~v125R~
 | ab   |       |バイナリーモード(無変換)コピー                     | ||~v125R~
 | abc  |       |バイナリー+CID                                     | ||~v125R~
 | b    |Before |コピー(c)/ムーブ(m) 行コマンド 又は                | ||~v125R~
 |      |       |コピーコマンド(COPy)の挿入宛先行。この前に挿入     |
 | bc   |       |この前に、CIDをカットせずに複写                    | ||~v125R~
 | bb   |       |バイナリーモード(無変換)コピー                     | ||~v125R~
 | bbc  |       |バイナリー+CID                                     | ||~v125R~
 | o    |On     |コピー(c)/ムーブ(m) 行コマンドの上書き宛先行       |
 |      |       | 宛先行のスペース(タブによるスペースも含む)だけを  |
 |      |       | 上書きします,スペ−ス以外は元の文字が残ります      |
 |      |       | カーソルが宛先の最初の行にあるときはカーソル位置  |
 |      |       | から複写元の行を上書きする                        |
 | n    |Niche  |コピー(c)/ムーブ(m) 行コマンドの串刺し上書き       |
 |      |       | (n は 繰返し数)                                   |
 |      |       | 複写元のスペース(タブによるスペースも含む)以外の  |
 |      |       | 文字が宛先行を上書きします                        |
 |      |       | カーソルが宛先の最初の行にあるときはカーソル位置  |
 |      |       | から複写元の行を上書きする                        |
 | p    |Paste  |複写(c)/移動(m) 行コマンドの上書き/挿入宛先行      |
 |      |       | (n は 繰返し数)                                   |
 |      |       | 複写元の全文字を上書き/挿入モードに従い複写       |
 |      |       | カーソルが宛先のコマンド行にあるときはカーソル位置|
 |      |       | から複写元の全文字を上書き/挿入します             |
 .------.-------.---------------------------------------------------.
 | =    |compare|2つの範囲の行を比較                                |
 | #    |execute|行上のコマンドを実行                               |
 | .    |label  | . の後に任意の文字をつけてラベルとします. 例) .abc|
 |      |       | FINd,CHAnge コマンドの探索行範囲指定で使用します  |
 |      |       | 但し非表示行上には設定出来ません                  |
 .------.-------.---------------------------------------------------.


   - 行番号欄に入力します,実行キーで処理を始めます．                  
     分割画面間での行複写/移動も出来ます，同じファイルの表示と編集の
     場合一方の画面から実行キーを押せば両方の画面からの入力を処理します,
     異なるファイルの場合は両方の画面で実行キーを押す必要があります.

     行コマンドの例.
        .287-289 の 3 行を237行の後ろに移動する

            0286000|//**************************
            mm     |case 'C':
            0288000|    Gcmdmaxstack=numchk(cptr);
            mm     |    break;
            0230000|//**************************
            0231000|//* help msg      /H*
            0232000|//**************************
            0233000|case '?':
            0234000|case 'H':
            0235000|    help();
            0236000|    exit(4);
            a      |    break;
            0238000|//**************************

   - シフトコマンドの時カーソルを行番号欄ではないファイル編集エリア内
     に置いて実行するとカーソルの在るファイルの桁位置の右側にのみ
     シフトコマンドが作用します.
     従って "(" はブロック削除 ")" は空白ブロック挿入の効果があります.
   - シフトコマンドのときタブはスペースで置換されます

   - Boundsコマンドにより境界の設定はシフト(<,>,(,),[,]),ペースト(o,p,n),
     比較(=),大文字小文字変換(u,_)に影響します。                      
     境界内のみシフトし、ペーストの元データ、複写先も境界内に限定されます。
     比較、変換は境界内のみが対象です。                               
                                                                      
   - 分割行の取り扱い。
     原則分割表示された行は部分行が操作の単位になりますが、行連結(j)では
     行全体で1行として取り扱います。


   - コマンド形式は x[n][,b][.s] , xx[n][,b][.s]
     x:行コマンド.
       xx は同じ行コマンド文字を 2 文字続けて範囲指定などの意味に
       なります
     n:基本的には繰返数の意味ですが、行数、桁数のこともあります。
       "編集行コマンドパラメータ一覧"に整理してあります
       xx[n] のとき n は一方にのみ指定すればよい.両方に指定する時は
       同じ値を指定する.
     (注)**** TOP OF FILE *** 行に 入力された場合 n は Cn,Dn,/n では
         正味ファイル行数が対象になります.即ち**** TOP OF FILE ***行に
         D と入力すると次のファイル行が削除されます
    ,b:行束(Bandle)
    .s:飛び行(Skip)
       b 行ずつを s 行置きに処理する時に指定します.例えば dd,3.2-dd は
       dd-dd の範囲で "3 行削除 2 行残して" を繰り返します.
       行コマンドが xx-xx の範囲指定の場合 xx,b-xx.s のように指定
       出来ます
       x[n]形式のときは 行束 または 飛び行を指定するとn は 行数ではなく
       繰り返し数の意味になります.例えば d3,2.1 は "2 行削除 1 行 残す"
       を 3 回繰り返します.
       b のみを指定した時 s の省略地は r コマンドを除いては s=1 です。

[表２−２] 編集行コマンドパラメータ一覧
 .------.-------.--------------------.--------------------.
 |      |       |         x          |      xx-xx         |
 |ID    |機能   |  n           b   s | n            b   s |
 .------.-------.------------.---.---.------------.---.---.
 | r    |Repeat |回数        |   | 0 |回数        |   | 0 |
 | i    |Insert |行数/回数   |   |   |行数        |   |   |
 | d    |Delete |行数/回数   |   |   |NA          |   |   |
 | s    |Split  |行数/回数   |   |   |NA          |   |   |
 | TS   |Split  |行数/回数   |   |   |NA          |   |   |           
 | j    |Join   |行数/回数   |   |   |行数        |   |   |
 | x    |eXclude|行数/回数   |   |   |NA          |   |   |
 | f    |First  |行数/回数   |   |   |-           |-  |-  |
 | l    |Last   |行数/回数   |   |   |-           |-  |-  |
 | u    |Upper  |行数/回数   |   |   |NA          |   |   |
 | _    |Lower  |行数/回数   |   |   |NA          |   |   |           
 | y    |Yield  |回数        |NA |NA |NA          |NA |NA |
 .------.-------.------------.---.---.------------.---.---.
 | <    |l-shift|桁数        |NA |NA |桁数        |   |   |
 | >    |r-shift|桁数        |NA |NA |桁数        |   |   |
 | [    |l-shift|桁数        |NA |NA |桁数        |   |   |
 | ]    |r-shift|桁数        |NA |NA |桁数        |   |   |
 | (    |l-shift|桁数        |NA |NA |桁数        |   |   |
 | )    |r-shift|桁数        |NA |NA |桁数        |   |   |
 | TF   |TxtFlow|RBn         |NA |NA |-           |-  |-  |           
 | :    |TF     |行数        |RBn|Ind|NA          |RBn|Ind|           
 | ;    |TF-nop |行数        |RBn|Ind|NA          |RBn|Ind|           
 | /    |c++cmt |行数/回数   |   |   |NA          |   |   |
 | +    |set-str|NA          |NA |NA |NA          |NA |NA |
 .------.-------.------------.---.---.------------.---.---.
 | c    |Copy   |行数/回数   |   |   |NA          |   |   |
 | m    |Move   |行数/回数   |   |   |NA          |   |   |
 | a    |After  |回数        |   |   |-           |-  |-  |
 | b    |Before |回数        |   |   |-           |-  |-  |
 | o    |On     |回数        |   |   |NA          |   |   |
 | n    |Niche  |回数        |   |   |NA          |   |   |
 | p    |Paste  |回数        |   |   |NA          |   |   |
 .------.-------.------------.---.---.------------.---.---.
 | =    |compare|行数/回数   |   |   |NA          |   |   |
 | #    |execute|NA          |NA |NA |NA          |NA |NA |
 | .    |label  |NA          |NA |NA |-           |-  |-  |
 .------.-------.------------.---.---.------------.---.---.
    行数/回数: b ないしは s パラメータ無しのとき行数,有りのとき回数となります
    RBn      : (TextFlow)右側境界の位置                               
    Ind      : (TextFlow)インデンテーション桁数                       
    NA       : 使用できません
    0        : b のみを指定した場合 省略値 s=1 をとらず s=0 となります。
    -        : xx-xx形式はありません

    具体的な例は各コマンドを参照してください


[表３] 他の操作よる同等のオペレーション.                              
 .------.-------.-----------------------------------------.
 |形式  |機能   |代替のオペレーション                     |
 .------.-------.-----------------------------------------.
 | r[n] |Repeat |Shift+F10                             #1 |
 | rr[n]|       |出来ません,cc で代用して下さい           |
 | i[n] |Insert |Shift+Ins                             #1 |
 | ii[n]|       |出来ません                               |
 | d[n] |Delete |Shift+Del                             #1 |
 | dd   |       |行範囲指定してAlt+Del                 #4 |
 | s[n] |Split  |出来ません(s1 なら Shift+Enter)          |
 | TS[n]|Split  |出来ません(TS1 なら Shift+Enter)         |           
 | ss   |       |SPLitコマンドもあります                  |           
 | j[n] |Join   |出来ません(j1 なら 行末にDelキー)        |
 | jj   |       |出来ません                               |
 | x[n] |eXclude|Alt+x                                 #1 |
 | xx   |       |行範囲指定してAlt+x                   #4 |
 | f[n] |First  |Alt+f                                 #1 |
 | l[n] |Last   |Alt+l                                 #1 |
 | u[n] |Upper  |出来ません                               |           
 | uu   |       |出来ません                               |
 | _[n] |Lower  |出来ません                               |           
 | __   |       |出来ません                               |           
 | y[n] |xYz    |出来ません(y1 なら Alt+y)                |
 | yy   |       |出来ません                               |
 | <[n] |l-shift|出来ません                               |
 | <<[n]|       |出来ません                               |
 | >[n] |r-shift|出来ません                               |
 | >>[n]|       |出来ません                               |
 | [[n] |l-shift|出来ません                               |
 | [[[n]|       |出来ません                               |
 | ][n] |r-shift|出来ません                               |
 | ]][n]|       |出来ません                               |
 | ([n] |l-shift|出来ません,(([n]で代用してください       |
 | (([n]|       |ブロック範囲指定してAlt+Del           #5 |
 | )[n] |r-shift|出来ません                               |
 | ))[n]|       |出来ません                               |
 | TF[n]|       |TFコマンドもあります。                   |           
 | :[n] |       |TFコマンドもあります。                   |           
 | ::[n]|       |TFコマンドもあります。                   |           
 | ;[n] |       |TFコマンドもあります。                   |           
 | ;;[n]|       |TFコマンドもあります。                   |           
 | /[n] |       |出来ません                               |
 | //   |       |出来ません                               |
 | +    |       |出来ません                               |
 | ++_  |       |出来ません                               |
 | c[n] |Copy   |出来ません,ccで代用してください          |
 | cc   |       |行範囲指定して Alt+i                  #4 |
 | m[n] |Move   |出来ません,mmで代用してください          |
 | mm   |       |行範囲指定して Alt+j                  #4 |
 | a[n] |After  |複写のとき Alt+i,移動のとき Alt+j  #1,#2 |
 | b[n] |Before |出来ません                               |
 | o[n] |On     |行範囲指定して Alt+o         #1,#2,#3,#4 |
 | oo   |       |出来ません                               |
 | n[n] |Niche  |出来ません                               |
 | nn   |       |出来ません                               |
 | p[n] |Paste  |行範囲指定して Alt+p         #1,#2,#3,#4 |
 | pp   |       |出来ません                               |
 | =[n] |       |出来ません                               |
 | ==   |       |出来ません                               |
 | #    |       |出来ません                               |
 | ##   |       |出来ません                               |
 | .    |       |出来ません                               |
 .------.-------.-----------------------------------------.
   - カット & ペーストの機能による代替のオペレーション.
     行番号非表示(NUM off)の場合行コマンドは入力できません.
     カット & ペーストの機能を使ってほぼ同様のことができます.
     #1:[n] はサポートされません(n=1 となります),n 回繰り返して下さい.
     #2:複写はクリップボード経由なので複写元を再度行範囲指定せずに
        同じ複写を繰り返すことができます
     #3:移動(複写元の削除)はサポートされません.
     #4:行範囲指定は Alt+h 或は Alt+F7 を 1 桁目で始点/終点 指定する
     #5:ブロック範囲指定は Alt+F7

*******************************
 (A-2).編集行コマンドの使用例 *
*******************************
    = a 行コマンド.
        .aa-aa形式はありません.
        .m(Move),c(Copy)行コマンドと組み合わせて使用
        .外部ファイルの複写(COPy,MOVe)コマンドの宛先先指定としても使用します
        .n,b,sの扱いは以下の通りです。
         an     : 複写もとの全行をn回挿入する
         an.s   : 複写もとの全行をs行おきに挿入をn回繰り返す
         a,b.s  : 複写元から"b行を挿入複写後宛先行をs行飛ばす"操作を
                  複写元がなくなるまで繰り返す。
         an,b.s : 複写元から"b行を挿入複写後宛先行をs行飛ばす"操作を
                  n回繰り返す。複写元がなくなれば終了
        .バイナリー(無変換)サフィックス "B" は "a"の直後に指定します  ||~v125R~
           abn,b,s                                                    ||~v125R~
        .CIDコピーオプションは"C"はその後です。                       ||~v125R~
           a[b]cn,b,s                                                 ||~v125R~

      (1) x[n]形式

        .３行を宛先行の直後に１回複写

            c3     |A
            0000002|B
            0000003|C
            0000004|D
            0000005|E
            a      |F
            0000007|G
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            0005000|E
            0006000|F
            0006100*A
            0006200*B
            0006300*C
            0007000|G

        .指定範囲の行を宛先行の直後に３回繰り返し複写

            cc     |A
            0000002|B
            cc     |C
            0000004|D
            0000005|E
            a3     |F
            0000007|G
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            0005000|E
            0006000|F
      r1    0006100*A
            0006200*B
            0006300*C
      r2    0006400*A
            0006500*B
            0006600*C
      r3    0006700*A
            0006800*B
            0006900*C
            0007000|G

      (2) xn.s形式

        ."複写元の全行を挿入複写後２行スキップ"を３回繰り返す

            cc     |A
            0000002|B
            cc     |C
            0000004|D
            a3.2   |E
            0000006|F
            0000007|G
            0000008|H
            0000009|I
            0000010|J
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            0005000|E
      r1 cc 0005100*A
            0005200*B
         cc 0005300*C
         s1 0006000|F
         s1 0007000|G
      r2 cc 0007100*A
            0007200*B
         cc 0007300*C
         s1 0008000|H
         s1 0009000|I
      r3 cc 0009100*A
            0009200*B
         cc 0009300*C
            0010000|J

      (3) x,b.s形式

        .複写元から４行づつ取り出し１行おきに挿入を複写元がなくなるまで繰り返す

            cc     |1
            0002000|2
            0003000|3
            0004000|4
            0005000|5
            0006000|6
            0007000|7
            0008000|8
            0009000|9
            cc     |0
            a,4.1  |A
            0012000|B
            0013000|C
            0014000|D
        ===>
            0001000|1
            0002000|2
            0003000|3
            0004000|4
            0005000|5
            0006000|6
            0007000|7
            0008000|8
            0009000|9
            0010000|0
            0011000|A
      r1 b1 0011100*1
         b2 0011200*2
         b3 0011300*3
         b4 0011400*4
         s1 0012000|B
      r2 b1 0012100*5
         b2 0012200*6
         b3 0012300*7
         b4 0012400*8
         s1 0013000|C
      r3 b1 0013100*9
         b2 0013200*0
            0014000|D

      (4) xn,b.s形式

        .複写元から２行づつ取り出し１行おきに挿入を３回繰り返す

            cc     |1
            0002000|2
            0003000|3
            0004000|4
            0005000|5
            0006000|6
            0007000|7
            0008000|8
            0009000|9
            cc     |0
            a3,2.1 |A
            0012000|B
            0013000|C
            0014000|D
        ===>
            0001000|1
            0002000|2
            0003000|3
            0004000|4
            0005000|5
            0006000|6
            0007000|7
            0008000|8
            0009000|9
            0010000|0
            0011000|A
      r1 b1 0011100*1
         b2 0011200*2
         s1 0012000|B
      r2 b1 0012100*3
         b2 0012200*4
         s1 0013000|C
      r3 b1 0013100*5
         b2 0013200*6
            0014000|D
            0015000|E
            0016000|F
            0017000|G
            0018000|H

        .複写元にもb,s指定がある場合

            cc,3   |1
            0002000|2
            0003000|3
            0004000|4
            0005000|5
            0006000|6
            0007000|7
            0008000|8
            0009000|9
            cc.1   |0
            a3,2.1 |A
            0012000|B
            0013000|C
            0014000|D
            0015000|E
        ===>
            0001000|1
            0002000|2
            0003000|3
            0004000|4
            0005000|5
            0006000|6
            0007000|7
            0008000|8
            0009000|9
            0010000|0
            0011000|A
      r1 c1 0011100*1
         c2 0011200*2
            0012000|B
      r2 c3 0012100*3
         c1 0012200*5
            0013000|C
      r3 c2 0013100*6
         c3 0013200*7
            0014000|D
            0015000|E

      (5) 外部ファイルの複写

        .外部ファイルを宛先行の直後に読み込む

            x2ファイルの内容
            *******|********** TOP OF FILE ********************
            0001000*0001
            0002000*0002
            0003000*0003
            0004000*0004
            *******|********** END OF FILE ********************

            ===>copy x2
            0000001|A
            a      |B
            0000003|C
        ===>
            0001000|A
            0002000|B
            0002100*0001
            0002200*0002
            0002300*0003
            0002400*0004
            0003000|C

        .外部ファイルを宛先行の直後に[,b][.s]指定で読み込む

            ===>copy x2
            0000001|A
            a2,3.1 |B
            0000003|C
        ===>
            0001000|A
            0002000|B
            0002100*0001
            0002200*0002
            0002300*0003
            0003000|C
            0003100*0004
            0004000|D

    = b 行コマンド
        ."a"(After)コマンドが"b"コマンドの直前の行にあるのと同等です。
         n,b,sの扱いは"a"コマンドを参照してください
        .バイナリー(無変換)サフィックス "B" は "a"の直後に指定します  ||~v125R~
           bbn,b,s                                                    ||~v125R~
        .CIDコピーオプションは"C"はその後です。                       ||~v125R~
           b[b]cn,b,s                                                 ||~v125R~

        .３行を宛先行の直前に複写

            c3     |A
            0000002|B
            0000003|C
            0000004|D
            0000005|E
            b      |F
            0000007|G
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            0005000|E
            0005100*A
            0005200*B
            0005300*C
            0006000|F
            0007000|G

    = c 行コマンド
        .あて先指定コマンドa/b/p/o/nとの組み合わせで使用し複写元の行を
         指定する
        .xx-xx[n][,b][.s]形式ではnは指定できません

      (1)x[n]形式

        .続く３行を宛先行の後ろに複写

            0000001|A
            c3     |B
            0000003|C
            0000004|D
            a      |E
            0000006|F
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            0005000|E
            0005100*B
            0005200*C
            0005300*D
            0006000|F

      (2)xx-xx形式

        .範囲の行を宛先行の前に複写

            cc     |A
            0000002|B
            cc     |C
            0000004|D
            0000005|E
            b      |F
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            0005000|E
            0005100*A
            0005200*B
            0005300*C
            0006000|F

      (3)x[n][,b][.c]形式

        ."２行複写１行スキップ"を４回繰り返し

            c4,2,1 |A
            0000002|B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
            0000007|G
            0000008|H
            0000009|I
            0000010|J
            0000011|K
            0000012|L
            0000013|M
            0000014|N
            a      |O
            0000016|P
        ===>
     r1 b1  0001000|A
        b2  0002000|B
        s1  0003000|C
     r2 b1  0004000|D
        b2  0005000|E
        s1  0006000|F
     r3 b1  0007000|G
        b2  0008000|H
        s1  0009000|I
     r4 b1  0010000|J
        b2  0011000|K
            0012000|L
            0013000|M
            0014000|N
            0015000|O
     r1 b1  0015100*A
        b2  0015200*B
     r2 b1  0015300*D
        b2  0015400*E
     r3 b1  0015500*G
        b2  0015600*H
     r4 b1  0015700*J
        b2  0015800*K
            0016000|P

      (4)xx-xx[,b][.c]形式

        ."３行複写２行スキップ"を範囲内で繰り返し

            cc,3.2 |A
            0000002|B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
            0000007|G
            0000008|H
            0000009|I
            0000010|J
            0000011|K
            cc     |L
            0000013|M
            a      |N
            0000015|O
        ===>
     rr b1  0001000|A
        b2  0002000|B
        b3  0003000|C
        s1  0004000|D
        s2  0005000|E
     rr b1  0006000|F
        b2  0007000|G
        b3  0008000|H
        s1  0009000|I
        s2  0010000|J
     rr b1  0011000|K
        b2> 0012000|L
            0013000|M
            0014000|N
     rr b1  0014100*A
        b2  0014200*B
        b3  0014300*C
     rr b1  0014400*F
        b2  0014500*G
        b3  0014600*H
     rr b1  0014700*K
        b2  0014800*L
            0015000|O

    = d 行コマンド.
        .行を削除する。
        .xx-xx[n][,b][.s]形式ではnは指定できません

      (1) x[n]形式

        .３行削除

            0000001|A
            d3     |B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
        ===>
            0001000|A
            0005000|E

      (2) xx-xx形式

        .指定の範囲を削除

            0000001|A
            dd     |B
            0000003|C
            0000004|D
            dd     |E
            0000006|F
        ===>
            0001000|A
            0006000|F

      (3) x[n][,b][.s]形式

        ."２行削除４行スキップ"を３回繰り返す

            0000001|A
     r1 d1  d3,2.4 |B
        d2  0000003|C
        s1  0000004|D
        s2  0000005|E
        s3  0000006|F
        s4  0000007|G
     r2 d1  0000008|H
        d2  0000009|I
        s1  0000010|J
        s2  0000011|K
        s3  0000012|L
        s4  0000013|M
     r3 d1  0000014|N
        d2  0000015|O
            0000016|P
        ===>
            0001000|A
            0004000|D
            0005000|E
            0006000|F
            0007000|G
            0010000|J
            0011000|K
            0012000|L
            0013000|M
            0016000|P

      (4) xx-xx[,b][.s]形式

        ."３行削除２行スキップ"を範囲内で繰り返す

            0000001|A
    rr d1   dd,3.2 |B
       d2   0000003|C
       d3   0000004|D
       s1   0000005|E
       s2   0000006|F
    rr d1   0000007|G
       d2   0000008|H
       d3   0000009|I
       s1   0000010|J
       s2   0000011|K
    rr d1   0000012|L
       d2   0000013|M
       d3   0000014|N
       s1   dd     |O
            0000016|P
        ===>
            0001000|A
            0005000|E
            0006000|F
            0010000|J
            0011000|K
            0015000|O

    = f 行コマンド.
      .非表示部を上から表示化する。
      .ff-ff形式はありません

      (1) x[n]形式

       .先頭から３行表示

            0001000|A
            f3     |-     13 line excluded ------------------------------
            0015000|O
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            -------|-     10 line excluded -----------------------
            0015000|O

      (2) x[n][,b][.s]形式

        .先頭から"２行表示化１行スキップ"を３回繰り返し

            0001000|A
            f3,2.1 |-     13 line excluded ---------------
            0015000|O
        ===>
            0001000|A
            0002000|B
            0003000|C
            -------|-      1 line excluded ----------------
            0005000|E
            0006000|F
            -------|-      1 line excluded ----------------
            0008000|H
            0009000|I
            -------|-      5 line excluded ----------------
            0015000|O

    = i 行コマンド.
        .空白行の挿入
        .xn,b.s形式でnは繰り返し数ですがxx-xxn[,b][.s]形式ではnは行数です
        .In 形式の時オプション(OPT INS_LINE コマンド)で 実行キーで行挿入を継続する設定が出来ます。||~v124R~
         行挿入はカーソルを最後の挿入行からはずすか最後の行が長さ 0 のままの時停止します。||~v124R~
         継続挿入行は挿入直後に実行キーを押すと削除されます。         ||~v124R~

      (1) x[n]形式

        .４行挿入

            0000001|A
            0000002|B
            i4     |C
            0000004|D
            0000005|E
        ===>
            0001000|A
            0002000|B
            0003000|C
       i1   0003100*
       i2   0003200*
       i3   0003300*
       i4   0003400*

      (2) xx-xx[n]形式

        .３行づつ挿入

            0004000|D
            0000002|B
            ii3    |C
            0000004|D
            0000005|E
            0000006|F
            ii     |G
            0000008|H
        ===>
            0003000|C
       i1   0003100*
       i2   0003200*
       i3   0003300*
            0004000|D
       i1   0004100*
       i2   0004200*
       i3   0004300*
            0005000|E
       i1   0005100*
       i2   0005200*
       i3   0005300*
            0006000|F
       i1   0006100*
       i2   0006200*
       i3   0006300*
            0007000|G
       i1   0007100*
       i2   0007200*
       i3   0007300*
            0008000|H

      (3) x[n][,b][,s]形式

        ."４回挿入し３行飛ばす" を２回繰り返す

            0000001|A
            0000002|B
            0000003|C
            i2,4.3 |D
            0000005|E
            0000006|F
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
      r1 b1 0004100*
            0005000|E
         b2 0005100*
            0006000|F
         b3 0006100*
            0007000|G
         b4 0007100*
         s1 0008000|H
         s2 0009000|I
         s3 0010000|J
      r2    0011000|K
         b1 0011100*
            0012000|L
         b2 0012100*
            0013000|M
         b3 0013100*
            0014000|N
         b4 0014100*
            0015000|O
            0016000|P

      (4) xx-xx[n][,b][,s]形式

        ."３行挿入を４回繰り返し１行飛ばす"を範囲内で繰り返す

            0000001|A
            0000002|B
            0000003|C
            ii3    |D
            0000005|E
            0000006|F
            0000007|G
            0000008|H
            0000009|I
            0000010|J
            0000011|K
            0000012|L
            0000013|M
            0000014|N
            0000015|O
            0000016|P
            0000017|Q
            0000018|R
            ii,4.1 |S
            0000020|T
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
    rr b1-1 0004100*
       b1-2 0004200*
       b1-3 0004300*
            0005000|E
       b2-1 0005100*
       b2-2 0005200*
       b2-3 0005300*
            0006000|F
       b3-1 0006100*
       b3-2 0006200*
       b3-3 0006300*
            0007000|G
       b4-1 0007100*
       b4-2 0007200*
       b4-3 0007300*
       s1   0008000|H
       s2   0009000|I
    rr b1-1 0009100*
       b1-2 0009200*
       b1-3 0009300*
            0010000|J
       b2-1 0010100*
       b2-2 0010200*
       b2-3 0010300*
            0011000|K
       b3-1 0011100*
       b3-2 0011200*
       b3-3 0011300*
            0012000|L
       b4-1 0012100*
       b4-2 0012200*
       b4-3 0012300*
       s1   0013000|M
       s2   0014000|N
    rr b1-1 0014100*
       b1-2 0014200*
       b1-3 0014300*
            0015000|O
       b2-1 0015100*
       b2-2 0015200*
       b2-3 0015300*
            0016000|P
       b3-1 0016100*
       b3-2 0016200*
       b3-3 0016300*
            0017000|Q
       b4-1 0017100*
       b4-2 0017200*
       b4-3 0017300*
       s1   0018000|R
            0019000|S
            0020000|T

    = ｊ行コマンド
        .行の連結

      (1) x[n][,b][,s]形式

        .(２行)連結を５回繰り返す

            j5     |  A
            0002000|  B
            0003000|  C
            0004000|  D
            0005000|  E
            0006000|  F
            0007000|  G
            0008000|  H
            0009000|  I
            0010000|  J
            0011000|  K
            0012000|  L
        ===>
            0001000*  A  B
            0003000*  C  D
            0005000*  E  F
            0007000*  G  H
            0009000*  I  J
            0011000|  K
            0012000|  L

        ."(２行)連結を３回繰り返し１行スキップ"を４回繰り返す

            j4,3.1 |  A
            0002000|  B
            0003000|  C
            0004000|  D
            0005000|  E
            0006000|  F
            0007000|  G
            0008000|  H
            0009000|  I
            0010000|  J
            0011000|  K
            0012000|  L
            0013000|  M
            0014000|  N
            0015000|  O
            0016000|  P
            0017000|  Q
            0018000|  R
            0019000|  S
            0020000|  T
            0021000|  U
            0022000|  V
            0023000|  W
            0024000|  X
            0025000|  Y
            0027000|  0
            0028000|  1
            0029000|  2
            0030000|  3
        ===>
      r1 b1 0001000*  A  B
         b2 0003000*  C  D
         b3 0005000*  E  F
         s1 0007000|  G
      r2 b1 0008000*  H  I
         b2 0010000*  J  K
         b3 0012000*  L  M
         s1 0014000|  N
      r3 b1 0015000*  O  P
         b2 0017000*  Q  R
         b3 0019000*  S  T
         s1 0021000|  U
      r4 b1 0022000*  V  W
         b2 0024000*  X  Y
         b3 0026000*  Z  0
            0028000|  1
            0029000|  2
            0030000|  3

      (2) xx-xx[n][,b][.s]形式

        .(２行)連結を行範囲内で繰り返す

            jj     |  A
            0002000|  B
            0003000|  C
            0004000|  D
            jj     |  E
            0006000|  F
            0007000|  G
            0008000|  H
        ===>
            0001000*  A  B
            0003000*  C  D
            0005000|  E
            0006000|  F
            0007000|  G
            0008000|  H

        ."(２)連結を３回繰り返し１行スキップ"を行範囲内で繰り返す

            jj,3   |  A
            0002000|  B
            0003000|  C
            0004000|  D
            0005000|  E
            0006000|  F
            0007000|  G
            0008000|  H
            0009000|  I
            0010000|  J
            0011000|  K
            0012000|  L
            0013000|  M
            0014000|  N
            0015000|  O
            0016000|  P
            0017000|  Q
            jj.1   |  R
            0019000|  S
            0020000|  T
        ===>
      rr b1 0001000*  A  B
         b2 0003000*  C  D
         b3 0005000*  E  F
         s1 0007000|  G
      rr b1 0008000*  H  I
         b2 0010000*  J  K
         b3 0012000*  L  M
         s1 0014000|  N
      rr b1 0015000*  O  P
         b2 0017000*  Q  R
            0019000|  S
            0020000|  T

        ."３連結を２回繰り返し１行スキップ"を行範囲内で繰り返す

            jj3    |  A
            0002000|  B
            0003000|  C
            0004000|  D
            0005000|  E
            0006000|  F
            0007000|  G
            0008000|  H
            0009000|  I
            0010000|  J
            0011000|  K
            0012000|  L
            0013000|  M
            0014000|  N
            0015000|  O
            0016000|  P
            0017000|  Q
            jj,2.1 |  R
            0019000|  S
        ===>
      rr b1 0001000*  A  B  C
         b2 0004000*  D  E  F
         s1 0007000|  G
      rr b1 0008000*  H  I  J
         b2 0011000*  K  L  M
         s1 0014000|  N
      rr b1 0015000*  O  P  Q
            0018000|  R
            0019000|  S

    = l 行コマンド.
        .非表示行を下から表示化します
        .ll-ll形式はありません

      (1) x[n]形式

        .下から３行表示化

            0001000|A
            l3     |-     13 line excluded ------------------
            0015000|O
        ===>
            0001000|A
            -------|-     10 line excluded ----------------
            0012000|L
            0013000|M
            0014000|N
            0015000|O

      (2)x[n][,b][.s]形式

        .下から"２行表示化１行スキップ"を３回繰り返し

            0001000|A
            l3,2.1 |-     13 line excluded ---------------
            0015000|O
        ===>
            0001000|A
            -------|-      5 line excluded -----------------------
            0007000|G
            0008000|H
            -------|-      1 line excluded -----------------------
            0000000|J
            0011000|K
            -------|-      1 line excluded -----------------------
            0013000|M
            0014000|N
            0015000|O

    = m 行コマンド.
        .あて先指定コマンドa/b/p/o/nとの組み合わせで使用し移動元の行を
         指定する
        .xx-xx[n][,b][.s]形式ではnは指定できません

      (1)x[n]形式

        .３行を宛先行の後ろに移動

            0000001|A
            m3     |B
            0000003|C
            0000004|D
            a      |E
            0000006|F
        ===>
            0001000|A
            0005000|E
            0005100*B
            0005200*C
            0005300*D
            0006000|F

      (2)xx-xx形式

        .範囲の行を宛先行の前に移動

            0000001|A
            mm     |B
            mm     |C
            0000004|D
            0000005|E
            b      |F
        ===>
            0001000|A
            0004000|D
            0005000|E
            0005100*B
            0005200*C
            0006000|F

      (3)x[n][,b][.c]形式

        ."２行移動１行スキップ"を４回繰り返し

            0000001|A
     r1 b1  m4,2.1 |B
        b2  0000003|C
        s1  0000004|D
     r2 b1  0000005|E
        b2  0000006|F
        s1  0000007|G
     r3 b1  0000008|H
        b2  0000009|I
        s1  0000010|J
     r4 b1  0000011|K
        b2  0000012|L
        s1  0000013|M
            0000014|N
            a      |O
            0000016|P
        ===>
            0001000|A
     r1 s1  0004000|D
     r2 s1  0007000|G
     r3 s1  0010000|J
     r4 s1  0013000|M
            0014000|N
            0015000|O
     r1 b1  0015100*B
        b2  0015200*C
     r2 b1  0015300*E
        b2  0015400*F
     r3 b1  0015500*H
        b2  0015600*I
     r4 b1  0015700*K
        b2  0015800*L
            0016000|P

      (4)xx-xx[,b][.c]形式

        ."３行複写２行スキップ"を範囲内で繰り返し

            0000001|A
      rr b1 mm,3.2 |B
         b2 0000003|C
         b3 0000004|D
         s1 0000005|E
         s2 0000006|F
      rr b1 0000007|G
         b2 0000008|H
         b3 0000009|I
         s1 0000010|J
         s2 0000011|K
      rr b1 mm     |L
           0000013|M
           a      |N
           0000015|O
       ===>
           0001000|A
     rr s1 0005000|E
        s2 0006000|F
     rr s1 0010000|J
        s2 0011000|K
           0013000|M
           0014000|N
     rr b1 0014100*B
        b2 0014200*C
        b3 0014300*D
     rr b1 0014400*G
        b2 0014500*H
        b3 0014600*I
        b1 0014700*L
           0015000|O

    = n 行コマンド
        .上書き方式の違いと"n"コマンドには挿入モードはない点を除けば
         "p"行コマンドと同じです。
         "p"行コマンドでは複写元の内容がすべて複写されますが
         "n"行コマンドでは複写元のスペース以外の文字を全て複写します。
         ("o"行コマンドでは宛先行のスペース文字のみが上書きされます。)

            c      |  :  :  .
            nn     |01.23.51-123
            0003000|01.23.55-228
            0004000|01.24.12-560
            0005000|02.13.01-125
            0006000|02.43.33-063
            nn     |03.03.34-970
        ===>
            0001000|  :  :  .
            0002000*01:23:51.123
            0003000*01:23:55.228
            0004000*01:24:12.560
            0005000*02:13:01.125
            0006000*02:43:33.063

    = o 行コマンド.
         .上書き方式の違いと"o"コマンドには挿入モードはない点を除けば
          "p"行コマンドと同じです。
          "p"行コマンドでは複写元の内容がすべて複写されますが
          "o"行コマンドでは宛先行のスペース文字のみが上書きされます。
          ("n"行コマンドでは複写元のスペース以外の文字を全て複写します。)

            c      |  :  :  :
            oo     |02/11/05
            0003000|01 23 51 123
            0004000|01 23 55 228
            0005000|01 24 12 560
            0006000|02 13 01 125
            0007000|02/11/06
            0008000|01 14 12 160
            oo     |02 16 01 225
        ===>
            0001000|  :  :  :
            0002000*02/11/05:
            0003000*01:23:51:123
            0004000*01:23:55:228
            0005000*01:24:12:560
            0006000*02:13:01:125
            0007000*02/11/06:
            0008000*01:14:12:160
            0009000*02:16:01:225
            0007000*03:03:34.970

    = p 行コマンド.
        .m(Move),c(Copy)行コマンドと組み合わせて使用
        .外部ファイルの複写(COPy,MOVe)コマンドの宛先先指定としては使用できません。
        .Insertキーで文字列上書き/挿入モードをスイッチします
        .宛先指定行でカーソーを行データ上におくとその位置からの上書き/挿入になります
        .xn,b,sの扱いは以下の通りです。
         pn     : 複写もとの全行をn回上書き/挿入する
         pn.s   : 複写もとの全行をs行おきに上書き/挿入をn回繰り返す
         p,b.s  : 複写元からb行づつ取り出しs行おきに上書き/挿入を
                  複写元がなくなるまで繰り返す。
         pn,b.s : 複写元からb行づつ取り出しs行おきに上書き/挿入をn回繰り返す
                  複写元がなくなれば繰り返しは停止
        .x[n][,b][.s]形式では複写元の行が尽きれば複写は終わりですが
         xx-xx[,b][.s]形式では複写元の最初に戻って宛先の範囲の全行に
         複写します。(xx-xxでnは指定できません）
        .xx-xxnは形式はありません

      (1) x[n]形式

        .カーソルがファイル内容エリア以外にあるとき
            cc     |    a
            0002000|   bbb
            0003000|  ccccc
            cc     | ddddddd
            0005000|
            p      |AAAAAAAAAAAA
            0007000|BBBBBBBBBBBB
            0008000|CCCCCCCCCCCC
            0009000|DDDDDDDDDDDD
            0010000|EEEEEEEEEEEE
        ===>

          上書きモードのときの結果

            0001000|    a
            0002000|   bbb
            0003000|  ccccc
            0004000| ddddddd
            0005000|
            0006000*    aAAAAAAA
            0007000*   bbbBBBBBB
            0008000*  cccccCCCCC
            0009000* dddddddDDDD
            0010000|EEEEEEEEEEEE

          挿入モードのときの結果

            0001000|    a
            0002000|   bbb
            0003000|  ccccc
            0004000| ddddddd
            0005000|
            0006000*    aAAAAAAAAAAAA
            0007000*   bbbBBBBBBBBBBBB
            0008000*  cccccCCCCCCCCCCCC
            0009000* dddddddDDDDDDDDDDDD
            0010000|EEEEEEEEEEEE

        .カーソルがファイル内容エリア内にあるとき

            cc     |    a
            0002000|   bbb
            0003000|  ccccc
            cc     | ddddddd
            0005000|
            0006000|AAAAAAAAAAAA
            p      |BBBBBBBBxBBB
            0008000|CCCCCCCCCCCC
            0009000|DDDDDDDDDDDD
            0010000|EEEEEEEEEEEE
        ===>

          上書きモードのときの結果

            0001000|    a
            0002000|   bbb
            0003000|  ccccc
            0004000| ddddddd
            0005000|
            0006000|AAAAAAAAAAAA
            0007000*BBBBBBBB    a
            0008000*CCCCCCCC   bbb
            0009000*DDDDDDDD  ccccc
            0010000*EEEEEEEE ddddddd
            0011000|FFFFFFFFFFFF

          挿入モードのときの結果

            0001000|    a
            0002000|   bbb
            0003000|  ccccc
            0004000| ddddddd
            0005000|
            0006000|AAAAAAAAAAAA
            0007000*BBBBBBBB    axBBB
            0008000*CCCCCCCC   bbbCCCC
            0009000*DDDDDDDD  cccccDDDD
            0010000*EEEEEEEE dddddddEEEE
            0011000|FFFFFFFFFFFF

      (以降は上書きモード、カーソルは行番号欄にある場合の結果のみを例示します）

        .繰り返し数指定のケース

            cc     |    a
            0002000|   bbb
            cc     |  ccccc
            0004000|
            p3     |AAAAAAAAAAAA
            0006000|BBBBBBBBBBBB
            0007000|CCCCCCCCCCCC
            0008000|DDDDDDDDDDDD
            0009000|EEEEEEEEEEEE
            0010000|FFFFFFFFFFFF
            0011000|GGGGGGGGGGGG
            0012000|HHHHHHHHHHHH
            *******|********** END OF FILE ************************
        ===>
            0001000|    a
            0002000|   bbb
            0003000|  ccccc
            0004000|
      r1    0005000*    aAAAAAAA
            0006000*   bbbBBBBBB
            0007000*  cccccCCCCC
      r2    0008000*    aDDDDDDD
            0009000*   bbbEEEEEE
            0010000*  cccccFFFFF
      r3    0011000*    aGGGGGGG
            0012000*   bbbHHHHHH
            *******|********** END OF FILE ************************

      (2) xn.s形式

        .複写元全体を２行おきに上書き３回複写する

            cc     | 1
            0002000| 2
            0003000| 3
            cc     | 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
            p3.2   |AAAAAAAAAAAA
            0012000|BBBBBBBBBBBB
            0013000|CCCCCCCCCCCC
            0014000|DDDDDDDDDDDD
            0015000|EEEEEEEEEEEE
            0016000|FFFFFFFFFFFF
            0017000|GGGGGGGGGGGG
            0018000|HHHHHHHHHHHH
            0019000|IIIIIIIIIIII
            0020000|JJJJJJJJJJJJ
            0021000|KKKKKKKKKKKK
            0022000|LLLLLLLLLLLL
            0023000|MMMMMMMMMMMM
            0024000|NNNNNNNNNNNN
            0025000|OOOOOOOOOOOO
            0026000|PPPPPPPPPPPP
            0027000|QQQQQQQQQQQQ
        ===>
            0001000| 1
            0002000| 2
            0003000| 3
            0004000| 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
      r1    0011000* 1AAAAAAAAAA
            0012000* 2BBBBBBBBBB
            0013000* 3CCCCCCCCCC
            0014000* 4DDDDDDDDDD
         s1 0015000|EEEEEEEEEEEE
         s2 0016000|FFFFFFFFFFFF
      r2    0017000* 1GGGGGGGGGG
            0018000* 2HHHHHHHHHH
            0019000* 3IIIIIIIIII
            0020000* 4JJJJJJJJJJ
         s1 0021000|KKKKKKKKKKKK
         s2 0022000|LLLLLLLLLLLL
      r3    0023000* 1MMMMMMMMMM
            0024000* 2NNNNNNNNNN
            0025000* 3OOOOOOOOOO
            0026000* 4PPPPPPPPPP
            0027000|QQQQQQQQQQQQ

      (3) x,b.s形式

        .複写元から複写元が尽きるまで３行づつ取り出し２行おきに上書き複写する

            cc     | 1
            0002000| 2
            0003000| 3
            0004000| 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            cc     | 0
            p,3.2  |AAAAAAAAAAAA
            0012000|BBBBBBBBBBBB
            0013000|CCCCCCCCCCCC
            0014000|DDDDDDDDDDDD
            0015000|EEEEEEEEEEEE
            0016000|FFFFFFFFFFFF
            0017000|GGGGGGGGGGGG
            0018000|HHHHHHHHHHHH
            0019000|IIIIIIIIIIII
            0020000|JJJJJJJJJJJJ
            0021000|KKKKKKKKKKKK
            0022000|LLLLLLLLLLLL
            0023000|MMMMMMMMMMMM
            0024000|NNNNNNNNNNNN
            0025000|OOOOOOOOOOOO
            0026000|PPPPPPPPPPPP
            0027000|QQQQQQQQQQQQ
        ===>
            0001000| 1
            0002000| 2
            0003000| 3
            0004000| 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
      rr b1 0011000* 1AAAAAAAAAA
         b2 0012000* 2BBBBBBBBBB
         b3 0013000* 3CCCCCCCCCC
         s1 0014000|DDDDDDDDDDDD
         s2 0015000|EEEEEEEEEEEE
      rr b1 0016000* 4FFFFFFFFFF
         b2 0017000* 5GGGGGGGGGG
         b3 0018000* 6HHHHHHHHHH
         s1 0019000|IIIIIIIIIIII
         s2 0020000|JJJJJJJJJJJJ
      rr b1 0021000* 7KKKKKKKKKK
         b2 0022000* 8LLLLLLLLLL
         b3 0023000* 9MMMMMMMMMM
         s1 0024000|NNNNNNNNNNNN
         s2 0025000|OOOOOOOOOOOO
      rr b1 0026000* 0PPPPPPPPPP
            0027000|QQQQQQQQQQQQ

      (4) xn,b.s形式

        .複写元から２行づつ取り出し１行おきに３回上書き複写する

            cc     | 1
            0002000| 2
            0003000| 3
            0004000| 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            cc     | 0
            p3,2.1 |AAAAAAAAAAAA
            0012000|BBBBBBBBBBBB
            0013000|CCCCCCCCCCCC
            0014000|DDDDDDDDDDDD
            0015000|EEEEEEEEEEEE
            0016000|FFFFFFFFFFFF
            0017000|GGGGGGGGGGGG
            0018000|HHHHHHHHHHHH
            0019000|IIIIIIIIIIII
            0020000|JJJJJJJJJJJJ
            0021000|KKKKKKKKKKKK
            0022000|LLLLLLLLLLLL
            0023000|MMMMMMMMMMMM
            0024000|NNNNNNNNNNNN
            0025000|OOOOOOOOOOOO
            0026000|PPPPPPPPPPPP
            0027000|QQQQQQQQQQQQ
        ===>
            0001000| 1
            0002000| 2
            0003000| 3
            0004000| 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
      r1 b1 0011000* 1AAAAAAAAAA
         b2 0012000* 2BBBBBBBBBB
         s1 0013000|CCCCCCCCCCCC
      r2 b1 0014000* 3DDDDDDDDDD
         b2 0015000* 4EEEEEEEEEE
         s1 0016000|FFFFFFFFFFFF
      r3 b1 0017000* 5GGGGGGGGGG
         b2 0018000* 6HHHHHHHHHH
            0019000|IIIIIIIIIIII
            0020000|JJJJJJJJJJJJ

      (5) xx-xx形式

        .宛先の範囲の全行に複写するまで複写元を繰り返し使用する

            cc     | 1
            0002000| 2
            0003000| 3
            cc     | 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
            pp     |AAAAAAAAAAAA
            0012000|BBBBBBBBBBBB
            0013000|CCCCCCCCCCCC
            0014000|DDDDDDDDDDDD
            0015000|EEEEEEEEEEEE
            0016000|FFFFFFFFFFFF
            0017000|GGGGGGGGGGGG
            0018000|HHHHHHHHHHHH
            pp     |IIIIIIIIIIII
            0020000|JJJJJJJJJJJJ
        ===>
            0001000| 1
            0002000| 2
            0003000| 3
            0004000| 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
      rr c1 0011000* 1AAAAAAAAAA
         c2 0012000* 2BBBBBBBBBB
         c3 0013000* 3CCCCCCCCCC
         c4 0014000* 4DDDDDDDDDD
      rr c1 0015000* 1EEEEEEEEEE
         c2 0016000* 2FFFFFFFFFF
         c3 0017000* 3GGGGGGGGGG
         c4 0018000* 4HHHHHHHHHH
      rr c1 0019000* 1IIIIIIIIII
            0020000|JJJJJJJJJJJJ

      (6) xx-xx.s形式

        .宛先の範囲の全行に複写するまで複写元全行を２行おきにを繰り返し複写する

            cc     | 1
            0002000| 2
            0003000| 3
            cc     | 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
            pp.2   |AAAAAAAAAAAA
            0012000|BBBBBBBBBBBB
            0013000|CCCCCCCCCCCC
            0014000|DDDDDDDDDDDD
            0015000|EEEEEEEEEEEE
            0016000|FFFFFFFFFFFF
            0017000|GGGGGGGGGGGG
            0018000|HHHHHHHHHHHH
            0019000|IIIIIIIIIIII
            0020000|JJJJJJJJJJJJ
            0021000|KKKKKKKKKKKK
            0022000|LLLLLLLLLLLL
            pp     |MMMMMMMMMMMM
            0024000|NNNNNNNNNNNN
        ===>
            0001000| 1
            0002000| 2
            0003000| 3
            0004000| 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
      rr c1 0011000* 1AAAAAAAAAA
         c2 0012000* 2BBBBBBBBBB
         c3 0013000* 3CCCCCCCCCC
         c4 0014000* 4DDDDDDDDDD
         s1 0015000|EEEEEEEEEEEE
         s2 0016000|FFFFFFFFFFFF
      rr c1 0017000* 1GGGGGGGGGG
         c2 0018000* 2HHHHHHHHHH
         c3 0019000* 3IIIIIIIIII
         c4 0020000* 4JJJJJJJJJJ
         s1 0021000|KKKKKKKKKKKK
         s2 0022000|LLLLLLLLLLLL
      rr c1 0023000* 1MMMMMMMMMM
            0024000|NNNNNNNNNNNN

      (7) xx-xx,b.s形式

        .宛先の範囲の全行に複写するまで複写から３行ずつ取り出し２行おきにを繰り返し複写する
         複写元が尽きれば先頭に戻って取り出す

            cc     | 1
            0002000| 2
            0003000| 3
            cc     | 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
            pp,3   |AAAAAAAAAAAA
            0012000|BBBBBBBBBBBB
            0013000|CCCCCCCCCCCC
            0014000|DDDDDDDDDDDD
            0015000|EEEEEEEEEEEE
            0016000|FFFFFFFFFFFF
            0017000|GGGGGGGGGGGG
            0018000|HHHHHHHHHHHH
            0019000|IIIIIIIIIIII
            0020000|JJJJJJJJJJJJ
            0021000|KKKKKKKKKKKK
            0022000|LLLLLLLLLLLL
            pp.2   |MMMMMMMMMMMM
            0024000|NNNNNNNNNNNN
        ===>
            0001000| 1
            0002000| 2
            0003000| 3
            0004000| 4
            0005000| 5
            0006000| 6
            0007000| 7
            0008000| 8
            0009000| 9
            0010000| 0
      rr b1 0011000* 1AAAAAAAAAA
         b2 0012000* 2BBBBBBBBBB
         b3 0013000* 3CCCCCCCCCC
         s1 0014000|DDDDDDDDDDDD
         s2 0015000|EEEEEEEEEEEE
      rr b1 0016000* 4FFFFFFFFFF
         b2 0017000* 1GGGGGGGGGG
         b3 0018000* 2HHHHHHHHHH
         s1 0019000|IIIIIIIIIIII
         s2 0020000|JJJJJJJJJJJJ
      rr b1 0021000* 3KKKKKKKKKK
         b2 0022000* 4LLLLLLLLLL
         b3 0023000* 1MMMMMMMMMM
            0024000|NNNNNNNNNNNN

    = r 行コマンド.
        .行を直後に反復挿入します
        .r[n][,b][,s]形式で b または s があるとき
         "b 行を １回反復しs行スキップ"を n 回繰り返すになります

      (1) x[n]形式

        .行を直後に３回複写

            r3     |A
            0000002|B
            0000003|C
        ===>
            0001000|A
       r1   0001100*A
       r2   0001200*A
       r3   0001300*A
            0002000|B

      (2) xx-xx[n]形式

        .範囲の行を４回直後に複写

            rr     |A
            0000002|B
            rr4    |C
            0000004|D
        ===>
            0001000|A
            0002000|B
            0003000|C
       r1   0003010*A
            0003020*B
            0003030*C
       r2   0003040*A
            0003050*B
            0003060*C
       r3   0003070*A
            0003080*B
            0003090*C
       r4   0003100*A
            0003110*B
            0003120*C
            0004000|D

      (3) x[n][,b][.s]形式

        ."２行を直後に１回複写し１行飛ばす"を５回繰り返す

            r5,2.1 |A
            0000002|B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
            0000007|G
            0000008|H
            0000009|I
            0000010|J
            0000011|K
            0000012|L
            0000013|M
            0000014|N
            0000015|O
        ===>
            0001000|A
            0002000|B
      r1 b1 0002100*A
         b2 0002200*B
         s1 0003000|C
            0004000|D
            0005000|E
      r2 b1 0005100*D
         b2 0005200*E
         s1 0006000|F
            0007000|G
            0008000|H
      r3 b1 0008100*G
         b2 0008200*H
         s1 0009000|I
            0010000|J
            0011000|K
      r4 b1 0011100*J
         b2 0011200*K
         s1 0012000|L
            0013000|M
            0014000|N
      r5 b1 0014100*M
         b2 0014200*N
            0015000|O

        .５行を各行１回づつ複写する。

            r5,1   |A
            0000002|B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
            0000007|G
        ===>
            0001000|A
      r1    0001100*A
            0002000|B
      r2    0002100*B
            0003000|C
      r3    0003100*C
            0004000|D
      r4    0004100*D
            0005000|E
      r5    0005100*E
            0006000|F
            0007000|G

      (4) xx-xx[n][,b][.s]形式

        ."５行を直後に１回複写し２行飛ばす"を範囲内で繰り返す

            rr,5.2 |A
            0000002|B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
            0000007|G
            0000008|H
            0000009|I
            0000010|J
            0000011|K
            0000012|L
            0000013|M
            0000014|N
            rr     |O
            0000016|P
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            0005000|E
      rr-1  0005100*A
      rr-2  0005200*B
      rr-3  0005300*C
      rr-4  0005400*D
      rr-5  0005500*E
      s1    0006000|F
      s2    0007000|G
            0008000|H
            0009000|I
            0010000|J
            0011000|K
            0012000|L
      rr-1  0012100*H
      rr-2  0012200*I
      rr-3  0012300*J
      rr-4  0012400*K
      rr-5  0012500*L
      s1    0013000|M
      s2    0014000|N
            0015000|O
      rr-1  0015100*O
            0016000|P

        ."３行を直後に２回複写し１行飛ばす"を範囲内で繰り返す

            rr2,3.1|A
            0000002|B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
            0000007|G
            0000008|H
            rr     |I
            0000010|J
        ===>
            0001000|A
            0002000|B
            0003000|C
      r1-1  0003100*A
      r1-2  0003200*B
      r1-3  0003300*C
      r2-1  0003400*A
      r2-2  0003500*B
      r2-3  0003600*C
      s1    0004000|D
            0005000|E
            0006000|F
            0007000|G
      r1-1  0007100*E
      r1-2  0007200*F
      r1-3  0007300*G
      r2-1  0007400*E
      r2-2  0007500*F
      r2-3  0007600*G
      s1    0008000|H
            0009000|I
      r1-1  0009100*I
      r1-2  0009200*I
            0010000|J

    = s 行コマンド/TS行コマンド                                       
                                                                      
        .行をカーソル位置で２分割します。カーソルはどの行にあってもよい。
         カーソル位置より短い行にはnull行が挿入されます
         カードルが縦Hex表示のHex行にあるときDBCS分割によるスペース置換は行われません||~v125I~
         以下の例ではカーソルは３桁目にあるものとします
        .xx-xxでnは使えません

      (1) x[n][,b][.s]形式

        .４行を分割

            s4     |AAAAAAAAAAAAAAAAA
            0002000|12
            0003000|CCCCCCCCCCCCCCCCC
            0004000|DDDDDDDDDDDDDDDDD
            0005000|EEEEEEEEEEEEEEEEE
        ===>
       r1   0001000*AA
            0001100*AAAAAAAAAAAAAAA
       r2   0002000|12
            0002100*
       r3   0003000*CC
            0003100*CCCCCCCCCCCCCCC
       r4   0004000*DD
            0004100*DDDDDDDDDDDDDDD
            0005000|EEEEEEEEEEEEEEEEE

        ."２行を分割１行スキップ"を３回繰り返す

            s3,2.1 |AAAAAAAAAAAAAAAAA
            0002000|12
            0003000|CCCCCCCCCCCCCCCCC
            0004000|DDDDDDDDDDDDDDDDD
            0005000|EEEEEEEEEEEEEEEEE
            0006000|FFFFFFFFFFFFFFFFF
            0007000|GGGGGGGGGGGGGGGGG
            0008000|HHHHHHHHHHHHHHHHH
            0009000|IIIIIIIIIIIIIIIII
            0010000|JJJJJJJJJJJJJJJJJ
        ===>
      r1 b1 0001000*AA
            0001100*AAAAAAAAAAAAAAA
         b2 0002000|12
            0002100*
         s1 0003000|CCCCCCCCCCCCCCCCC
      r2 b1 0004000*DD
            0004100*DDDDDDDDDDDDDDD
         b2 0005000*EE
            0005100*EEEEEEEEEEEEEEE
         s1 0006000|FFFFFFFFFFFFFFFFF
      r3 b1 0007000*GG
            0007100*GGGGGGGGGGGGGGG
         b2 0008000*HH
            0008100*HHHHHHHHHHHHHHH
            0009000|IIIIIIIIIIIIIIIII
            0010000|JJJJJJJJJJJJJJJJJ

      (2) xx-xx[,b][.s]形式

        .指定の範囲の全行を分割

            ss     |AAAAAAAAAAAAAAAAA
            0002000|12
            0003000|CCCCCCCCCCCCCCCCC
            0004000|DDDDDDDDDDDDDDDDD
            0005000|EEEEEEEEEEEEEEEEE
            ss     |FFFFFFFFFFFFFFFFF
            0007000|GGGGGGGGGGGGGGGGG
        ===>
            0001000*AA
            0001100*AAAAAAAAAAAAAAA
            0002000|12
            0002100*
            0003000*CC
            0003100*CCCCCCCCCCCCCCC
            0004000*DD
            0004100*DDDDDDDDDDDDDDD
            0005000*EE
            0005100*EEEEEEEEEEEEEEE
            0006000*FF
            0006100*FFFFFFFFFFFFFFF
            0007000|GGGGGGGGGGGGGGGGG

        .指定の範囲の全行で"３行分割２行スキップ"を繰り返す

            ss,3   |AAAAAAAAAAAAAAAAA
            0002000|12
            0003000|CCCCCCCCCCCCCCCCC
            0004000|DDDDDDDDDDDDDDDDD
            0005000|EEEEEEEEEEEEEEEEE
            0006000|FFFFFFFFFFFFFFFFF
            0007000|GGGGGGGGGGGGGGGGG
            0008000|HHHHHHHHHHHHHHHHH
            0009000|IIIIIIIIIIIIIIIII
            0010000|JJJJJJJJJJJJJJJJJ
            0011000|KKKKKKKKKKKKKKKKK
            0012000|LLLLLLLLLLLLLLLLL
            0013000|MMMMMMMMMMMMMMMMM
            0014000|NNNNNNNNNNNNNNNNN
            0015000|OOOOOOOOOOOOOOOOO
            0016000|PPPPPPPPPPPPPPPPP
            ss.2   |QQQQQQQQQQQQQQQQQ
            0018000|RRRRRRRRRRRRRRRRR
        ===>
      rr b1 0001000*AA
            0001100*AAAAAAAAAAAAAAA
         b2 0002000|12
            0002100*
         b3 0003000*CC
            0003100*CCCCCCCCCCCCCCC
         s1 0004000|DDDDDDDDDDDDDDDDD
         s2 0005000|EEEEEEEEEEEEEEEEE
      rr b1 0006000*FF
            0006100*FFFFFFFFFFFFFFF
         b2 0007000*GG
            0007100*GGGGGGGGGGGGGGG
         b3 0008000*HH
            0008100*HHHHHHHHHHHHHHH
         s1 0009000|IIIIIIIIIIIIIIIII
         s2 0010000|JJJJJJJJJJJJJJJJJ
      rr b1 0011000*KK
            0011100*KKKKKKKKKKKKKKK
         b2 0012000*LL
            0012100*LLLLLLLLLLLLLLL
         b3 0013000*MM
            0013100*MMMMMMMMMMMMMMM
         s1 0014000|NNNNNNNNNNNNNNNNN
         s2 0015000|OOOOOOOOOOOOOOOOO
      rr b1 0016000*PP
            0016100*PPPPPPPPPPPPPPP
         b2 0017000*QQ
            0017100*QQQQQQQQQQQQQQQ
            0018000|RRRRRRRRRRRRRRRRR

    = u/_ 行コマンド                                                  
        .カーソル位置以降を英小文字＜−−＞大文字変換。カーソルはどの行にあってもよい。
        .xx-xxでnは使えません

      (1) x[n][,b][.s]形式

        .４行を変換

            u4     |aaaaaaaaaaaaaaa                                   
            0002000|bbbbbbbbbbbbbbb                                   
            0003000|ccccccccccccccc                                   
            0004000|ddddddddddddddd                                   
            0005000|eeeeeeeeeeeeeee                                   

        ===>
         r1 0001000*AAAAAAAAAAAAAAA
         r2 0002000*BBBBBBBBBBBBBBB
         r3 0003000*CCCCCCCCCCCCCCC
         r4 0004000*DDDDDDDDDDDDDDD
            0005000|eeeeeeeeeeeeeee

        ."２行を変換１行スキップ"を３回繰り返す

            u3,2.1 |aaaaaaaaaaaaaaa                                   
            0002000|bbbbbbbbbbbbbbb                                   
            0003000|ccccccccccccccc                                   
            0004000|ddddddddddddddd                                   
            0005000|eeeeeeeeeeeeeee                                   
            0006000|fffffffffffffff                                   
            0007000|ggggggggggggggg                                   
            0008000|hhhhhhhhhhhhhhh                                   
            0009000|iiiiiiiiiiiiiii                                   
            0010000|jjjjjjjjjjjjjjj                                   
        ===>
      r1 b1 0001000*AAAAAAAAAAAAAAA
         b2 0002000*BBBBBBBBBBBBBBB
         s1 0003000|ccccccccccccccc
      r2 b1 0004000*DDDDDDDDDDDDDDD
         b2 0005000*EEEEEEEEEEEEEEE
         s1 0006000|fffffffffffffff
      r3 b1 0007000*GGGGGGGGGGGGGGG
         b2 0008000*HHHHHHHHHHHHHHH
            0009000|iiiiiiiiiiiiiii
            0010000|jjjjjjjjjjjjjjj

      (2) xx-xx[,b][.s]形式

        .指定の範囲の全行を変換
         カーソルを９カラム目に置いた場合です

            uu     |aaaaaaaaaaaaaaa
            0002000|bbbbbbbbbbbbbbb
            0003000|ccccccccccccccc
            0004000|ddddddddddddddd
            uu     |eeeeeeeeeeeeeee
            0006000|fffffffffffffff
        ===>
            0001000*aaaaaaaaAAAAAAA
            0002000*bbbbbbbbBBBBBBB
            0003000*ccccccccCCCCCCC
            0004000*ddddddddDDDDDDD
            0005000*eeeeeeeeEEEEEEE
            0006000|fffffffffffffff

        .指定の範囲の全行で"３行変換２行スキップ"を繰り返す
         カーソルを９カラム目に置いた場合です

            uu,3.2 |aaaaaaaaaaaaaaa
            0002000|bbbbbbbbbbbbbbb
            0003000|ccccccccccccccc
            0004000|ddddddddddddddd
            0005000|eeeeeeeeeeeeeee
            0006000|fffffffffffffff
            0007000|ggggggggggggggg
            0008000|hhhhhhhhhhhhhhh
            0009000|iiiiiiiiiiiiiii
            uu     |jjjjjjjjjjjjjjj
        ===>
      rr b1 0001000*aaaaaaaaaAAAAAA
         b2 0002000*bbbbbbbbbBBBBBB
         b3 0003000*cccccccccCCCCCC
         s1 0004000|ddddddddddddddd
         s2 0005000|eeeeeeeeeeeeeee
      rr b1 0006000*fffffffffFFFFFF
         b2 0007000*gggggggggGGGGGG
         b3 0008000*hhhhhhhhhHHHHHH
         s1 0009000|iiiiiiiiiiiiiii
         s2 0010000|jjjjjjjjjjjjjjj

    = x 行コマンド
        .行を非表示化します。
        .xx-xx[n][,b][.s]形式ではnは指定できません

      (1) x[n]形式

        .３行非表示化

            0000001|A
            x3     |B
            0000003|C
            0000004|D
            0000005|E
        ===>
            0001000|A
            -------|-      3 line excluded --------------------------
            0005000|E

      (2) xx-xx形式

        .指定の範囲を非表示化

            0000001|A
            xx     |B
            0000003|C
            0000004|D
            xx     |E
            0000006|F
        ===>
            0001000|A
            -------|-  4 line excluded ------------------------------------
            0006000|F

      (3) x[n][,b][,s]形式

        ."２行非表示化１行スキップ"を３回繰り返す

            0000001|A
            x3,2.1 |B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
            0000007|G
            0000008|H
            0000009|I
            0000010|J
        ===>
            0001000|A
            -------|-      2 line excluded --------------------
            0004000|D
            -------|-      2 line excluded --------------------
            0007000|G
            -------|-      2 line excluded --------------------
            0010000|J

      (4) xx-xx[,b][,s]形式

        ."３行非表示化２行スキップ"を範囲内で繰り返す

            0000001|A
            xx,3   |B
            0000003|C
            0000004|D
            0000005|E
            0000006|F
            0000007|G
            0000008|H
            0000009|I
            xx.2   |J
        ===>
            0001000|A
            -------|-      3 line excluded --------------------------
            0005000|E
            0006000|F
            -------|-      3 line excluded --------------------------
            0010000|J

    = y 行コマンド.
        .非表示部全体を表示化する
        .[,b][.s]形式はありません
        .xx-xxでnは使えません

      (1) y[n]形式

        .続けて２箇所の非表示部をそれぞれ全行表示化

            0001000|A
            y2     |-      2 line excluded ------------------
            0004000|D
            0005000|E
            -------|-      1 line excluded ------------------
            0007000|G
            -------|-      2 line excluded ------------------
            0010000|J
            -------|-      1 line excluded ------------------
            0012000|L
        ===>
            0001000|A
            0002000|B
            0003000|C
            0004000|D
            0005000|E
            0006000|F
            0007000|G
            -------|-      2 line excluded ----------------
            0010000|J
            -------|-      1 line excluded ----------------
            0012000|L

      (2)yy-yy形式

        .範囲の非表示部を全て行表示化

            0001000|A
            -------|-      2 line excluded ----------------
            0004000|D
            0005000|E
            yy     |-      1 line excluded ----------------
            0007000|G
            -------|-      2 line excluded ----------------
            0010000|J
            yy     |-      1 line excluded ----------------
            0012000|L
        ===>
            0001000|A
            -------|-      2 line excluded ----------------
            0004000|D
            0005000|E
            0006000|F
            0007000|G
            0008000|H
            0009000|I
            0010000|J
            0011000|K
            0012000|L

    = (,) 行コマンド
        .行を左右にシフトします。
        .左シフトでは行頭は削除
         マージン指定のあるファイルはマージン内のデータがシフトされ、
         右シフトではシフトアウトされます
        .x[n],xx-xx[n]のnは繰り返し数ではなくシフト桁数です。省略値はタブ桁数（省略値=4)
         xx-xxn,b.s形式はありますが xn,b.sはありません

      (1)x[n],xx-xx[n]形式

            ((     |1234567890ABCDEFG
            0002000|      7890ABCDEFG
            ((     |   4567      DEFG
            ))     |1234567890A
            0005000|12   678
            0006000|  34567890ABC
            ))     |1234567890ABCDEFG
            (8     |1234567890ABCDEFG
            )3     |1234567890ABCDEFG
            ((     |1234567890ABCDEFG
            0011000|1234567890ABCDEFG
            ((2    |1234567890ABCDEFG
            ))5    |1234567890ABCDEFG
            0014000|1234567890ABCDEFG
            ))     |1234567890ABCDEFG

        ===>(マージンなしの場合）

      ((4   0001000*567890ABCDEFG
            0002000*  7890ABCDEFG
      ((4   0003000*567      DEFG
      ))4   0004000*    1234567890A
            0005000*    12   678
            0006000*      34567890ABC
      ))4   0007000*    1234567890ABCDEFG
      (8    0008000*90ABCDEFG
      )3    0009000*   1234567890ABCDEFG
      ((2   0010000*34567890ABCDEFG
            0011000*34567890ABCDEFG
      ((2   0012000*34567890ABCDEFG
      ))5   0013000*     1234567890ABCDEFG
            0014000*     1234567890ABCDEFG
      ))5   0015000*     1234567890ABCDEFG

        ===>(マージンあり(m15)の場合）

            0001000|//*CID://+dateR~:#63 option=(m15,p1,tabclear) update#=    2;
      ((4   0002000*567890ABCDE    FG
            0003000*  7890ABCDE    FG
      ((4   0004000*567      DE    FG
      ))4   0005000*    1234567890A
            0006000*    12   678
      ))4   0007000*      34567890A
      (8    0008000*90ABCDE        FG
      )3    0009000*   1234567890ABFG
      ((2   0010000*34567890ABCDE  FG
            0011000*34567890ABCDE  FG
      ((2   0012000*34567890ABCDE  FG
      ))5   0013000*     1234567890FG
            0014000*     1234567890FG
      ))5   0015000*     1234567890FG

      (2) xx-xx[n][,b][,s]形式

        ."２行続けて３桁シフト,１行スキップ"を指定の範囲で繰り返す

            ))3,2.1|1234567890ABCDEFG
            0008000|1234567890ABCDEFG
            0009000|1234567890ABCDEFG
            0010000|1234567890ABCDEFG
            0011000|1234567890ABCDEFG
            0012000|1234567890ABCDEFG
            0013000|1234567890ABCDEFG
            0014000|1234567890ABCDEFG
            0015000|1234567890ABCDEFG
            0016000|1234567890ABCDEFG
            ))     |1234567890ABCDEFG
        ===>
      rr b1 0007000*   1234567890ABCDEFG
         b2 0008000*   1234567890ABCDEFG
         s1 0009000|1234567890ABCDEFG
      rr b1 0010000*   1234567890ABCDEFG
         b2 0011000*   1234567890ABCDEFG
         s1 0012000|1234567890ABCDEFG
      rr b1 0013000*   1234567890ABCDEFG
         b2 0014000*   1234567890ABCDEFG
         s1 0015000|1234567890ABCDEFG
      rr b1 0016000*   1234567890ABCDEFG
         b2 0017000*   1234567890ABCDEFG

    = <,> 行コマンド
        .左シフトで行頭のスペースをシフトアウトします
         マージン指定のあるファイルはマージン内のデータがシフトされ、
         右シフトでスペースがシフトアウトされます。
        .x[n],xx-xx[n]のnは繰り返し数ではなくシフト桁数です。省略値はタブ桁数（省略値=4)
         xx-xxn,b.s形式はありますが xn,b.sはありません
         [,b][.s]の取り扱いは "(" コマンドと同じです

        .スペースシフトアウト例

            <<     |1234567890ABCDEFG
            0002000|      7890ABCDEFG
            <<     |   4567      DEFG
            >>     |1234567890A
            0005000|12   678
            0006000|  34567890ABC
            >>     |1234567890ABCDEFG
            <8     |1234567890ABCDEFG
            >3     |1234567890ABCDEFG
            <<     |1234567890ABCDEFG
            0011000|1234567890ABCDEFG
            <<2    |1234567890ABCDEFG
            >>5    |1234567890ABCDEFG
            0014000|1234567890ABCDEFG
            >>     |1234567890ABCDEFG

        ===>(マージンなしの場合）

      <<4   0001000|1234567890ABCDEFG
            0002000*  7890ABCDEFG
      <<4   0003000*4567      DEFG
      >>4   0004000*    1234567890A
            0005000*    12   678
            0006000*      34567890ABC
      >>4   0007000*    1234567890ABCDEFG
      <8    0008000|1234567890ABCDEFG
      >3    0009000*   1234567890ABCDEFG
      <<2   0010000|1234567890ABCDEFG
            0011000|1234567890ABCDEFG
      <<2   0012000|1234567890ABCDEFG
      >>5   0013000*     1234567890ABCDEFG
            0014000*     1234567890ABCDEFG
      >>5   0015000*     1234567890ABCDEFG

        ===>(マージンあり(m15)の場合）

            0001000|//*CID://+dateR~:#63 option=(m15,p1,tabclear) update#=    2;
      <<4   0002000|1234567890ABCDEFG
            0003000*  7890ABCDE    FG
      <<4   0004000*4567      DE   FG
      >>4   0005000*    1234567890A
            0006000*    12   678
            0007000*    34567890ABC
      >>4   0008000|1234567890ABCDEFG
      <8    0009000|1234567890ABCDEFG
      >3    0010000|1234567890ABCDEFG
      <<2   0011000|1234567890ABCDEFG
            0012000|1234567890ABCDEFG
      <<2   0013000|1234567890ABCDEFG
      >>5   0014000|1234567890ABCDEFG
            0015000|1234567890ABCDEFG
      >>5   0016000|1234567890ABCDEFG

    = [,] 行コマンド.
        .行頭または行末の連続スペースを１桁に圧縮します
         マージン指定のあるファイルはマージン内のデータのみが対象です
        .x[n],xx-xx[n]のnは繰り返し数ではなくシフト桁数です。省略値はタブ桁数（省略値=4)
         シフト桁数のシフトが可能になるまでスペースを圧縮します
         xx-xxn,b.s形式はありますが xn,b.sはありません
         [,b][.s]の取り扱いは "(",")" コマンドと同じです

        .スペース圧縮操作例

            [[     |1234567890ABCDEFG
            0002000|  34567890  CDEFG
            0003000|    567890  CDEFG
            0004000|     67890  CDEFG
            0005000|  34  78  AB  EFG
            [[     |  34  78  AB   FG
            ]]     |  34  78  AB   FG
            0008000|1234567890ABCDEFG
            0009000|1234567890ABCD
            0010000|1234567890A
            ]]     |123  67  0A  DE
            [5     |1   5   90   DEFG
            ]3     | 12   7890ABCDE
        ===>
      [[4   0001000|1234567890ABCDEFG
            0002000* 34567890 CDEFG
            0003000* 567890 CDEFG
            0004000* 67890  CDEFG
      [[4   0005000* 34 78 AB EFG
      ]]4   0006000* 34 78 AB  FG
            0007000*      34 78 AB FG
            0008000|1234567890ABCDEFG
            0009000*  1234567890ABCD
            0010000*    1234567890A
      ]]4   0011000*    123 67 0A DE
      [5    0012000*1 5 90  DEFG
      ]3    0013000*    12 7890ABCDE

    = TF 行コマンド.                                                  
                                                                      
        .TFコマンドも参照。                                           
        .パラグラフ内の行を整形します。                               
         パラグラフはTF行コマンドを入力した行と次の行、そして次の行以降で
         同じインデンテーション(先頭スペースの桁数)の全ての行を含みます。
        .TF[n]のnは整形結果の右境界の桁位置です。省略値はなく         
         ファイルのマージンあるいはBNDコマンドで設定されたマージン内が
         整形されます。ファイルのマージンは例えばenコマンドで開くと   
         Col1-72。EditコマンドのFオプションでも設定できます。         
                                                                      
        .例-01。 n 指定無し                                           
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            tf     |      added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
                                                                      
        ===>                                                          
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*      added this part to test the behavior of the bnds cmommand for xe. i use
            0003000*        bnds to format paragraphs                 
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
                                                                      
        .例-02。 n(整列幅) 指定あり                                   
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            tf40   *      added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
                                                                      
        ===>                                                          
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*      added this part to test the                 
            0003000*      behavior of the bnds cmommand for           
            0004000*        xe. i use bnds to format                  
            0004100*        paragraphs                                
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
                                                                      
    = :  行コマンド.(TextFlow)                                        
                                                                      
        .:[n][,m][.i]                                                 
         n は行数で xx-xx[n]の形式はありません。mは整列幅(TFLowコマンドのwidthパラメータに同じ),
         iはインデンテーションを全パラグラフ同じにしたい時に指定します(TFlowコマンドのInパラメータに同じ)
        .:n指定のn行あるいは::-::の範囲の行をパラグラフ整形します。   
        .":"と";"はTFLowコマンドのNOPオプションの有無の違いです。 (";"=":"+NOP)

        .例-01。行数指定無し                                          

            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            :      |      added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
            0008000*     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        ===> 1パラグラフを処理する                                    
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*      added this part to test the behavior of the bnds cmommand for xe. i use
            0003000*        bnds to format paragraphs                 
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
            0008000*     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        .例-02。幅指定無し                                            
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            :6     |      added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
            0008000|     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        ===> 指定の行数、元の境界内(f80で設定したcol1-col80)で整形する。
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*      added this part to test the behavior of the bnds cmommand for xe. i use
            0003000*        bnds to format paragraphs                 
            0004000*     so the breakes are nice.  *                  
            0005000*     *   CL114 *   JOB stream:   job name  proc name  program run frequency
            0006000*     *   CL114                                    
            0008000|     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        .例-03。幅指定有り                                            
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            :6,40  |      added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
            0008000|     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        ===> 指定の幅内に詰め込む                                     
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*      added this part to test the                 
            0003000*      behavior of the bnds cmommand for           
            0004000*        xe. i use bnds to format                  
            0005000*        paragraphs                                
            0006000*     so the breakes are nice.  *                  
            0007000*     *   CL114 *   JOB stream:   job              
            0007100*     name  proc name  program run                 
            0007200*     frequency      *   CL114                     
            0008000|     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        .例-04。インデンテーション指定有                              
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            i6,40.2|      added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
            0008000*     *                 --------  AAAAAA     weekly.                    *   CL114
                                                                      
        ===> 整形後のインデンテーションを統一する。";"行コマンドと異なりパラグラフ境界は意識する。
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*  added this part to test the behavior            
            0003000*  of the bnds cmommand for xe. i use              
            0004000*  bnds to format paragraphs                       
            0005000*  so the breakes are nice.  *                     
            0006000*  *   CL114 *   JOB stream:   job name            
            0007000*  proc name  program run frequency                
            0007100*  *   CL114                                       
            0008000*     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        .例-05。xx-xx形式で処理範囲を指定                             

            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            ::,40.2|      added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
            ::     *     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        ===>                                                          
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*  added this part to test the behavior            
            0003000*  of the bnds cmommand for xe. i use              
            0004000*  bnds to format paragraphs                       
            0005000*  so the breakes are nice.  *                     
            0006000*  *   CL114 *   JOB stream:   job name            
            0007000*  proc name  program run frequency                
            0008000*  *   CL114 *                 --------            
            0008100*  AAAAAA     weekly.                              
            0008200*  *   CL114                                       
            0009000|     *=================================================================*   CL114
                                                                      
    = ;  行コマンド. (TextFlow パラグラフ無視)                        
                                                                      
        .;[n][,m][.i]                                                 
         n は行数で xx-xx[n]の形式はありません。mは整列幅(TFLowコマンドのwidthパラメータに同じ),
         iはインデンテーションを全パラグラフ同じにしたい時に指定します(TFlowコマンドのInパラメータに同じ)
        .;n指定のn行あるいは;;-;;の範囲の行をパラグラフ整形します。   
        .":"と";"はTFLowコマンドのNOPオプションの有無の違いです。 (";"=":"+NOP)
                                                                      
        .例-01。幅指定有り                                            

            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            ;6,40  |      added this part to test the behavior of the bnds
            0003000|        cmommand for                              
            0004000|        xe. i use bnds to format paragraphs       
            0005000|     so the breakes are nice.                     
            0006000|     *                                                                 *   CL114
            0007000|     *   JOB stream:   job name  proc name  program run frequency      *   CL114
            0008000*     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
        ===> .i(インデンテーション)の指定がない場合最初の行のインデンテーションが使用されます。
             パラグラフ境界意識せずにどんどんつめていきます。         
                                                                      
            col    |....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
            *******|********** TOP OF FILE *********************************************************
            0001000|//*CID://+NONER~:    option=(f80,p0) update#=    3;
            0002000*      added this part to test the                 
            0003000*      behavior of the bnds cmommand for           
            0004000*      xe. i use bnds to format                    
            0005000*      paragraphs so the breakes are               
            0006000*      nice.  *                                    
            0007000*      *   CL114 *   JOB stream:   job             
            0007100*      name  proc name  program run                
            0007200*      frequency      *   CL114                    
            0008000*     *                 --------  AAAAAA     weekly.                    *   CL114
            0009000|     *=================================================================*   CL114
                                                                      
    = / 行コマンド
        .C++,java言語の行コメントＩＤ"//"をカーソル位置行頭に挿入します。
         カーソルを置く行は問いません
        .行長がカーソル位置より短い行には挿入されません
        .xx-xxn[,b][.s]形式はありません

        .例。287-289 の 3 行をコメントにする

            0286000|//**************************
            //     |case 'C':
            0288000|    Gcmdmaxstack=numchk(cptr);
            //     |    break;
            0230000|//**************************
            0231000|//* help msg      /H*
            0232000|//**************************
            0233000|case '?':
            0234000|case 'H':
            0235000|    help();
            0236000|    exit(4);
            0237000|    break;
            0238000|//**************************

        ===>(カーソルが行番号欄、例えば１７桁目にあるとき)

            0286000|//**************************
            0287000|case 'C':
            0288000*    Gcmdmaxstack=//numchk(cptr);
            0289000|    break;
            0230000|//**************************
            0231000|//* help msg      /H*
            0232000|//**************************
            0233000|case '?':
            0234000|case 'H':
            0235000|    help();
            0236000|    exit(4);
            0237000|    break;
            0238000|//**************************

        ===>(カーソルがファイル内容欄にあるとき)
            0286000|//**************************
            0287000*//case 'C':
            0288000*//    Gcmdmaxstack=numchk(cptr);
            0289000*//    break;
            0230000|//**************************
            0231000|//* help msg      /H*
            0232000|//**************************
            0233000|case '?':
            0234000|case 'H':
            0235000|    help();
            0236000|    exit(4);
            0237000|    break;
            0238000|//**************************

        .[n][,b][.s]の効果

            /3     |  A
            0002000|  B
            0003000|  C
            0004000|  D
            /3,2.1 |  E
            0006000|  F
            0007000|  G
            0008000|  H
            0009000|  I
            0010000|  J
            0011000|  K
            0012000|  L
            0013000|  M
            //,3.2 |  N
            0015000|  O
            0016000|  P
            0017000|  Q
            0018000|  R
            0019000|  S
            0020000|  T
            0021000|  U
            0022000|  V
            0023000|  W
            0024000|  X
            0025000|  Y
            //     |  Z
        ===>
      r1    0001000*//  A
      r2    0002000*//  B
      r3    0003000*//  C
            0004000|  D
      r1 b1 0005000*//  E
         b2 0006000*//  F
         s1 0007000|  G
      r2 b1 0008000*//  H
         b2 0009000*//  I
         s1 0010000|  J
      r3 b1 0011000*//  K
         b2 0012000*//  L
            0013000|  M
      rr b1 0014000*//  N
         b2 0015000*//  O
         b3 0016000*//  P
         s1 0017000|  Q
         s2 0018000|  R
      rr b1 0019000*//  S
         b2 0020000*//  T
         b3 0021000*//  U
         s1 0022000|  V
         s2 0023000|  W
      rr b1 0024000*//  X
         b2 0025000*//  Y
         b3 0026000*//  Z

    = + 行コマンド
        .任意の文字列をカーソル位置に挿入します。
         カーソルを置く行は問いません
         行長がカーソル位置より短い行には挿入されません
        .[n][,b][.s]形式はありません. "+","++"の後ろは全て挿入文字列になります。

        .例。
            0019000|#   case ${DVWORDS[0]} in
            ++#_   |    case $DIST         in
            0021000|#     Red*)    DID=rh${DVWORDS[4]}  ;;     #Red Hat
            0022000|      Red*)    DID=rh$VER           ;;     #Red Hat
            0023000|#     Turbo*)  DID=tb${DVWORDS[2]}  ;;     #TurboLinux release 6.0 Work
            0024000|      Turbo*)  DID=tb$VER           ;;     #TurboLinux release 6.0 Work
            0025000|      *)      echo "xegetdv:No distribution ID found from /etc/issue (
            0026000|              sleep 2
            0027000|              DID=rh9
            ++     |    esac
            +#;    |fi
        ===>
            0020000*#_    case $DIST         in
            0021000*#_#     Red*)    DID=rh${DVWORDS[4]}  ;;     #Red Hat
            0022000*#_      Red*)    DID=rh$VER           ;;     #Red Hat
            0023000*#_#     Turbo*)  DID=tb${DVWORDS[2]}  ;;     #TurboLinux release 6.0 WorkStation (Shiga)
            0024000*#_      Turbo*)  DID=tb$VER           ;;     #TurboLinux release 6.0 WorkStation (Shiga)
            0025000*#_      *)      echo "xegetdv:No distribution ID found from /etc/issue ( " $DVER " ),assumed \"rh9\"."
            0026000*#_              sleep 2
            0027000*#_              DID=rh9
            0028000*#_    esac
            0029000*#;fi

    = . 行コマンド
        .Find,Sortなどのコマンドに対し適用範囲の行を限定するのに使用します
        ."."に続けて任意の英数字でラベルをつけてください
        .行の目印にも使えます。適当にラベルをつけて "f *e" で探すことが出来ます。||~v125R~

        .例。9-14行のみを整列する(.a .b は行ラベル）

                ==>SOR 1-12 .a .b
               ****|********** TOP
               0001*20040305
               0002*01 23 51 123
               0003*01 23 55 228
               0004*01 24 12 560
               0005*02 13 01 125
               0006*02 43 33 063
               0007*03 03 34 970
               0008*20040307
               .b  *11 23 51 123
               0010*01 13 55 228
               0011*12 24 12 560
               0012*02 13 01 125
               0013*12 43 33 063
               .a  *03 03 34 970
               0015*20040308

    = = 行コマンド
        .１行づつ比較し最初の相違箇所を反転させます。
        .xx-xxn[,b][.s]形式はありません
        .一方が=[n]形式、他方が==-==の範囲指定形式でも比較できます。
        .画面分割して開いた二つのファイルの内容を比較することもできます。
        .SPFファイルなどマージン指定のあるファイルは左マージンだけが比較されます。
        .コピー元とコピー先のコードページが異なれば変換されます。     ||~v125R~
         コードページが異なる場合の比較で使用されるコードページは以下の通りです。||~v125R~
                                                                      ||~v125R~
                      | ロケール | UTF8 |  EBCDIC1                    ||~v125R~
            ----------------------------------------                  ||~v125R~
            ロケール  |    -     | UTF8 |  ロケール                   ||~v125R~
            UTF8      |          |  -   |  UTF8                       ||~v125R~
            EBCDIC2   |          |      |  HexCode     (EBCDIC同士はHexCodeで比較します)||~v125R~
                                                                      ||~v125R~
         Binaryモードで比較したい場合は "B"(Binaryモード)サフィックスを指定してください||~v125R~
         Binaryモードは UTF8ファイルではサポートされません。          ||~v125R~
         ロケールファイル-->EBCDICファイルのとき TAB(0x09)拡張によるスペースは無視されます。||~v125R~
           =[B][n][,b][.s]                                            ||~v125R~
           ==[B]                                                      ||~v125R~
         (どこか一箇所に"B"をつけてください。)                        ||~v125R~
                                                                      ||~v125R~
        .例。 56行と58行の違う場所を探す

               0055|#ifdef TEST
               =   |    #define MDOSDISK(fnm) (*((fnm)+1)==':' && (*(fnm)=='a'||*(fnm)=='A'&&*
               0057|#else
               =   |    #define MDOSDISK(fnm) (*((fnm)+1)==':' && (*(fnm)=='a'||*(fnm)=='A'||*
               0059|#endif

        .[n][,b][.s]の使用例。比較する行を同じ内容にしてあります。

            ==,3.1 |  A
            0002000|  B
            0003000|  C
            0004000|  D
            0005000|  E
            0006000|  F
            0007000|  G
            0008000|  H
            0009000|  I
            ==     |  J
            0011000|  K
            0012000|  L
            0013000|  M
            0014000|  N
            0015000|  O
            0016000|  P
            =,2.1  *  A
            0018000*  B
            0019000|  S
            0020000*  C
            0021000*  E
            0022000|  V
            0023000*  F
            0024000*  G
            0025000|  Y
            0026000*  I
            0027000*  J

    = # 行コマンド
        .[n][,b][.s]はサポートされません
        .#のあとに以下のオプションが使用できます。
         ^ : コマンドを分割画面の他方の画面上で実行する。
         ! : コマンドがエラーで終了しても次の行のコマンドを実行する。

        .例。56行から58行までを分割画面の別の画面で実行する、各行のコマンドのエラーは
         無視して最後まで実行する。
         開いているファイルは::cl(コマンドログ)でタイムスタンプフィールドは
         無視される。(1桁目が"="のとき次の"="までを無視する)          ||~v125R~

            0055|=20:50:17.937:s file1
            ##^ |=20:50:23.828:i word1 -m all
            0057|=20:50:56.953:i word2 -m all
            ##! |=20:51:00.484:i wodr3 -m all
            0059|=20:51:06.203:s

*************************                                             
 (B).ディレクトリー画面 * 
*************************                                             

[表４] ディレクトリーリスト行コマンド.
 .----.--------.-----------------------------------------------------.||~v124R~
 |形式|機能    |説明                                                 |||~v124R~
 .----.--------.-----------------------------------------------------.||~v124R~
 | a  |Attrib  |属性設定                                             |||~v124R~
 | b  |Browse  |ファイルの表示                                       |||~v124R~
 | c  |Copy    |ファイルまたはディレクトリーの複写                   |||~v124R~
 | d  |Delete  |ファイルまたはディレクトリーの削除                   |||~v124R~
 | e  |Edit    |ファイルの編集                                       |||~v124R~
 | f  |Free    |View画面の終了(編集画面の変更は保存される)           |||~v124R~
 | g  |Grep    |ファイル、ディレクトリー内のgrepサーチ               |||~v124R~
 | h/H|Hex     |Hexモードでファイルを開く．                          |||~v124R~
 | i/I|ECN(EI) |Col.1-6行番号、SPF-COBOLファイルとして開く。         |||~v124R~
 | j/J|EKN(EJ) |Col.1-6スペース、SPF-COBOLファイルとして開く。       |||~v124R~
 | k/K|EK      |Col.1-6スペースのCOBOLファイルとして開く。           |||~v124R~
 | l/L|EC(EL)  |Col.1-6行番号のCOBOLファイルとして開く。             |||~v124R~
 | m  |Move    |ファイルまたはディレクトリーの移動                   |||~v124R~
 | n/N|EN      |COL73-80行番号の行番号付き(SPF)ファイルとして開く。  |||~v124R~
 | o/O|Open    |パラメータ指定でファイルを開く。                     |||~v124R~
 | p  |Print   |INI で指定したコマンドによる印刷 (省略値はXPRINT.EXE)|||~v124R~
 | r  |Rename  |ファイルまたはディレクトリーの名前変更               |||~v124R~
 | s  |Select  |表示または編集                                       |||~v124R~
 | t  |Text    |テキストモード強制の表示または編集                   |||~v124R~
 | u  |Undo    |Rename/Delete/Move 済みの行にたいし戻しをする        |||~v124R~
 | v  |View    |画面分割して表示(browse),f コマンドでView終了        |||~v124R~
 | w  |vieW    |画面分割して表示(edit),f コマンドでView保存終了      |||~v124R~
 | x  |eXcude  |このサブディレクトリーのメンバーを非表示(yで再表示)  |||~v124R~
 | y  |Yield   |非表示にしたこのサブディレクトリーのメンバーを再表示 |||~v124R~
 | z  |Zero    |削除データを保存しない削除                           |||~v124R~
 | 0  |Zero    |削除データを保存しない(読取専用でも)削除             |||~v124R~
 | 1  |BrowseB |ファイルの表示,バイナリーファイルモード              |||~v124R~
 | 2  |EditB   |ファイルの編集,バイナリーファイルモード              |||~v124R~
 | 3  |E/B-B   |画面の表示/編集モードに従うバイナリーファイルモード  |||~v124R~
 | 8  |E/B-8   |画面の表示/編集モードに従いB8/E8コマンドで開く       |||~v124R~
#ifdef UTF8SUPP                                                       ||~v124I~
 | [  |O-CPLC  |画面の表示/編集モードに従いCPLC オプションで開く     |||~v124I~||~v125R~
 | ]  |O-CPU8  |画面の表示/編集モードに従いCPU8 オプションで開く     |||~v124I~||~v125R~
#endif                                                                ||~v124I~
 | =  |Compare |ツールxfc/xdcを使用したファイル/ディレクトリー照合   |||~v124R~||~127DR~
 | /  |slash   |読取専用でも削除                                     |||~v124R~
 | -  |expand  |ディレクトリー内のメンバーの展開表示                 |||~v124R~
 | >  |expall  |サブディレクトリーも含む全メンバー展開               |||~127DR~
 | +  |reduce  |ディレクトリーのメンバー展開を元に戻す               |||~v124R~||~127DR~
 | :  |path    |デレクトリーとその上のレベルは経路のみを表示         |||~v124R~||~127DR~
 | .  |chdir   |この行から現行ドライブと現行デレクトリーを設定       |||~v124R~
 | %  |appcmd  |この行のファイル/デレクトリーにコマンドを適用        |||~v124R~
 | $  |appcmdA |"%"の非同期実行版                                    |||~127DR~
 | !  |assoc   |拡張子の関連付けに従ったアプリケーション起動         |||~v124R~
 | #  |execute |ローカル(SUB),リモート(RSH)ファイルを実行            |||~v124R~
 | &  |spawn   |ファイルの非同期実行                                 |||~v124R~
 | ^  |send    |ファイル名転送                                       |||~v124R~
 .----.--------.-----------------------------------------------------.||~v124R~

   - 行コマンド入力欄に 1 文字コマンドを入力します                    
     Attrib/Copy/Move/Rename/Open/%(appcmd)コマンドは 機能キーを使用して
     コマンド複写ができます
     (1).キー割り当ての省略値 ( [表１] の説明 ),#9 を参照.
   - 行コマンドは行番号の逆順に処理されます                           
     従って複数入力した時 Browse/Edit では行番号の小さいファイルが前面
     に表示され行番号の大きいファイルがその下にスタックされています.  
     エラーが発生した時はそれより前のコマンドが未処理ということに     
     なります                                                         
   - h,i,j,k,L,n,o 行コマンドは大文字,小文字の区別が有ります。
     BrowseかEditかが小文字の時はDirectoryListを開いた時のコマンドに
     従い、大文字のときはその反対になります。
   - 削除には "d","/","z","0" の 4 タイプのコマンドがあります.
     読み取り専用属性の有無,削除戻しを可能にするか否かで使い分けます.
     .--------.-------.-------.
     |コマンド|Undo   |読専   |
     .--------.-------.-------.
     | d      |可     |エラー |
     | /      |可     |削除   |
     | z      |不可   |エラー |
     | 0      |不可   |削除   |
     .--------.-------.-------.
     いずれの場合も空でないディレクトリーの場合確認メッセージが出ます.
     またこのディレクトリーリストからViewコマンドなどにより表示された
     画面は閉じられます.
   - Copy/Move/Renameコマンドの宛先名に *\, **\, ^*\ が指定できます
     *\  : 複写/移動元を含んでいるディレクトリー(同一ディレクトリー内)
     **\ : *\ の親ディレクトリー, **\**\ のような指定もできます  
     ^*\ : 画面分割しているとき他方の画面のDirないしはFileの経路
     宛先名にワイルドカードも使用可(経路名には作用しません)。
     宛先名にスペースが含まれる場合は宛先名全体を引用符で囲んで下さい.

     A:,B:以外のルートディレクトリーにある拡張子が " SF" の
     ファイルは改名と読み取り専用属性のリセットは出来ません.
     例えば "EA DATA. SF" などOS/2 で重要なファイルをDOSで削除
     されるのを防ぐためです.DOSで削除するにはコマンドプロンプトから
     ワイルドカード指定で操作して下さい

  (注)ワイルドカードの取扱いがDOS6.3ではOS/2,Windowsと扱いが異なります
      x* は OS/2,Windows では x*.* と同じですが DOS6.3 では x* では例えば
      x1.c は対象となりません

   - 行コマンド                                                       

     a (Attrib):属性設定                                              

#if defined(LNX) || defined(W32)
                TSO ファイルでは SPF情報があればバージョン番号、更新番号が
                ４桁数字vvmmの形式で属性欄に表示されています
                "a"行コマンドでこの値を変更できます。
                TSOファイルで ATTrib DOSコマンドは使用できません。
                他のSPF情報を変更するには TSOコマンド-SPFサブコマンドを使用してください。
#endif

#ifdef UNX
                属性入力欄に属性を入力。
                属性の指定方法は ATTrib DOS コマンド参照。
#else
                属性入力欄に属性を入力,入力形式は設定したい属性文字のみ
                を指定する(shr等)か追加する属性文字を + に続け削除したい
                属性文字を - に続ける(-r+sh等).                       
                ATTrib コマンドと同じく / (その属性に設定)も使える
                a:Archive s:System h:Hidden r:Read only               
#endif

     b (Browse):ファイルの表示                                        
     c (Copy  ):ファイルまたはディレクトリーの複写                    
                改名欄に 複写先とオプションを入力する。               ||~v127R~
                複写元がディレクトリーで複写先が存在しないとき        ||~v127R~
                複写先指定のディレクトリーが作成され、存在するときは  ||~v127R~
                /cオプション指定があれば複写先ディレクトリー(存在していること)||~v127R~
                に複写元ディレクトリを作成して複写、/c 指定がなければ ||~v127R~
                複写元ディレクトリーのメンバーを複写先デレクトリーに複写。||~v127R~
                                                                      ||~v127R~
                ワイルドカードマスク指定で開いたディレクトリーは
                ワイルドカードに該当するメンバーの複写になります。    ||~v127R~
                複写先がワイルドカードのときその親ディレクトリーに
                複写元のディレクトリーのメンバーがワイルドカードに
                したがって改名され複写される。
                                                                      ||~v127R~
                省略値で /s は付加されるのでサブディレクトリーを      ||~v127R~
                除く場合は /s- を指定すること                         ||~v127R~
                既存ファイルを上書き(/r,/y)などのオプションは XCOpy と
                同様です。宛先ファイル名の後ろにつけてください。
                /+ でない時、元ファイルのタイムスタンプなどは複写されます。
#ifdef UNX
                これを望まない場合あるいは コピーはできるが権限エラーと
                なる場合 -n オプションでファイル属性の複写を省略できます。
#endif
     d (Delete):ファイルまたはディレクトリーの削除
                読取専用ファイル/ディレクトリーあるいはそれらを含む
                ディレクトリーは削除できません.その場合は "/" コマンド
                を使用して下さい.
                OPT UNDelete コマンド で Undelete オプションを設定すれば
                削除を Undo する事ができます.オプションの省略値は
                『現エディターセッション内での削除ファイル/ディレクトリ
                ーに限って削除戻しが可能』です.
                削除の Undo のためには削除データの保存が行われます,
                従って削除の時点ではディスクは空きません.これを望まない
                場合は "z" コマンドを使用して下さい
                特に DOS の場合ディレクトリーの移動はファイルのコピーを
                伴うので多少の時間がかかります.
                ルートDirは削除できません。
     e (Edit  ):ファイルの編集                                        
                OS/2 版はシステム又は隠しファイルは更新できません
                (errno=60が発生)
     f (Free  ):View画面の終了(編集画面の変更は保存される)            
     g (Grep  ):ファイル/ディレクトリーをgrepサーチ。                 
                                                                      
                改名欄に探索文字列などパラメータ入力。                
                ディレクトリーの場合探索文字列にワイルドカード文字("*"と"?")を含む場合は
                引用符で囲んでください。                              
                引用符で囲まない最後のオペランドが"*"や"?"を含んでいるとディレクトリーの
                メンバーに対するワイルドカードとみなします。          
                (例)                                                  
                    _0106||||. ddddddddddd A---                 06-04-19 11:46       33,637
                    g0107||||+ Debug       ----  -n "DATE.*2007" *.c  
                    g0108||||. def         ----  -n "DATE.*2007"      
                    _0109||||. depgen      ----                 05-10-26 09:04           98
                    _0110||||. depgen.aix  A---                 05-04-28 16:30          120
                                                                      
     h/H(Hex  ):EHかBHコマンドで開く
     i/I(ECN  ):ECN(=EI)かBCN(=BI)コマンドで開く
     j/J(EKN  ):EKN(=EJ)かBKN(=BJ)コマンドで開く
     k/K(EK   ):EKかBKコマンドで開く
     l/L(EC   ):EC(=EL)かBC(=BL)コマンドで開く
     m (Move  ):ファイルまたはディレクトリーの移動
                改名欄に移動先ディレクトリー名を入力する
                新しい名前を指定して同時に改名も可能
                複写先がディレクトリーの場合そのディレクトリー内に
                移動されます.
                複写先がワイルドカードのときその親ディレクトリーに
                複写元のディレクトリーのメンバーがワイルドカードに
                したがって改名され移動される。
                c(Copy)とは異なりワイルドカードマスク指定で開いたディレクトリーでも
                全メンバーが対象となります。
                ディレクトリーのタイムスタンプの複写については XMOve
                コマンドを参照.
                既存ファイルを上書きする場合は XMOve と同様に /r ないし
                /r を 宛先ファイル名の後ろにつけてください。
     n/N(EN)   :ENかBNコマンドで開く
     o/O(Open) :EditかBrowseコマンドで開く。改名欄にEdit/Browseコマンドの
                パラメータ指定が可能。
                BrowseかEditかは,小文字の時はDirectoryListを開いた時のコマンドに従い、||~v125R~
				大文字のときはその反対になります。                    ||~v125R~
                CPU8などエンコーディング指定が必要な場合も "o" コマンドを使用する。||~v125R~
     p (Print ):INI で指定したコマンドによる印刷 (省略値はXPRINT.EXE)
                ディレクトリー、ワイルドカード指定で開いたディレクトリー
                も印刷出来ます。(ワイルドカード指定で開いたディレクトリーは
                該当するものだけが印刷されます）。
                サブディレクトリーは探索されません。
                リモートファイルはローカル印刷します。
     r (Rename):ファイルまたはディレクトリーの名前変更                
                改名欄に新しい名前を指定する
     s (Select):表示 (Browseコマンドまたはメニューで 1 を選択の結果で
                ディレクトリー画面が表示されている時)
                または編集 (Editコマンドまたはメニューで 2 のとき)    
                ディレクトリー画面の1行目左端にBROWSEまたはEDITと表示
                されている                                            
     u (Undo  ):Rename/Delete/Move 済みの行にたいし戻しをする
                Deleteの戻しは削除データ保存ディレクトリーの行にも
                入力可能です.
                画面を閉じた後の削除戻しに付いては OPT UNDelete コマンド
                の説明も参照
           (注) DOS の場合ディレクトリーのタイムスタンプは元に戻りません。
     v (View  ):画面分割して表示(browse),f コマンドでView終了         
     w (vieW  ):画面分割して表示(edit),f コマンドでView保存終了
                OS/2 版はシステム又は隠しファイルは更新できません
     x (eXcude):このサブディレクトリーのメンバーを非表示(yで再表示)   
                メンバー展開表示(+)の時のみ有効                       
     y (xYz   ):非表示にしたこのサブディレクトリーのメンバーを再表示  
     z (Zero)  :Undelete_option の設定にかかわらず Undelete を必要と
                しない(削除データの保存を伴わない)削除を行う.
                読取専用ファイル/ディレクトリーあるいはそれらを含む
                ディレクトリーは削除出来ない.その場合は "0" コマンドを
                使用して下さい.
                "OPT delz OFF"コマンドで禁止することが出来ます        ||~v126R~
     0 (Zero)  :Undelete_option の設定にかかわらず Undelete を必要と
                しない(削除データの保存を伴わない)削除を行う.
                読取専用ファイル/ディレクトリーあるいはそれらを含む
                ディレクトリーがあっても削除を強行する.
                "OPT delz OFF"コマンドで禁止することが出来ます        ||~v126R~
     1 (BrowseB):ファイルの表示.バイナリーファイルモード.             
     2 (EditB ):ファイルの編集.バイナリーファイルモード.              
     3 (E/B-B ):バイナリーファイルモード. 表示か編集かは画面のモードに従う。
     8 (E/B-8 ):FixedLRECL=80モード. 表示か編集かは画面のモードに従う。
                                                                      ||~v124I~
#ifdef UTF8SUPP                                                       ||~v124I~
     [ (O-CPLC):コードページオプション=CPLC. 表示か編集かは画面のモードに従う。||~v124I~||~v125R~
     ] (O-CPU8):コードページオプション=CPU8. 表示か編集かは画面のモードに従う。||~v124I~||~v125R~
#endif                                                                ||~v124R~
     = (Compare):添付のツールxfc,xdcを使用した2つのファイル,ディレクトリーの照合。
                 xfc:ファイル比較、xdc:ディレクトリー比較。           
                 diffなどを使用したい場合はiniファイルで変更する。    
                                                                      
                 .比較対象の2行に"="コマンド入力する。                
                 .改名欄に比較対象ファイルを指定しても良い。          
                 .改名欄にはツールxfc,xdcのオプションパラメータの入力も可能。
                  以下はxfcのパラメータの説明(コマンドプロンプトでxfcと
                  打てば表示される)                                   
                                                                      
                    XFC:V1.10(W): ファイル比較ユーティリティー        
                    形式  :                                           
                     XFC  filename1[/range1] filename2[/range2] [/options]
                       filename1,2:比較対象ファイル.                  
                       range1,2   :比較の範囲を行(テキスファイルの場合, 1 から開始)または
                                  :オフセット値(バイナリーファイルの場合, 0 から開始)を指定.
                       /Bn        :バイナリー比較を実行;n は比較中止の不一致バイト数.省略値=10.
                       /C[P|N|I][xx]:コメントの扱い。x:コメント開始文字列(#,!等。省略値は//)。
                                  :P:コメントのみの不一致行も出力する。'=C'で識別される。
                                  :N:コメントのみの相違は不一致リスト出力しない。
                                  :I:コメントのみ行、あるいは空白行は無視する。
                                  :以外 :コメントのみの行でなければコメントの不一致は無視。
                       /Mm-n      :行内の比較対象範囲を桁位置指定(テキストF比較でのみ有効).
                       /Ostyle    :出力様式、省略値は /Od(テキストF比較でのみ有効).
                                  :style=D:不一致行のみ,M:両ファイルのマージ,B:両ファイル別々に.
                       /Rnn       :1行内の一致する文字の割合がこの指定を越える時更新行とみなす
                                  :0-->100の数字を指定. 0 とすると不一致行はすべて削除または
                                  :挿入と表示(テキストF比較でのみ有効,省略値は/R50).
                       /T[x]      :出力リスト上でタブを置き換える文字。
                                  :省略値は "/T."(ピリオド)、"/T" でタブ文字をそのまま出力。
                       /W[P]      :語句比較(連続するスペース、タブを 1 文字として比較)
                                  :P:一致するとみなした行も出力する。'=W'で識別される,
                                  :  '=w' は /W と /C で一致するとした行.
                       /Na        :エラーのときアラームを鳴らさない。 
                       /Nm        :比較OKの時のMSGを出力しない。      
                       戻りコード :0:一致。 1:テキストファイル比較オプションでNULLを検知。
                                  :2:/CNオプションのときで不一致はコメントのみ。
                                  :3:不一致有。 >=4:その他のエラー。  
                    例   XFC  old.c  new.c                            
                         XFC  old.exe  new.exe  /B                    
                         XFC  old.txt/1-200  new.txt/11-  /M1-72  /Ob /W
                         XFC  old.bin/x2f0-300  new.bin/x2f1-3f1  /B20
                                                                      
                  以下はxdcのパラメータの説明(コマンドプロンプトでxdcと
                  打てば表示される)                                   
                                                                      
                     XDC:V2.10(W): ディレクトリー比較ユーティリティー 
                     形式  :  XDC dir1 dir2 [mask] [/Ppath] [/S] [/U[S][T]] [/1] [/2] [/ix] [/Wsz]
                              dir1/2:ディレクトリー名                 
                                     または 中間ワークファイル(/I フラグが必要)
                              mask  :メンバーを選択するためのワイルドカード指定.
                                     サブディレクトリー名には適用しません
                              /A    :長いファイル名を別名で比較(WIN/GCCバージョンのみ有効)
                              /F    :サイズが等しいときファイル内容比較も実施
                              /L[nn]:長いファイル名を使用。nn:ファイル名表示幅。省略値=20。
                              /Ppath:中間ワークファイル入力のときのサブディレクトリー指定。
                              /S    :サブディレクトリー内もサーチ     
                              /U[S][T][L|H]:不一致のみ出力            
                                     S:ファイルサイズ不一致のみリストする
                                     T:タイムスタンプ不一致のみリストする
                                     L/H:タイムスタンプが小さい(L)/大きい(H)ファイルのみリストする
                              /1    :dir1 のメンバーからみた比較のみ実行
                              /2    :dir2 のメンバーからみた比較のみ実行
                                    :省略値は /1 と /2 の両方を実行   
                              /ix   :中間ワークファイルの使用         
                                     x=o:中間ワークファイルにディレクトリーの内容を出力
                                     x=i:/Ioで出力した中間ワークファイルを介した比較
                                     x=n:dir1/2 は中間ワークファイルではない(省略値)
                              /Wsz  :ワークバッファサイズ(省略値は 1024000)
                              /Yx,/Nx:オン/オフ タイプのフラグ; x はつぎのフラグを指定
                                   c   :ファイル名の大文字小文字の区別
                                        省略値はどちらかがUNIXファイルシステムの場合区別あり
                     出力例:                                          
                     abc.d         (96-06-01 12:58 ASHRD  148250) <*= (96-06-01 12:59 -----  148250)
                     A~~~~~~~~~~~~  A~~~~~~~~~~~~~ A~~~~  A~~~~~  AAA  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     |              |              |      |       |||       Dir2 内での状況
                     ファイル名     タイムスタンプ 属性   サイズ  ||+--サイズ比較結果
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  |+---属性が一致の時は' '
                             Dir1 内での状況                      +----タイムスタンプ比較結果
                      --- XDC  End Of Help ---                        
                                                                      
                                                                      
                (例1).分割画面のそれぞれで両方のファイルを指定        
                      Enterを押した時カーソルのある画面のファイルが第1ファイルとなる。
                      同じDirのファイルを比較した場合はオプションパラメータのある方が
                      第1ファイル、パラメータ入力がなければ行番号の小さいほうが第1ファイル。
                                                                      
                    ===>                                                                  ===>HALF
                    _0063||||. c                  A---                 06-11-30 19:57        1,591
                    _0064||||. c0                 A---                 06-04-19 13:33          901
                    _0065||||. cclxe.bat          ----                 96-02-04 16:49           82
                    _0066||||. cid                ----                 00-10-22 15:03           78
                    _0067||||. cidspf             ----                 98-02-27 10:54           79
                    _0068||||. cob                ----                 02-03-18 10:28          656
            -->     =0069||||. cob0               A---                 07-05-03 12:33          738
                    _0070||||. cob00              ----                 01-09-18 15:48          656
                    _0071||||. cob1               A---                 06-07-26 10:15          984
                    _0072||||. cob10              ----                 01-09-18 15:35        1,148
                    _0073||||. cob10e             ----                 01-09-18 19:48        1,230
                    EDIT---|p:\ (ROOT DIR) -------------------------------------------------------
                    ===>                                                                  ===>HALF
                    _0038||. B112                 A---                 06-10-15 16:19          472
            -->     =0039||. BB1                  A---                 06-10-18 10:08          162
                    _0040||. BB2                  A---                 06-10-19 19:54          162
                    _0041||. BB3                  A---                 06-10-17 21:28        3,563
                                                                      
                                                                      
                (例2).改名欄に比較対象ファイルを指定                  
                      ファイル名には *\(同じDir), ^*\(第2画面のDir)が使える
                                                                      
                    ===>                                                                  ===>HALF
                    _0065||||. cclxe.bat          ----                 96-02-04 16:49           82
                    _0066||||. cid                ----                 00-10-22 15:03           78
                    _0067||||. cidspf             ----                 98-02-27 10:54           79
                    _0068||||. cob                ----                 02-03-18 10:28          656
            -->     =0069||||. cob0               A---  -c ^*\@2       07-05-03 12:33          738
                    _0070||||. cob00              ----                 01-09-18 15:48          656
                    _0071||||. cob1               A---                 06-07-26 10:15          984
                    _0072||||. cob10              ----                 01-09-18 15:35        1,148
                    _0073||||. cob10e             ----                 01-09-18 19:48        1,230
                    _0074||||. cob11              A---                 06-07-25 19:41        1,230
                    _0075||||. cob11e             ----                 01-07-29 17:40        1,078
                    EDIT---|p:\ (ROOT DIR) -------------------------------------------------------
                    ===>                                                                  ===>HALF
                    *****|********** TOP OF LIST *************************************************
                    _0001|: p:\                   x2000                     732,960K/  11,090,032K
                    _0002||. #1                   A---                 06-10-19 19:54           81
                    _0003||. $1                   A---                 06-10-19 19:54           81
                    _0004||+ $RECYCLE.BIN         -SH-                 06-10-26 22:40            0
                    _0005||. &1                   A---                 04-06-23 19:04            0
                    _0006||. 66                   A---                 06-10-15 16:19       80,792
                    _0007||. @                    A---                 06-12-01 10:39          288
                    _0008||. @2                   A---                 06-11-11 15:58        1,833
                                                                      
     / (slash) :読取専用ファイル/ディレクトリーあるいはそれらを含む
                ディレクトリーがあっても削除を強行する.
                Undelete_option の設定にしたがった削除戻しが可能です.
     - (expand):このサブディレクトリー内のメンバーのみ展開表示
                ワイルドカードによるファイルマスク(*.cなど)指定も可能 
                展開済みのディレクトリーも別のマスクでリセット可能．  
                (このサブディレクトリーのメンバーは新たにディレクトリー
                サ−チして設定される)                                 
                その際メンバーがマスクに合致する展開済みのサブディレク
                トリーの場合そのサブディレクトリーはそのメンバーもその
                まま残される．不一致のサブディレクトリーはそのメンバー
                とともに表示リストから削除される                      
                "メンバーが非表示" の状態はリセットされる             

                /ox指定(x=n/t/s)すると名前/時刻/サイズ順に表示。
                (SORtコマンド参照)

     > (expall):このサブディレクトリー以下のサブディレクトリーも含む  
                全メンバー展開表示                                    
                (全てリセットして新たにディレクトリーサーチする)      
                ワイルドカードによるファイルマスク(*.cなど)指定も可能 
     + (reduce):このサブディレクトリーのメンバーを表示リストから削除  
     : (path  ):このサブデレクトリーとその上のレベルは経路上のデレクト
                リー以外は表示リストから削除                          
                そのサブディレクトリーを展開していない場合は何も      ||~v124I~
                表示されなくなるのでその行に展開コマンド("-"か">")を入力してください。||~v124I~
     . (chdir ):この行から現行ドライブと現行デレクトリーを設定        
                ファイル行に指定するとこのファイルが含まれるデレクト
                リーに設定する
                                                                      ||~v124I~
            #ifdef W32                                                ||~v124I~
                UNC形式(\\server1\\dir1\...)全体を１つのドライブと見立てています。||~v124I~
                共有サーバーの共有フォルダーに "." 行コマンドを入力すると、||~v124I~
                現行ドライブが"\:"で現行ディレクトリーが共有フォルダーに設定されます。||~v124I~
                そうすると、 \:file で \\server1\dir1\file, \:\file で \\server1\file と扱われます。||~v124I~
            #endif                                                    ||~v124I~
                                                                      ||~v124I~
     % (appcmd) / $(appcmdAsync)                                      ||~127DR~
               :改名欄に入力した任意のコマンドをこの行のファイル/     ||~127DI~
                ディレクトリーをパラメータとして実行。
                コマンド文字列中で % をファイル名パラメータを置く位置を
                指定する為に使用できる。% が含まれてない場合は後に
                追加される。
                複数行コマンドは";"で区切ります。 ";" が パラメータの一部の場合は||~v124R~
                "\;" としてください。                                 ||~v124R~
                $(非同期実行)はLinuxでxeをwaitさせないために必要になります||~127DI~
                結果は "::#.cfso_n" (n:1,2,...)にリダイレクトされます ||~127DI~
                                                                      ||~v124R~
            例)                                                       ||~v124R~
               ファイルの特定の文字を置換するには                     ||~v124R~
               改名欄に sed s/fromstring/tostring/g % > wkd\%.new を入力すると||~v124R~
               置換された結果をwkd\thefile.new に出力します。         ||~v124R~
               結果は e ::cfso で確認します。(実行コマンドは e ::#.cmdで確認)||~v124R~
               尚 sed コマンドは unix のツールです。 Webで探してください||~v124R~
               (注)リダイレクト先に元のファイルを指定しないでください、ファイルが壊れます。||~v124R~
                                                                      ||~v124R~
               dir内のファイルにコマンドを適用するには添付のxdigツールが利用できます||~v124R~
               例えば                                                 ||~v124R~
               Windows版では xdig /L1 /Nh % *.c "//sed s/from/to/g \%\%fp\%\% > \%\%fp\%\%.new"、||~v124R~
               ( \%\%fp\%\% は シェルに%%fp%%でわたりxdigに %fp%でわたります。||~v124R~
                引用符は">"リダイレクトを xdigのパラメータとするためです。||~v124R~
                xdigの構文はxdigで出力されるヘルプを参照)             ||~v124R~
               Linux版では xdig /L1 /Nh % *.c "//sed s/from/to/g \%fp\% > \%fp\%.new"、||~v124R~
                                                                      ||~v124R~
              パラメータ入力が多い場合は専用のシェルを作成して入力量を||~v124R~
              へらすように工夫してください。                          ||~v124R~
                                                                      ||~v124R~
              EXE コマンドのリダイレクトパラメータを利用すれば        ||~v124R~
              パフォーマンスを犠牲にChangeコマンドの感覚でもう少し簡単に||~v124R~
              ディレクトリー内の全ファイルの文字列置換が出来ます。    ||~v124R~
                                                                      ||~v124R~
#if defined(WIN) || defined(XXE)
     ! (assoc ):拡張子が関連付けられたアプリケーションがあればそれに
                ファイルを渡す。例えば xxx.xls はExcelに渡される。
#endif

     # (execute):submit(ローカルファイル)或いはrsh(リモートファイル)で
                ファイルを実行。改名欄にパラメータを指定する。
     & (spawn)  :ファイルを非同期モード(終了待ちしない)で起動。
                改名欄にパラメータを指定する。
     ^ (send)   :分割画面の他方がユーティリティー画面3.12/3.14の時    
                 ファイル名を転送する。キー入力モードに従い           
                 ファイル名を挿入(未設定行に転送)または置換(反転行に転送)する。
                 ファイル名転送キー(Alt+i/r/d/Up/Down)も参照          

************************************************************************
(5).DOS コマンド
************************************************************************

[表５] DOS コマンド.
 .--------.--------.------------------------------------------------.
 |コマンド| 省略形 |説明                                            |
 .--------.--------.------------------------------------------------.
 |CHDir   | CD     |現行ディレクトリー設定                          |
 |PWD     |        |現行ディレクトリー表示                          |
 |MKDir   | MD     |ディレクトリーを作成                            |
 |RMDir   | RD     |ディレクトリーを削除                            |
 |ATTrib  |        |ファイルの属性変更                              |
 |CHMd    |        |ファイルパーミッション変更。ATTribと同じ。      |
 |REName  |        |ファイル/ディレクトリーの名前を変更             |
 |DELete  | DL     |ファイル/ディレクトリーを削除                   |
 |XDD     | DT     |ディレクトリー/ファイルを削除(dirdel/deltree)   |
 |XCOpy   | CP     |ファイル/ディレクトリーを複写                   |
 |COPy    |        |同上(表示/編集画面以外で有効)                   |
 |XMOve   | MV     |ファイル/ディレクトリーを移動                   |
 |MOVe    |        |同上(表示/編集画面以外で有効)                   |
 |XAP     |        |ファイルの最後にファイルを追加複写              |
 |APPend  |        |同上(表示/編集画面以外で有効)                   |
 |XPRint  | PR     |ファイル印刷,XPRINT.EXE 使用                    |
 |SET     | EXPort |環境変数の設定/表示                             |
 |GREp    |        |OS native grepコマンド実行、結果の表示          |
 |TSO     |        |TSO ファイルアクセス補助                        | ||~v124R~
 .--------+--------+------------------------------------------------.
#ifdef UNX
#else
 .--------.--------.------------------------------------------------.
 |d:      |        |省略時ドライブ設定,d はドライブID(a,B,cなど)    |
 |        |        | #ifdef W32                                     | ||~v124I~
 |        |        |    "\:" 共用フォルダー用擬似ドライブとして有効 | ||~v124I~
 |        |        | #endif                                         | ||~v124I~
 .--------+--------+------------------------------------------------.
 #ifdef WXEXXE
 .--------.--------.------------------------------------------------.
 |WXP     |        |ファイル印刷,WXE/XXEの印刷機能使用              |
 .--------+--------+------------------------------------------------.
 #endif
#endif
                                                                     
   -[表５]のコマンドはシェルを呼び出さずに実行出来るようにしたもので
    ネイティヴ の DOS,OS/2 のコマンドとは多少仕様が異なります.
    "DOS" やその省略形の＂>＂ 無しで実行して下さい．
    同名のネイティブコマンドを使用したい時は,"DOS" または ">" を付けて
    下さい.例えば "DEL abc" は 内部処理され ">DEL abc" は DOS,OS/2の
    コマンドとして処理されます．
   -[表５]にないコマンドを実行するには "DOS" または ">" を使用します
    但しコマンド結果表示画面では "DOS" 又は ">" を省略することができます
    がCOPy/MOVeコマンドは編集コマンドとみなされます,ファイル複写/移動
    には "DOS" 又は ">" を付けるか XCOpy/XMOve コマンドを使用して下さい.
   -コマンド文字列を指定しないと子シェル画面が表示されます
    この場合子シェルから抜けるには EXIT コマンドを入力します
#ifdef UNX
#else
    子シェルのコマンドプロンプトは INI ファイルの Sub_Shell_Init パラ
    メータで指定できます.
#endif
   -コマンド文字列がコマンド入力行に収まらないほど長い時はコマンド
    結果表示画面を開いてその最後の行にコマンドを入力して下さい
   -COPy/MOVe コマンドは (3).編集コマンド と重複しますが入力画面によって
    どちらの機能かが決まります.表示/編集画面/コマンド結果表示画面では
    画面へのCOPy/MOVeになりそれ以外の画面ではファイル/ディレクトリーの
    COPy/MOVeになります.紛らわしい時は ファイル/ディレクトリーには
    XCOpy/XMOveあるいはその省略形の CP/MVを使用するようにして下さい.
   -[表５]の下段のコマンドと表にないコマンドは子プロセスで実行され
    標準出力/標準エラー出力が ::so に出力されます.::so に出力があれば
    プロセス終了時にヘッダー行(1行目)にプロセスの終了コ−ドと ::so の
    最後の行が表示されます.::soへの出力がない場合は終了コ−ドがコマンド
    とともに表示されます.
    ::so の全体は "E ::so" または "B ::so" で見て下さい.
#ifdef UNX
    複数セッションを開いている場合で競合した場合は::so_,::so__,..が
    使用されます
#else
    複数セッションを開いている場合で競合した場合は::so!,::so!!,..が
    使用されます
#endif
   -コマンド結果編集画面の場合::soの内容は現編集画面の後に挿入複写
    されます.以前の表示内容はスクロールされ直前のコマンドの出力が
    画面の第一行に表示されます.
    コマンド結果編集画面で使用するファイルは ::so0 から ::so9 までで
    コマンド結果編集画面をオープンする度に(セッションを跨がっても)
    巡回使用されます.
   -コマンドによっては正常終了でも 0 以外の値を返すものもあります.
    その場合コマンド入力行に反転で残ったコマンドはクリアーして下さい．
   -コマンドにはリダイレクト指定もできます
   -ファイル名の経路指定に *\, **\, ^*\ が指定できます
      *\  : 複写/移動元を含むディレクトリー
      **\ : *\ の親ディレクトリー, **\**\ のような指定もできます  
      ^*\ : 画面分割しているとき他方の画面で開いているディレクトリー、
            開いているのがファイルならその経路名。
      ワイルドカード指定も可。宛先名のワイルドカードはファイル名にのみ
      作用し経路名には作用しません
  (注)ワイルドカードの取扱いがDOS6.3ではOS/2,Windowsと扱いが異なります
      x* は OS/2,Windowsでは x*.* と同じですが DOS6.3 では x* では
      例えば x1.c は対象となりません
   - Rename/Copy/Moveコマンドの宛先名のファイル名/ディレクトリー名に
     スペースが含まれる場合は宛先名全体を引用符で囲んで下さい.　
                                                                     
#ifdef UNX
   = ATTrib  mode name [name...]
        mode:ooo / oooo / oooxx の3形式。
             oooo の時 最初の o が setuid(4),setgid(2),sticky(1).
             残りが通常の 8進数のパーミッション。
             ooo 形式では setuid(4),setgid(2),sticky(1)は変更されません.
             oooxx の時 ooo は 8進数のパーミッション、xx にはuSgtを指定。
             ここで、u:setuid, S:setuid+setgid, g:setgid, t:stickey.
        オペランド指定のないときヘルプMsgを表示します。
        (注)MountしたFATのドライブのファイルは変更できないようです。
#else
   = ATTrib  [{+|-|/}]{a|s|h|r}...] name [name...]
        a:Archive s:System h:Hidden r:Read only                      
          + :属性を追加設定する
          - :属性をリセットする
          / :現在の属性とは無関係に設定する
             全属性のリセットは "/"のみを指定すればよい。
          例. +sh , -a+shr , /ar
        ワイルドカード指定の時サブディレクトリーは変更対象外         
        ディレクトリー指定の時メンバーでなくディレクトリーの属性を変更
        属性を省略すると現在の属性を表示                              
#endif
                                                                      
#ifdef UNX
   = CHDir   [pathname | *]
        オペランドを省略すると自分のホームを現行デレクトリーに設定。
        * で現表示ファイル/ディレクトリーから現行デレクトリーを設定。
#else
   = CHDir   [[d:]pathname | *]
        オペランドを省略すると現行ディレクトリーを表示                
        * で現表示ファイル/ディレクトリーから現行デレクトリー設定。
                                                                      ||~v124I~
  #ifdef W32                                                          ||~v124I~
        UNC形式(\\server\\sharefolder\...)全体を１つのドライブと見立てています。||~v124I~
        "\:" がドライブＩＤで 例えば "CD \\server\dir" とすると       ||~v124I~
        \:file で \\server\dir\file, \:\file で \\server\file と扱われます。||~v124I~
  #endif                                                              ||~v124I~
                                                                      ||~v124I~
#endif
        ワイルドカード指定もそれで唯一Dir名が決定すれば有効。
                                                                      
#ifdef UNX
   = CHMod   mode name [name...]

        ATTrib コマンドに同じ。
#else
#endif

   = DELete file-spec [file-spec...] [/s] [/h] [/d] [/a]              ||~126FR~

       (ファイルまたはディレクトリー中のファイルを削除、ディレクトリーの削除にはXDDを使用)||~126FR~
                                                                      ||~126FR~
       /s   システム属性ファイルも削除
       /h   隠しファイルも削除
       /d   サブディレクトリーも削除
       /a   指定のディレクトリー自身も削除

#ifdef UNX
            "." で始まるファイルを隠しファイルとします。
            自分はroot でなく、自分の W−パーミッションが無い時、
            システムファイルとします。
#endif
        システム属性・隠しファイル属性のファイルは 属性パラメータを
        指定しないとファイル無しのエラーとなる。
        (xdd コマンドではこの２つの属性は無視される。）
        複数ファイル指定でエラーの時それ迄のファイルは削除されている
        ディレクトリーメンバーは名前の順に削除される.
        読取専用ファイルがあると処理は中断する.
        ワイルドカード/ディレクトリーの時確認メッセージが出る,
        複数オペランド指定の時は削除は全ディレクトリーの確認をとって
        から実行される.

   = EXPort [{ var[=[value]] | < env-file }]

        SET コマンドに同じ。

   = GREp   [grep オプション]  { * | ファイル指定 }

        .パラメータ形式は各OSのNativeのgrepコマンドに同じ。
         表示/編集画面で画面内を探索するときはファイル名は
         "*" を指定する。
         ファイル名には *\(現表示Dir),^*\(画面分割の他方のDir)指定も可。
        .表示/編集画面では現画面内を探索し該当する行にフラグをセット、
         該当行は"Find *G"で探す。
         それ以外の画面では結果は::#goに保存される。
         コマンド結果表示画面ではこのファイルの内容が画面表示される。
       （注）.現画面検索では -n オプションで行番号が "nnn:"形式で
              表示されるgrepユーティリティーに限って利用できます。
                                                                      ||~v124R~
              現画面検索のこの機能は残されていますが、Findコマンドに  ||~v124R~
              -g オプションが追加されました。こちらを使用してください。||~v124R~
                                                                      ||~v124R~
             .Linuxでは経路にスペースを含むDirがありワイルドカード指定
              するときは、grep "a b.dir"/*.c のように指定してください。
              grep "a b.dir/*.c"はエラーになります。
         Windows10では find コマンドが使用できますがパラメータの形式が異なります。||~v129R~
           gre c:\Windows\System32\find.exe %1 %2 %3 %4               ||~v129R~
         などと定義し、=6 の画面で                                    ||~v129R~
           gre /N /I "search-word" c:\user\srctext                    ||~v129R~
         のように使用します。探索文字列は引用符で囲んでください。     ||~v129R~

#ifdef UNX

   = MKDir   -Mmode dir-name [dir-name...]

       -M   モード、ATTribコマンド参照。
#else

   = MKDir   dir-name [dir-name...]                                   

#endif
        複数ファイル指定でエラーの時それ迄のディレクトリーは作成されて
        いる
                                                                      
                                                                      
   = REName  oldname newname                                          
        ディレクトリーも指定可
        newnameは経路指定をしないこと(同一ディレクトリ内での改名)     
                                                                      
   = RMDir   dir-name [dir-name...]
        現ディレクトリーと空でないディレクトリーは削除できない
        複数ファイル指定でエラーの時それ迄のディレクトリーは削除されて
        いる

   = SET     var[=[value]]
     SET     < env-file

       - EXPort コマンドに同じ。環境変数を設定する。
         OS Nativeコマンドを実行するとき必要なPATH環境変数を設定
         するのに使用する。
       - コマンド結果出力画面でのオペランドなしは次のNativeコマンド
         (unixは "env"、 unix 以外は "set")を実行。
       - "set var"で現在値を表示、"set var="で値をリセット。
         "set < env-file"はファイルから設定するときに使用。
         env-fileのレコード形式は
            [set|export] var=[value] [comment]
       - ::xe.env(ワークDir内のxe.env)があればxe起動時に使用される。
         ::xe___.env(___:OSタイプ、例:xewin.env)があればそちらが優先。

   = {XAPpend|APPend} target [/t] [/:] [/b]

       /b   TSOファイルで無変換転送をします。

       - COPy  コマンドの /+ 指定に同じ。但し、/s オプションはなし。
       - source がディレクトリーで target が存在しない時 target file が
         作成され source ディレクトリー内全ファイル(サブディレクトリー
         は探索されません)が連結されます。
         target がディレクトリーの時 target 内の各ファイルを対象に
         Append が行われます。

   = {XCOpy|COPy} source target [/y[-]] [/r[-]] [/d] [/t] [/+] [/:]
                            [/s] [/s-] [/n] [/b]
                            [/L{-|[T]M-}                              ||~127AR~
                                                                      ||~v127R~
        source がディレクトリーで target が存在しない時 target        ||~v127R~
        ディレクトリーが作成されます。target が存在するとき           ||~v127R~
        /c オプションを指定すれば source が　target(存在していること) ||~v127R~
        内にディレクトリごとコピーされ、                              ||~v127R~
        /c オプションがなければメンバーコピーになります               ||~v127R~
                                                                      ||~v127R~
        ディレクトリーからファイルへのコピーは出来ません。            ||~v127R~
        (ネィティブのCOPYとは異なります, COPY コマンドは XCOPY と考えます)。||~v127R~
        target が読み取り専用のときコピー不可                         ||~v127R~
        隠しファイル,空サブディレクトリーも複写．                     ||~v127R~
        /r を指定しても target がシステム(S) あるいは隠しファイル(H)の||~v127R~
        時 source が 同じ属性値を持っていない場合はコピーできない。   ||~v127R~
        /+ でない時、元ファイルのタイムスタンプなどは複写されます。   ||~v127R~
#ifdef UNX                                                            ||~v127R~
        これを望まない場合あるいは コピーはできるが権限エラーと       ||~v127R~
        なる場合 -n オプションでファイル属性の複写を省略できます。    ||~v127R~
#endif                                                                ||~v127R~
                                                                      
       /y   同名ファイルがある時置換，指定しないと同一ファイル名があると
            複写は停止。
       /y-  同名ファイルがある時置換せず処理を続行。
       /r   /y に同じ
       /r-  /y- に同じ
       /b   TSOファイルで無変換転送をします。
       /c   複写元がDirかWildCardのとき、複写元Dir名と同名のDirが
            宛先Dir内になければ、複写元Dirを作成した後にMemberを複写する。
            sourceがDirでtargetがワイルドカードのときワイルドカードに従った改名で||~127MR~
            得られた宛先がなければ改名宛先を作成してsourceのメンバーを複写する(改名コピー)||~127MR~
       /d   (OS/2では無効)ソースの日付が新しいファイルのみ対象とする。
            リモートファイルのuploadでは時間設定できず、upload先の
　　　　　　TimeStampは現時刻になるので注意が必要。
       /+   同名ファイルがある時既存ファイルに連結複写                
       /:   ルートディレクトリー間複写の時に指定する事                
       /s   サブディレクトリーもコピー                                
       /s-  サブディレクトリーを除いてコピー(省略値)

#if defined(W32)||defined(UNX)
       /t   リモート<-->ローカル コピーの時 Textモードでコピーする。
            Textモードのとき LF(0x0a)<-->CRLF(0x0d0a)の変換が行われる。
#endif

#ifdef UNX
       /n   ファイル属性の複写をバイパス。
#endif
                                                                      
                                                                      ||~127AR~
#if defined(W32)||defined(UNX)                                        ||~127AR~
     /L{-}|[T]M-} :シンボリックリンクオプション(Windowsではジャンクション、マウントポイントも)||~127AR~
            /L-   :シンボリックリンクは複写しない                     ||~127AR~
                   (Vista以降, シンボリックリンクの作成は管理者権限が必要。||~127AR~
                   コマンドプロンプトを開く時、右クリック->"管理者として実行"を選ぶ)||~127AR~
            /LT   :リンク先を複写                                     ||~127AR~
            /LM-  :リンクエラー(相手無し、ループなど)メッセージを表示しない||~127AR~
            /LTM- :/LT かつ /LM-                                      ||~127AR~
#endif                                                                ||~127AR~
                                                                      ||~127AR~

   (注)-OS/2, Window9x, DOS の XCOPY コマンドに比べて
        (1).サブディレクトリーのタイムスタンプ/属性も複写
            トップディレクトーについては target が 無くて /s 指定の時に
            限ってタイムスタンプ/属性を複写する
          (但しDOS版,WIN版では ディレクトリーのタイムスタンプは複写
           されない)
        (2).隠しファイル/システムファイルは無条件複写．
       -COPy コマンドは表示/編集画面では (3).編集コマンドの COPy
        コマンドになります
                                                                      
   = XDD    dirname [dirname...] [ /r | /r- | /rl ] [/y]
                                                                      ||~126FR~
       (ディレクトリーの削除)                                         ||~126FR~

       r   Read only(読取専用をも強制削除)
       r-  読取専用以外を削除
       rl  List(削除はしない,読取専用ファイル/ディレクトリー数を表示)
       y   Yes(ディレクトリー削除の確認をとらない)

#ifdef UNX
            User/Group/Other の全てが W-ビットOffで
            User/Group/Other のどれかが R-ビットOnの時読取専用とします。
#endif

        ファイル名も指定可.
        ワイルドカード/ディレクトリーの時確認メッセージが出る,
        複数オペランド指定の時は削除は全ディレクトリーの確認をとって
        から実行される.

#ifdef UNX
#else
    (注) XDD は 単独の exe もパッケージングしています.
         exe の場合次の相違があります
         .rl は読取専用ファイル/ディレクトリー名をリスト表示する
         .削除ファイル/ディレクトリー名を個々に表示する
         .削除確認は個々のディレクトリーごとに行われる.
#endif

   = XMOve/MOVe source target [/s] [/t] [/y[-]] [/r[-]] [/b]
                              [/L{-|M-}                               ||~127AR~

       /s   サブディレクトリーもコピー
            source にワイルドカード指定の時にのみ意味がある,
            ディレクトリー名指定の時はサブディレクトリーも含む全体の
            移動になる.
       /y   同名ファイルがある時置換，指定しないと同一ファイル名があると
            複写は停止。
            同名のサブディレクトリーがある場合ディレクトリーのタイムスタンプは||~v128I~
            複写されません                                            ||~v128I~
       /y-  同名ファイルがある時置換せず処理続行。
       /r   /y に同じ
       /r-  /y- に同じ
       /b   TSOファイルで無変換転送をします。

#if defined(W32)||defined(UNX)
       /t   リモート<-->ローカル コピーの時 Textモードでコピーする。
            Textモードのとき LF(0x0a)<-->CRLF(0x0d0a)の変換が行われる。
 　    /L{-}|M-} :シンボリックリンクオプション(Windowsではジャンクション、マウントポイントも)||~127AR~
   　             ドライブ内移動の時は改名処理なので無視される、ドライブ間移動の時にのみ有効||~127AR~
           /L-   :シンボリックリンクは複写しない                      ||~127AR~
                  (Vista以降, シンボリックリンクの作成は管理者権限が必要。||~127AR~
                  コマンドプロンプトを開く時、右クリック->"管理者として実行"を選ぶ)||~127AR~
           /LM-  :リンクエラー(相手無し、ループなど)メッセージを表示しない||~127AR~
#endif

        target には移動先ディレクトリー名を指定する．同時に改名する時は
        新しい名前も付加する．

#ifdef UNX
#else
   (注)-OS/2 の MOVE コマンドに比べて ドライブ間移動をサポート.
        (XCOPY and DEL)
       -DOS の MOVE コマンドに比べて ファイルのドライブ間移動,
        ディレクトリーのディレクトリー間移動をサポート.
        (XCOPY and DEL)
#endif
       -MOVe コマンドは表示/編集画面では (3).編集コマンドの MOVe
        コマンドになります    

#ifdef UNX
   = XPRint {入力ファイル | * | ** | ***} [-tabon] [-XPRINTオプション -...]

       INI ファイルの Xprint_Command_LNX にコマンドを指定する必要が
       あります。このコマンドはそれを呼び出すだけです。

#else
   = XPRint {入力ファイル | * | ** | ***} [出力ファイル(PRN)] [-tabon]
              [/XPRINTオプション /...]
#endif                                                                ||~v124I~

       XPRINT.EXE が PATH 上になければなりません
       PATHの設定はSETコマンドを参照。
       XPRINTオプションはコマンドプロンプトで"xprint"と打鍵することで
       helpが見られます。詳細は xpj.txt を参照                        ||~v124R~

 #ifdef WXE

   = WXP WXEの印刷機能を起動。形式はXPRと同じ。
         但し /XPRINTオプションは使用できません。

 #endif

#endif

       表示/編集画面ではファイル名として次のものが使用できます。
        *   :現表示ファイルの印刷。
        **  :現表示ファイルの印刷。非表示行、行番号表示欄も画面と同じ,
             形式で印刷します。Hex表示もそのまま印刷。
             桁ゲージが表示されていればこれも印刷。
             HEX2段表示印刷をするときは **ないし***を指定します。
        *** :現表示画面を画面印刷の要領で1ページだけ印刷します。

        * と ** では 行ラベルによる範囲指定ができます。
        -tabon:画面印刷("XPR **"あるいは"XPR ***")では画面に表示した
               文字をそのままプリンターに送ります。
               タブ表示モードONの時、表示されているタブ(0x09)、DBCS空白文字に||~v128R~
               対する代替表示文字をそのままプリンターに送ると行が縮んで
               印刷されることが多いので、画面印刷のときでもTAB、DBCS空白文字は
               SBCSスペース出力する。従来通り画面表示文字を出力したいときは
               -tabonオプション指定する。
               尚、バイナリーファイルモードで開いた場合、画面印刷は制御文字を
               "."に置換して印刷。(画面印刷でない場合は/mdオプションを指定すると
               制御文字を"."で印刷します）。
        リモートファイルはローカルプリントされます。

#if defined(LNX) || defined(W32)

   = TSO  hostid { Quit | Logon [FS|FS3|FST] | Logoff | Cancel | {Reply|TSO|Action} ["text..."]||~v124R~
                          | { Alloc|Free|SPF } DataSet [alloc/SPF options] }

        quit  :xe3270 プロセスの終了。終了しない場合は xkp ユーティリティで
               kill してください。
        Logon :TSOログオン。Edit/Browseコマンドで自動ログオンするので
               通常は必要ないが、=6画面をTSOモードにする時に使用します。
               FS :MVS TSO コマンドの応答を全画面モードで表示します。 ||~v124R~
               FS3:3270キーボードモード全画面表示。                   ||~v124R~
               FST:TSO キーボードモード全画面表示。                   ||~v124R~
        Logoff:TSOログオフ,Disconnect,s3270プロセスも終了します。
               TSO-ユーザーＩＤ、3270セッションを開放するときに使用します。
               =6画面で使用すると、同時にローカルコマンドモードになります。
        Cancel:3270 emulator からの応答を待ってハング状態になったり、
               Timeoutで応答は帰ったが応答待ちでなおも使用できないスレッドを
               S3270プロセスをkillすることで開放します。
               またスレッドは10あり、宛先システム＋ユーザーＩＤが１０を
               超えた時にスレッドを開放するためにも使用します。
        Reply :"REENTER-"などが返された時に画面入力をする時に使用します。
               但し、DSName 形式エラーの場合は内部的に自動応答するので
               応答は不要です。                                       ||~v124R~
               注）文字列には最後に\nをつけないとEnterキーを押したことにはなりません。||~v124R~
                   その他 s3270が \t (TAB), \r (改行), \f (画面クリアー)||~v124R~
                   をサポートしています。                             ||~v124R~
        TSO   :任意のTSO コマンドを入力します。(コマンドシェルのコマンド入力行に飛んで文字列を入力する)||~v124R~
               TSO SUBMIT コマンドは xeのSUBコマンドがサポートしています。||~v124R~
               例）                                                   ||~v124R~
                 TSO h01: TSO "call 'HERC01.TEST.CLIST(FOO)'"         ||~v124R~
        Action:3270コマンドを入力する時に使用します。                 ||~v124R~
               例)                                                    ||~v124R~
                 PA1キー: Action "PA 1",  Enterキー: Action "Enter"   ||~v124R~
        Alloc :TSO ALLOCATE コマンドでDataSetをAllocate。
               DataSetはFreeするまで排他制御されます。
               TSOの省略時オプションは OLD です。
               NEWとともにCYLなどを使用できますがTurnkeyでは
               TSOのHELPコマンドを見る限りLRECLは使用できないようです。
        Free  :TSO ALLOCATE コマンドでDataSetをアロケーションを解除。
               DataSetの排他制御が解除されます。
        SPF   :SPF 情報を更新します。
               DataSetパラメータは(ワイルドカード指定可)メンバー名指定が必要です。
               option の形式は以下の通りです。(キーワードを間違えるとヘルプがでます)

        	   [V=xx] [M=xx] [DT0=yymmdd] [DTM=[yymmdd[hhtmss]]] [LC] [LC0[=xx]] [UID[=userid]]||~v124R~

               V  :バージョン番号(<100)
               M  :更新番号(<100)
               DT0:作成日(西暦)
               DTM:変更日(西暦)/時間
               LC :現在行数。メンバーをReadしてカウントします
               LC0:作成時行数。=xxを指定しないと現在行数を設定します
               UID:ユーザーID。=useridを指定しないとhostidパラメータの設定が使用されます。
               例)                                                    ||~v124R~
                 TSO h01: spf 'herc01.jcl.asm(memb1)' "DTM=081231101230 lc"||~v124R~

       - TSO アクセスの障害対応を補助します。                         ||~v124R~
       - xe3270プロセスのシェル窓からも同様のコマンドが入力できます。
       - コマンド出力画面(=6画面)を開いて TSO logonするとlistalcなどのTSOコマンドを
         そのまま入力できます。                                       ||~v124R~
           =6.h01                                                     ||~v124R~
         のようにしてもＯＫです。                                     ||~v124R~
         TSO logoffでローカルコマンドモードに戻ります。               ||~v124R~
         xeのコマンドと同名(頭３桁)のMVS TSOコマンドがある場合はDOSコマンドを
         使用します。                                                 ||~v124R~
         例えば                                                       ||~v124R~
           >LISTA\n                                                   ||~v124R~
             最後の \n は Enter キー入力の意味です                        ||~v124R~||~v126I~
             最後に \n を付けるのを忘れないようにすること、           ||~v126R~
             忘れても次のコマンドで追加できます                       ||~v126R~
             例)  TSOモードの =6 画面で                               ||~v126R~
                  ===>LISTDS\N                                        ||~v126R~
                       --->ENTER DATA SET NAME -                      ||~v126R~
                  ===>'SAMP.PDS'                                      ||~v126R~
                       --->応答なし                                   ||~v126R~
                  ===>\N                                              ||~v126R~
                       --->(D/S 情報表示)                             ||~v126R~
                           READY                                      ||~v126R~
         TSOモードのときにローカルコマンドを実行したい場合はローカルコマンドの前に
         ":"を付けてください。例えば ":grep ABC *.c"。
#endif

************************************************************************
(6).INI ファイル                                                      
************************************************************************
   - ワークディレクトリーにxe.iniをおいてください。(::xe.ini)         ||~v29tR~
   - 省略値のひな型は "xe -i" で上がった後にINI コマンドで再出力できます．||~v29tR~
     INI ファイルを修正しておかしくなった場合にそうしてください       ||~v29tR~
     "#" はコメントの開始です,行削除の代わりに使って下さい，

   - [FUNCTION] セクション
      .指定例

       (機能名)              (キー名)    (コマンド名)  (コマンド別名)
        Swap              =   F9        = SWA        =  W

      .機能に機能キー/コマンド名を重複のないように割り当てます.
       但し罫線文字は日/英モードで異なりますので同じキーを割り当ても
       構いません.
       また使用する画面のタイプに重複のない場合は 2 機能までは 1 キーに
       重複割り当てできます.
       例えば F10 は 編集画面では右シフト、DirList画面ではコマンド複写の
       機能が割り当てられています。
      .使用できるキーと指定方法は INI ファイルの中を参照して下さい.
       Shift+Esc など OS/2,Windows が インターセプトしてしまうキーもある
       のでそれらとの重複に注意して下さい．
      .Alt+文字キーで文字キーが (-) (:)などを使う時はキーボードの型の
       相違に注意して下さい
      .機能への割当て文を,単に行全体をコメント化するだけでは省略値の
       割当が残ります, "=" の後に # を挿入して割当なしを明示指定して
       下さい.重複エラーが出た場合は省略値との重複もチェックしてください
       (*) の付いたキーは固定使用していますので変更出来ません
       またコマンドオペランドを必要とする機能は原則コマンド名設定のみで
       キーは割り当てできません.
      .Alt+, Ctrl+, Shift+ALt+, Shift+Ctrl+ の組み合わせが使用できます||~v121R~
       Shift+ALt+, Shift+Ctrl+ は Fn, Ins, Del, 方向キーとのみ組み合わせが使用できます||~v121R~
      .Linux の場合 ショートカット キーとして設定されている場合もあるので||~v121R~
       その場合 これらのキーを利用する場合は Linux の設定の変更が必要になります||~v121R~
       Shiftキー無し(A+Fn,C+Fn)がショートカットキー設定されている場合 ||~v121R~
       そちらもソートカットキーを無効にする必要があるかもしれません   ||~v121R~
      .=0.2 画面で割り当てを変更し場合保存時に変更が保存(xe!save!)され次回から有効になりますが||~v121R~
       INI ファイルは変更されません                                   ||~v121R~
       INI ファイルを使用している場合(::xe.ini ファイルが存在する場合)||~v121R~
       INI ファイルの方が優先されます(INIファイルのその機能の割り当てキーの||~v121R~
       数だけxe!save!の保存を上書きします）                           ||~v121R~
       INI ファイルを更新するにはリスタート後に INI コマンド を使用してファイルを更新してください||~v121R~

   - [OTHER] セクション
       以下の各種のオプションを設定します，幾つかは exe パラメータで
       オーバーライドできます.(exe パラメータは "xe  /?" で表示されます)
       形式は    キーワード = 値.                                     
       あるいは  キーワード = 桁数=CID=タイプ.  (CIDリストの場合）    
       下記では値に省略値を記入してありますが INIコマンドによるの出力 
       のINIファイルではコメントID(#)の後に省略値が括弧内に出力されて 
       います.                                                        

       .Command_Stack      =20                                        
          リトリーブコマンド用のコマンドスタックの深さ                
                                                                      
       .Init_Heap_Block    =5                                         
          初期化時にアロケートするメモリーサイズを64KBのブロック数で指定
          する（DEBUG用,0でもよい) (OS/2版のみ有効)                   
                                                                      
       .Confirm_CANCEL     =1                                         
          更新ファイルを CANCEL する時,確認を取る(1)か否(0)か.        
                                                                      
       .Confirm_SAVE       =1                                         
          既存ファイルを SAVE で置換する時,確認を取る(1)か否(0)か.    
                                                                      
       .Confirm_UNDO       =1                                         
          UNDO する時,確認を取る(1)か否(0)か.                         
                                                                      
       .Dump_When_Err      =1                                         
          内部エラー検知の時 DEBUG 用ダンプを取る(1)か否(0)か         
          (OS/2版,WIN版ではABENDさせる)
                                                                      
       .R-Ctl_ENTER        =0                                         
          右 Ctrl キーを実行キーとして使用する(1)か否(0)か,           
          実行キーとするとき [FUNCTION]で特に割当てないとEnterキーは  
          改行のみの機能となります.                                   
          (左 Ctrl キーは単独の割り当てはできません)                  
          OPT RCTLコマンドでONにした場合は再起動の際R-Ctl_ENTER=0指定は
          無視されます。                                              
                                                                      
       .R-Ctl_NewLine      =0                                         
          右 Ctrl キーを改行キーとして使用する(1)か否(0)か,           
          Enterキーは実行キーのままです。                             
          R-Ctlを割り当てる設定の時にのみ有効となる。                 
          R-Ctlを割り当てる設定はiniファイルでR-Ctl_ENTER=1とするか、 
          -Yrコマンドラインオプション、"OPT RCTL ON" コマンド、wxe/gxeでは
          setupダイアログのR-Ctrlチェックボックス設定でONとなる。     
                                                                      
          注)R-Ctrlに対するTypematic(押し続けで連続イベント発生)機能は
             OS/2,gxeでは機能しない。Linux-Console版ではR-ctl割り当ては使用できない。
                                                                      
       .InsertLine_Indent  =1                                         
          行挿入の時カーソルを前の行の最初の文字の下に位置づける(1)か 
          否(0)か                                                     
                                                                      
       .Change_ID_Type_C   =68="//"= C,H,CPP,HPP
        Change_ID_Type_ASM =68=";;"= ASM
        Change_ID_Type_DOC =71="||"= DOC,ME,TXT                       ||~v124R~
        Change_ID_Type_4 --->Change_ID_Type_9                         
          変更タグ(CID)を設定する桁位置, 2 バイト前置文字, 拡張子"の
          リスト.2 バイトまでの後置文字を指定できますがそのときは
          前置文字の位置に"//,??"のように前置文字と後置文字を","で
          連結して指定します.
          Change_ID_Type_4 から Change_ID_Type_9 を使用する時も左辺の
          キ−ワ−ドは変更してはいけない
          桁位置=0 の行は無視されます
                                                                      
       .Fixed_CID_prefix   ="CID:"                                    
          固定形式の変更タグ(CID)を使用する場合の指定形式(最大 15バイト)
          ここに指定した文字列がファイルの１行目にある時この文字列の  
          後に続く文字列がこのファイルの固定形式の変更タグとなる．    
          (")は囲み文字なのでスペースなどを含める場合にのみ必要です   
          (0)-(E)"CID (Change ID:変更タグ)."を参照
                                                                      
       .Initial_Ins_Mode   =0                                         
          立ち上げ時のモード, 1:INS(挿入) 0:REP(置換)                 
                                                                      
       .Box_Ins_Cursor     =1
          箱型(半角文字の下半分)カーソルを挿入モードに使う(1)か       
          置換モードに使う(0)か                                       
                                                                      
#ifdef UNX
#else
       .EOF(^Z)_Write      =3                                         
          ファイル保存出力の時 0x1A をEOF文字として書くか否か         
          0:書かない                                                  
          1:必ず書く                                                  
          2:入力ファイルと同じにする(新規ファイルにも書く)            
          3:入力ファイルと同じにする(新規ファイルには書かない)        
          (注)ファイルの部分編集で終端行指定ありのときはその行以降は
              単純コピーなので 0/1 指定の場合でも入力ファイルと同じに
              なります
#endif
                                                                      
       .ASCII_only         =0                                         
          Ctl+文字キーに機能の割り当てをしなかった場合で,発生する制御 
          文字コード（0x00-0x1f）を文字としてを受付ける(0)か否か(1).
                                                                      
       .Beep               =1
          Beepがうるさい時は 0 を指定する

#ifdef UTF8SUPP                                                       ||~v125R~
                                                                      ||~v124R~
       .UnicodeTbl        =filename                                   ||~v124R~
          コードポイントの印刷可非/DBCSの定義を変更したい時に使用するファイル名を与える。||~v124R~
          ファイルの記述方法はUTF8サポートを参照。                    ||~v124R~
       .UnicodeTbl_Console=filename                                   ||~v125R~
          コンソール版用                                              ||~v125R~
#endif                                                                ||~v124R~
       .EBCDIC 変換定義ファイル名                                     ||~v125R~
                                                                      ||~v125R~
          EBCDIC_cfg        ="" #("::xeebc.map")# EBCDIC translation config filename||~v125R~
                                                                      ||~v124R~
       .(J)Valid_Ctrl_char = 00000000000000000000000000000000
        (E)Valid_Ctrl_char = 00000000000000000000000000000000
                         x   0123456789ABCDEF0123456789ABCDEF
                     ctrl+   2abcdefghijklmnopqrstuvwxyz[\]6-
          (J)は日本語モード, (E)は英語モード用                        
          Ctl+文字キー(0x00-0x1f)を受付ける時受付けるキーの指定．
          1桁目が 0x00 に対応し最後が 0x1f に対応します.対応するバイトを
          0 にするとその文字を受付け 1 にすると入力不可とします.      
          機能キー割り当てをした場合は文字入力にはつかえません.
      (注)0x1a は WindowsでテキストモードのAPIではEOF扱いされます。   ||~v125I~
          例えば type コマンドは0x1aがあるとそこでファイルが切れます。||~v125I~
          xe は バイナリーモードのAPIを使うので問題はありませんが     ||~v125I~
          xe の編集結果を他のプログラムに渡す場合は0x1aを禁止文字にしたほうが良いかもしれません。||~v125I~

#ifdef UNX
       .(J)Disp_trans_tbl = 00 = 1111111111111111
        (J)Disp_trans_tbl = 10 = 1111111111111111
        (J)Disp_trans_tbl = 70 = 0000000000000001
        (J)Disp_trans_tbl = 80 = 1000000000000000
        (J)Disp_trans_tbl = A0 = 1000000000000000
        (J)Disp_trans_tbl = F0 = 0000000000000111

       .(E)Disp_trans_tbl = 00 = 1000000011101111
        (E)Disp_trans_tbl = 10 = 0000000000010000
        (E)Disp_trans_tbl = 70 = 0000000000000001
        (E)Disp_trans_tbl = 90 = 0000000000010000
        (E)Disp_trans_tbl = F0 = 0000000000000001
#else
       .(J)Disp_trans_tbl = 00 = 1000000010101100
        (J)Disp_trans_tbl = 10 = 0101000010000000
        (J)Disp_trans_tbl = 70 = 0000000000000001
        (J)Disp_trans_tbl = 80 = 1000000000000000
        (J)Disp_trans_tbl = A0 = 1000000000000000
        (J)Disp_trans_tbl = F0 = 0000000000000111

        (E)Disp_trans_tbl = 00 = 1000000000000000
        (E)Disp_trans_tbl = F0 = 0000000000000001
#endif
                                                                      ||~v124I~
#if defined(WXE)||defined(XXE)                                        ||~v124I~
    #ifdef WXE                                                        ||~v125R~
        (J)Disp_tr_tb_wxe = 00 = 1000000000001100                     ||~v124I~||~v125R~
        (J)Disp_tr_tb_wxe = 10 = 0000000000001000                     ||~v124I~||~v125R~
    #else                                                             ||~v125R~
        (J)Disp_tr_tb_wxe = 00 = 1000000000000000                     ||~v125R~
        (J)Disp_tr_tb_wxe = 10 = 0000000000000000                     ||~v125R~
    #endif                                                            ||~v125R~
        (J)Disp_tr_tb_wxe = 70 = 0000000000000001                     ||~v124I~
        (J)Disp_tr_tb_wxe = 80 = 1000000000000000                     ||~v124I~
        (J)Disp_tr_tb_wxe = A0 = 1000000000000000                     ||~v124I~
        (J)Disp_tr_tb_wxe = F0 = 0000000000000111                     ||~v124I~
                                                                      ||~v124I~
        (E)Disp_tr_tb_wxe = 00 = 1000000000000000                     ||~v124I~
        (E)Disp_tr_tb_wxe = F0 = 0000000000000001                     ||~v124I~
#endif                                                                ||~v124I~

          (J)は日本語モード, (E)は英語モード用
          非表示文字を指定する.
          ここで非表示文字とした文字はつぎのは Disp_trans_char で指定の
          文字に変換され表示される.
          wxe/gxe 用は xxx_wxe のオプションを指定してください。       ||~v124I~

          形式:  x0 = yyyyyyyyyyyyyyyy
          x は 0 から F まで,
          y は 0 か 1(非表示文字) で 1行に 16 バイトずつ指定する
          1 行 全て 0 の行は指定不要.
          但し省略値を採らない場合は少なくとも 1 行は指定する.
          Windowsコンソール版の場合罫線文字などの文字サイズがコマンドプロンプトの||~v128R~
          フォント設定によって２桁表示になったり１桁表示になったりします||~v128R~
          適切なフォントがなければ、Disp_trans_tblで表示不能に設定か Disp_trans_char で FF以外を||~v128R~
          指定してください                                            ||~v128R~
          Tab_disp_charについてもおなじことがいえます                 ||~v128R~

#ifdef AIX    //*** AIX ***
       .(J)Disp_trans_char =2E
        (E)Disp_trans_char =2E
#else
       .(J)Disp_trans_char=FF #(FF)# display char for Japanese mode un-displayable char. (FF means U-25aa)||~v121R~
        (E)Disp_trans_char=FF #(FF)# display char for English  mode un-displayable char. (FF means U-25aa)||~v121R~
#endif
          (J)は日本語モード, (E)は英語モード用
          前のDisp_trans_tblで非表示文字とされた文字を表示するのに
          使用する文字をヘキサ指定する.
          0x30-->0x39 は指定不可
          FF を指定すると省略値を使用                                 ||~v128R~

#ifdef AIX
       .(J)Tab_disp_char   =5E2C    // ^,
        (E)Tab_disp_char   =5E2C    // ^,
#else
       .(J)Tab_disp_char  =FFFF #(FFFF)# Tab display char for Japanese mode. (FFFF means U-21be & U-21c0)||~v128R~
        (E)Tab_disp_char  =FFFF #(FFFF)# Tab display char for English  mode. (FFFF means U-21be & U-21c0)||~v128R~
#endif
          (J)は日本語モード, (E)は英語モード用
          タブ(0x09) とその後のタブによる間隙を表示する文字をヘキサ
          指定する.0x30-->0x39 は指定不可
          TAB コマンド でも変更できます(INIファイルは変更せず、TABコマンドを優先)||~v121R~
#ifdef AIX
          省略値は  タブ文字    :'^'
                    タブスキップ:','
#else
          省略値は  タブ文字    :上矢印文字:(英)0x18,(日)0x1c
                    タブスキップ:右矢印文字:(英)0x1a,(日)0x1e
#endif

       .DBCSspace_dispchar=FF #(FF)# DBCS space display char. (FF means U-2591)||~v128R~

          U-2591 は "TAB" コマンドで変更できます                      ||~v128R~
#ifdef LNX
          日本語スペース(EUC:0xa1a1)を表示する文字をヘキサ指定する.   ||~v128R~
#else
          日本語スペース(SJIS:0x8140)を表示する文字をヘキサ指定する.
#endif
          0x30-->0x39 は指定不可

#ifdef UNX
#else
       .Keyboard_Speed     =30                                        
        Keyboard_Delay     =250                                       
        Kbd_Speed_at_exit  =30                                        
        Kbd_Delay_at_exit  =250                                       
          エディターに入った時と出る時のキーボード タイプ速度         
          Speed:同じキーを押し続けた時に受付けられる 1 秒当たりの文字数
                0 --> 31 の値を指定してください
          Delay:同じキーを押し続けた時に 2 文字目受付け迄の遅延時間   
                250,500,750,1000 の４段階で指定してください
          (Speed,Delayの両方が 0 のとき設定はされません)
#endif

       .DirList_Indent     =1                                         
          ディレクトリーリストでファイル名を表示する方法              
          左端を揃える(0) か或は階層レベルで桁ずらしをするか(1)       

#ifdef UNX
	#ifdef LNX
       .XPrint_Command     ="xprint.sh"
    #else
       .XPrint_Command     ="xprint"
    #endif
#else
       .XPrint_Command     ="XPRINT.EXE"
#endif
        XPrint_Command_DOS =""
        XPrint_Command_GCC =""
        XPrint_Command_WIN =""
        XPrint_Command_OS2 =""
#ifdef UNX
        XPrint_Command_LNX =""
#endif
          XPRint コマンドで使用するコマンド文字列を指定する
          文字列内に %1-->%9 の指定(PRIntコマンドのオペランドの挿入位置
          の指定）が可能．% が一つも指定されていない時はこのコマンド文字
          列とXPRintコマンドのオペランドを単純連結してコマンドを発行する
          OSによって異なるコマンドを使用したい場合はそのバージョンの
　　　　　サフィクス付きのパラメータを追加で指定する.
       (注)このオプションは次のPrint_Commandオプションより前に指定すること.

       .Print_Command      =""
        Print_Command_DOS  =""
        Print_Command_GCC  =""
        Print_Command_WIN  =""
        Print_Command_OS2  =""
#ifdef UNX
        Print_Command_LNX  =""
#endif
          ディレクトリー表示画面のP 行コマンドで使用するコマンド文字列
          を指定する.文字列内に %1 の指定(ファイル名挿入位置の指定が可能)．
          省略値(""指定の時)は "XPRINT.EXE" を使用
          "" か XPrint_Command と同じか XPRINT 文字列の指定がある時
          P 行コマンドは XPRINT の間接ファイル名指定機能により昇順印刷する.
          そうでない場合P 行コマンドはディレクトリーリストの逆順に指定の
          コマンドを呼び出す.
          OSによって異なるコマンドを使用したい場合はそのバージョンの
          サフィクス付きのパラメータを追加で指定する.
       (注)このオプションは前のXPrint_Commandオプションより後に指定すること.
                                                                      
#ifdef UNX
#else
       .Sub_Shell_Init     ="prompt $p$l"
          DOS コマンドで子シェルを開始する時,子シェルで最初に実行する
          コマンドを指定する.
          省略値のコマンドは親シェルと区別するためプロンプと文字を
          変更するものです($p はドライブと経路表示,$l は"<"表示)
      (注)WindowsNTでDOSバージョンを実行する場合はこの指定は無視されます
#endif
                                                                      
#ifdef LNX                                                            
       .LNX_Subshell_xe   =""                                         
         xe curses版が ">" コマンドで使用する子プロセスのシェルPGM名. 
         省略値は"dash"があれば"bash",でなければ"sh".                 
         (/bin/shが何にslinkしているかCHKして見て下さい。             
          RH9,FC5ではbash,Kubuntu6,Ubuntu7ではdashでした)             
       .LNX_ShellTerm_gxe =""                                         
         DOS（省略形：">"）コマンドあるいはメニューの File->Term で開く子窓のTerminalプログラムを指定する。||~v129R~
         省略値は次の順にインストール状況を調べ、なければ xterm とする。||~v129R~
         オプションを指定したい場合もここで設定する。例えば "gnome-terminal --maximize".||~v129R~
         	"gnome-terminal",                                         ||~v129R~
         	"konsole -ls",                                            ||~v129R~
         	"xfce4-terminal"                                          ||~v129R~
       .LNX_CmdTerm_gxe   =""                                         
         =6 画面以外で コマンド文字列指定のDOSコマンド(e.g. ">ps-ef")で開くコマンド毎の||~v129R~
         子窓のTerminalプログラムを指定する。                         ||~v129R~
         省略値は                                                     ||~v129R~
         	"gnome-terminal -e",                                      ||~v129R~
         	"konsole -e",                                             ||~v129R~
         	"xfce4-terminal -e"                                       ||~v129R~
#endif                                                                
                                                                      
       .ユーティリティーツール名                                      
          ディレクトリーリスト行コマンド "=","g"あるいは              
          ユーテリティー画面3.12/3.14で使用するツール名を指定する。   
                                                                      
          CompareFile_Cmd   ="xfc"   :ファイル比較ツール              
          CompareDir_Cmd    ="xdc"   :ディレクトリー比較ツール        
          Search_Cmcd       ="grep"  :文字列探索ツール                
                                                                      
       .Bounds                                                        
          ディレクトリー、拡張子による省略値境界値を設定できます      
          ファイル名の指定も有効です。                                
        Bounds            = .cob     =  7  72    # "."で始まると拡張子による省略値
        Bounds            = "g:\src\xe" = 10 80  # ファイル、ディレクトリー名はフルパス指定する

       .大きなファイルを開くとき確認をとる                            ||~v127R~
        (省略値は 32ビット OS で 100MB, 64ビット OS で 1GB)           ||~v127R~
			LargeFileSize(MB) =1    #(100)# Size of large file to issue warning when open, 0 means no limit. ||vazd||~v127R~
                                                                      ||~v127R~
************************************************************************
(7)コマンドライン パラメータ
************************************************************************

#ifdef UNX
 形式
     XE [ 編集ファイル名 | "*" ] [-オプション -...]

        編集ファイル名:指定すると直接 編集画面を呼び出す
        "*" で前回最後に閉じたファイル/ディレクトリーをオープンする
        ( '"'はシェルの展開を避けるために必要。）
        (注) ファイル名に 0,1,2 又は 6 を指定するとメニューのオプション
             とみなします.これらのファイル名のファイルを開く時は -B 又は
             -E オプションを指定するかあるいは一旦 編集ファイル名指定なし
             でメニューを表示した後 "E 0" などと入力して下さい.
        オプション    :大文字小文字の区別なし,順不同,重複は最後が有効

 オプション
    -b           :表示モードでファイルを開く
    -c           :コードページ(Windows)またはCharset(Linux)           ||~v124I~
                  国際化サポートを参照                                ||~v124I~
    -e           :編集モードでファイルを開く(省略値)
                  ファイル名が "0","1","2"や"6"などメニューオプションと
                  同じ場合に使用するとよい.
                  ファイル名が "=" で始まる時もどちらか指定する。     ||~v124R~
    /fx[t][:hosts]:x=0:FTP 不使用, x=1:FTP 使用(log無し)
                   x=w:ftplog 出力, x=a:追加モード ftplog
                  :t:一時ファイルを削除しないDebug用オプション
                  :hosts: xe 用のホストファイル名。
            省略値は /f1:xehosts(xehostsはワークディレクトリー)
    -h,-?        :ヘルプ
    /hnn         :画面高(行数)
                 TeraTermの設定で画面サイズ!=画面バッファサイズと設定した
                 時、スクロルサイズを画面サイズにする時に使用する。
    -i[fname]    :使用する iniファイル名.
                  使用しない時は単に -I とする,このとき内部定義の
                  省略値が使用されます.
                  無指定の時は xe.ini が使用される
    -Ln          :ファイルを開いたあとすぐ n行目にジャンプします。
    -r           :現行ディレクトリーの設定
                  CDコマンドで以前に設定した現行ディレクトリーから
                  現行ディレクトリーを,更にはそのドライブを省略時ドライブ
                  として設定する。
    -tn          :タブ桁位置間隔,省略値 n=4
                                                                      ||~v124R~
#ifdef UTF8SUPP                                                       ||~v125R~
                                                                      ||~v125R~
    -U{F|N}{8|L}                                                      ||~v125R~
              UF  : ファイルテキストのエンコーディングの省略値の指定。||~v125R~
              UN  : ファイル名のエンコーディング解釈の省略値指定。    ||~v125R~
                                                                      ||~v125R~
             -省略値はUTF コマンドでも設定できます、個々での指定がUTFコマンドより優先します。||~v125R~
             -ファイルテキストのエンコーディグについて。              ||~v125R~
              File/Dir を開く時のCPU8/CPLCを指定するとプロファイルに保存されます||~v125R~
              優先順位は コマンドオプション->プロファイル->コマンドラインオプション->UTF8コマンド設定||~v125R~
              その後がLinuxの場合LANG環境変数に依存します。           ||~v125R~
                                                                      ||~v125R~
#endif                                                                ||~v124R~
    -wxxxx       :ワークディレクトリ−名,export xe=xxxx より優先。
    -y:x と -n:x :トグルスイッチ 設定(-y)と設定解除(-n)
                  (省略時の値は括弧内に表示)
        x=a (-Na):制御文字を受付ける(-na)かASCII文字のみ(-ya)か
                  -ya のとき iniファイルの Valid_Ctrl_char の指定は
                  無効になる
        x=c (-yc):修正行に変更タグを付与するか否か
        x=d (-yd):内部エラー検知の時ダンプをとる/とらない
        x=m (-Ym):-Nmを指定するとA+u でUTF8入力モード(コマンド行が =u=> を表示)のとき||~v129R~
                  (UTF8エンコーディングでない) ロケールコードファイルに||~v129R~
                  UTF8入力をロケールコードマルチバイトに変換せずにUTF8コードをセットする||~v129R~
        x=t (-nt):タブ文字を表示する/しない
    -/           :パラメータの終わり(これ以降は無視されます)
                  ヒストリー機能でコマンドを再表示した場合で余分な
                  パラメータをカットする場合に使用するとよい。

    これ以外にもEDIt/BROwseコマンドのパラメータを指定することができます

  入力例
        xe config.sys -t8 -yrt -nc
  (注)
     コマンドラインパラメータでのオプション変更はこのセッションに限り
　   有効です.オプション保存ファイル(xe_save_)への保存等は行われません.
#else
 形式
     XE [ 編集ファイル名 | * ] [/オプション /...]

        編集ファイル名:指定すると直接 編集画面を呼び出す
        * で前回最後に閉じたファイル/ディレクトリーをオープンする
        (注) ファイル名に 0,1,2 又は 6 を指定するとメニューのオプション
             とみなします.これらのファイル名のファイルを開く時は /B 又は
             /E オプションを指定するかあるいは一旦 編集ファイル名指定なし
             でメニューを表示した後 "E 0" などと入力して下さい.
        オプション    :大文字小文字の区別なし,順不同,重複は最後が有効

 オプション
    /B           :表示モードでファイルを開く
    /C           :コードページ(Windows)またはCharset(Linux)           ||~v124I~
                  国際化サポートを参照                                ||~v124I~
    /E           :編集モードでファイルを開く(省略値)
                  ファイル名が "0","1","2"や"6"などメニューオプションと
                  同じ場合に使用するとよい.
    /Fx[t][:hosts]:x=0:FTP 不使用, x=1:FTP 使用(log無し)
                   x=w:ftplog 出力, x=a:追加モード ftplog
                  :t:一時ファイルを削除しないDebug用オプション
                  :hosts: xe 用のホストファイル名。
            省略値は /F1:xehosts(xehostsはワークディレクトリー)
    /H,/?        :ヘルプ

#if defined(W32)
    /Hnn         :画面高(行数)
                  Windows2000ではDOS窓のプロンプトの現在の画面の高さで
                  内部画面行数が決まる。BufferSizeまでは広げられるので
                  そうしたいときに使用する。
#endif

    /I[fname]    :使用する iniファイル名.
                  使用しない時は単に /I とする,このとき内部定義の
                  省略値が使用されます.
                  無指定の時は XE.INI が使用される
    /Ln          :ファイルを開いたあとすぐ n行目にジャンプします。
                  VC++デバッガーを設定すると、設定したキーを押すと
                  VC++のカーソルのある行をxeで開いて表示できる。
                  VC++ v6 では Tool-->Customize-->Toolタブで xeを登録し
                  引数に "$(FilePath) /L$(CurLine)"を指定します。
                  実行時Dirは$(CurDir)にするとよいでしょう。
                  呼び出しキーは同じDialogでKeyboardタブを開き
                  Category:ToolのUserToolxに新しいショートカットを与えます。
    /R           :省略時ドライブ,現行ディレクトリーの設定
                  CD,d:コマンドで以前に設定した現行ディレクトリーから
                  現行ディレクトリーを,更にはそのドライブを省略時ドライブ
                  として設定する。
    /Tn          :タブ桁位置間隔,省略値 n=4
                                                                      ||~v124R~
#ifdef UTF8SUPP                                                       ||~v125R~
                                                                      ||~v125R~
    /U{F|N}{8|L}                                                      ||~v125R~
              UF  : ファイルテキストのエンコーディングの省略値の指定。||~v125R~
              UN  : ファイル名のエンコーディング解釈の省略値指定。    ||~v125R~
                                                                      ||~v125R~
             -省略値はUTF コマンドでも設定できます、個々での指定がUTFコマンドより優先します。||~v125R~
             -ファイルテキストのエンコーディグについて。              ||~v125R~
              File/Dir を開く時のCPU8/CPLCを指定するとプロファイルに保存されます||~v125R~
              優先順位は コマンドオプション->プロファイル->コマンドラインオプション->UTF8コマンド設定||~v125R~
              その後がLinuxの場合LANG環境変数に依存します。           ||~v125R~
             -ファイルごとの指定はEdit/Browseコマンドで               ||~v126R~
              CPU8/CPLC/CPAS, FNU8/FNLC/FNAS を使用します             ||~v126R~
#endif                                                                ||~v124R~
                                                                      ||~v124R~
    /Wxxxx       :ワークディレクトリ−名,環境変数設定 SET XE=xxxx の代り
                  UNIX以外では 両方指定の無いときはc:\xe_wd。
    /Y:x と /N:x :トグルスイッチ 設定(/Y)と設定解除(/N)
                  (省略時の値は括弧内に表示)
        x=a (/Na):制御文字を受付ける(/Na)かASCII文字のみ(/Ya)か
                  /Ya のとき INIファイルの Valid_Ctrl_char の指定は
                  無効になる                                       
        x=c (/Yc):修正行に変更タグを付与するか否か
        x=d (/Yd):内部エラー検知の時ダンプをとる/とらない
        x=l (/Yl):長いファイル名の使用.(GCC版のみ)
        x=n (/Nn):日本語入力処理をしない(WIN版のみ)
                  (Windows95/98では標準APIにDBCS入力の不備があるので
                  内部テーブルを参照する特殊処理をしています./Ynの指定で
                  標準APIに限定します.WindowsNT/2000/XPでは標準API処理で
                  DBCS入力の問題はありません.Windows9xの英語モードでも
                  /Yn 指定の必要はありません)
        x=r (/Nr):右Ctrlを実行キーとして使用する/しない
        x=rr(/Nrr):右Ctrlを改行キーとして使用する/しない(Rctrl ONの時にのみ有効)||~v124R~
        x=t (/Nt):タブ文字を表示する/しない
        x=v (/Yv):                                                    ||~v29WI~
           Windows Console版:                                         ||+v29WR~
                  表示幅が曖昧と定義されているユニコード文字を1桁で描画する。||~v29WI~
                  /Nvとするとそれらは全て２桁表示する。               ||~v29WI~
           wxe,gxe,Linux Console版:                                   ||+v29WR~
                  表示幅が曖昧と定義されているユニコード文字を1桁か２桁か内部的に判断する||~v29WI~
                  /Nvとするとそれらは全て２桁表示する。               ||~v29WI~
    //           :パラメータの終わり(これ以降は無視されます)
                  DOSKEYなどでコマンドを再表示した場合で余分なパラメータを
                  カットする場合に使用するとよい.

    これ以外にもEDIt/BROwseコマンドのパラメータを指定することができます

  入力例
        XE config.sys /T8 /Yrt /Nc
  (注)
     コマンドラインパラメータでのオプション変更はこのセッションに限り
     有効です.オプション保存ファイル(XE!SAVE!)への保存等は行われません.
#endif
